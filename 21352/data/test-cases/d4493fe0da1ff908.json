{"uid":"d4493fe0da1ff908","name":"test_type_inference[parameters46]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"3fcde8d3c40af199fd3ce750fc514354","time":{"start":1720647469598,"stop":1720647469599,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720647416065,"stop":1720647416065,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1720647469598,"stop":1720647469598,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"8aab3439848f9f4f","name":"log","source":"8aab3439848f9f4f.txt","type":"text/plain","size":341},{"uid":"575d2c605ef2504f","name":"stdout","source":"575d2c605ef2504f.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1720647469599,"stop":1720647469599,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"e49794e7c0c2"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': array([-128., -127., -126., ...,  997.,  998.,  999.]), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"8b0daec79b4f007d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21351//#testresult/8b0daec79b4f007d","status":"passed","time":{"start":1720647304635,"stop":1720647304636,"duration":1}},{"uid":"2fb34b67165a2d59","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21350//#testresult/2fb34b67165a2d59","status":"passed","time":{"start":1720646951877,"stop":1720646951877,"duration":0}},{"uid":"3a3a05301eed9b36","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21348//#testresult/3a3a05301eed9b36","status":"passed","time":{"start":1720646550256,"stop":1720646550256,"duration":0}},{"uid":"6be80b2e7ec7dcd4","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21341//#testresult/6be80b2e7ec7dcd4","status":"passed","time":{"start":1720640018371,"stop":1720640018372,"duration":1}},{"uid":"7bee3e1ded88398f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21340//#testresult/7bee3e1ded88398f","status":"passed","time":{"start":1720638027733,"stop":1720638027734,"duration":1}},{"uid":"c36b744084403c39","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21339//#testresult/c36b744084403c39","status":"passed","time":{"start":1720637367788,"stop":1720637367788,"duration":0}},{"uid":"8584bd122b72ff02","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21338//#testresult/8584bd122b72ff02","status":"passed","time":{"start":1720637236511,"stop":1720637236512,"duration":1}}]},"tags":[]},"source":"d4493fe0da1ff908.json","parameterValues":["{'data': array([-128., -127., -126., ...,  997.,  998.,  999.]), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}