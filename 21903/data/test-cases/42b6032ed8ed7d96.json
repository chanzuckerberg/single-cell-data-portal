{"uid":"42b6032ed8ed7d96","name":"test_type_inference[parameters82]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"eee034a321c3b0a84cfd6822f1545eb5","time":{"start":1724891533804,"stop":1724891533805,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1724891472746,"stop":1724891472746,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1724891533803,"stop":1724891533804,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"20582d0b60073b98","name":"log","source":"20582d0b60073b98.txt","type":"text/plain","size":341},{"uid":"af1031638741314a","name":"stdout","source":"af1031638741314a.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1724891533806,"stop":1724891533806,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"c25135898904"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, uint32): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"ec01e23900392db4","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21898//#testresult/ec01e23900392db4","status":"passed","time":{"start":1724878457906,"stop":1724878457907,"duration":1}},{"uid":"1da73605865938c0","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21890//#testresult/1da73605865938c0","status":"passed","time":{"start":1724781302070,"stop":1724781302071,"duration":1}},{"uid":"bd510cd6ce3cd0c6","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21879//#testresult/bd510cd6ce3cd0c6","status":"passed","time":{"start":1724687441620,"stop":1724687441621,"duration":1}},{"uid":"1a7782668409f5ab","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21867//#testresult/1a7782668409f5ab","status":"passed","time":{"start":1724352832222,"stop":1724352832223,"duration":1}},{"uid":"51049ddb7c49a4c6","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21860//#testresult/51049ddb7c49a4c6","status":"passed","time":{"start":1724286703566,"stop":1724286703567,"duration":1}},{"uid":"810dda670dbadd82","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21859//#testresult/810dda670dbadd82","status":"passed","time":{"start":1724285182016,"stop":1724285182017,"duration":1}},{"uid":"31a4c9a6f38ceb33","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21857//#testresult/31a4c9a6f38ceb33","status":"passed","time":{"start":1724281806809,"stop":1724281806810,"duration":1}}]},"tags":[]},"source":"42b6032ed8ed7d96.json","parameterValues":["{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, uint32): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}