{"uid":"c1666fc9ea261463","name":"test_type_inference[parameters78]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"da7b3d13ff5252b5b1026466cf6d1f83","time":{"start":1724891533785,"stop":1724891533786,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1724891472746,"stop":1724891472746,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1724891533784,"stop":1724891533784,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"90970fc5930d9aa2","name":"log","source":"90970fc5930d9aa2.txt","type":"text/plain","size":341},{"uid":"3067d6ae4b32f467","name":"stdout","source":"3067d6ae4b32f467.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1724891533786,"stop":1724891533786,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"c25135898904"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, uint16): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"a284648ea3d8272d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21898//#testresult/a284648ea3d8272d","status":"passed","time":{"start":1724878457887,"stop":1724878457888,"duration":1}},{"uid":"a5767c19b0aa3bbe","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21890//#testresult/a5767c19b0aa3bbe","status":"passed","time":{"start":1724781302050,"stop":1724781302051,"duration":1}},{"uid":"cd5c5e16a1aaf778","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21879//#testresult/cd5c5e16a1aaf778","status":"passed","time":{"start":1724687441598,"stop":1724687441599,"duration":1}},{"uid":"71197034a09dd699","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21867//#testresult/71197034a09dd699","status":"passed","time":{"start":1724352832202,"stop":1724352832203,"duration":1}},{"uid":"c47b0955ffe2a730","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21860//#testresult/c47b0955ffe2a730","status":"passed","time":{"start":1724286703546,"stop":1724286703547,"duration":1}},{"uid":"a6ae36d49d4e49a5","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21859//#testresult/a6ae36d49d4e49a5","status":"passed","time":{"start":1724285181997,"stop":1724285181998,"duration":1}},{"uid":"3926a340b7d4db28","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21857//#testresult/3926a340b7d4db28","status":"passed","time":{"start":1724281806790,"stop":1724281806790,"duration":0}}]},"tags":[]},"source":"c1666fc9ea261463.json","parameterValues":["{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, uint16): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}