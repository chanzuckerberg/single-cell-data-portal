{"uid":"3de27f7c16ee2d24","name":"test_type_inference[parameters48]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"55ca2d06df3963797669e9c963ac7a55","time":{"start":1702926366422,"stop":1702926366422,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1702926351049,"stop":1702926351049,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1702926366421,"stop":1702926366421,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"ff731c39576d2c2c","name":"log","source":"ff731c39576d2c2c.txt","type":"text/plain","size":341},{"uid":"d58c9d2a225febec","name":"stderr","source":"d58c9d2a225febec.txt","type":"text/plain","size":852}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1702926366423,"stop":1702926366423,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"857d84e53e07"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': Float64Index([-129.0, -128.0, -127.0, -126.0, -125.0, -124.0, -123.0, -122.0,\n              -121.0, -120.0,\n              ...\n               990.0,  991.0,  992.0,  993.0,  994.0,  995.0,  996.0,  997.0,\n               998.0,  999.0],\n             dtype='float64', length=1129), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c5c44aa4ef9b0eff","status":"passed","time":{"start":1702926366398,"stop":1702926366399,"duration":1}},{"uid":"3621a7fb7631174b","status":"passed","time":{"start":1702926366376,"stop":1702926366377,"duration":1}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":5},"items":[{"uid":"efbf68809bdac08b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17935//#testresult/efbf68809bdac08b","status":"passed","time":{"start":1702925519127,"stop":1702925519128,"duration":1}},{"uid":"315f3caadc72f5b5","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17934//#testresult/315f3caadc72f5b5","status":"passed","time":{"start":1702925452914,"stop":1702925452915,"duration":1}},{"uid":"a0cbe869ed250a55","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17933//#testresult/a0cbe869ed250a55","status":"passed","time":{"start":1702924128086,"stop":1702924128087,"duration":1}},{"uid":"11d5dc71c0e44921","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17882//#testresult/11d5dc71c0e44921","status":"passed","time":{"start":1702513219312,"stop":1702513219312,"duration":0}}]},"tags":[]},"source":"3de27f7c16ee2d24.json","parameterValues":["{'data': Float64Index([-129.0, -128.0, -127.0, -126.0, -125.0, -124.0, -123.0, -122.0,\n              -121.0, -120.0,\n              ...\n               990.0,  991.0,  992.0,  993.0,  994.0,  995.0,  996.0,  997.0,\n               998.0,  999.0],\n             dtype='float64', length=1129), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}