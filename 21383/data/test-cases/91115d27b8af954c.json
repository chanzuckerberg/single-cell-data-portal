{"uid":"91115d27b8af954c","name":"test_type_inference[parameters8]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"92da0ab5fed2b6447ca55b86955a8377","time":{"start":1720668473586,"stop":1720668473587,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720668415817,"stop":1720668415817,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1720668473586,"stop":1720668473586,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1720668473587,"stop":1720668473587,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"1ed2011aa593"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': UInt64Index([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,\n             ...\n             222, 223, 224, 225, 226, 227, 228, 229, 230, 231],\n            dtype='uint64', length=1000), 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":9,"unknown":0,"total":9},"items":[{"uid":"cf8a37f7ea200de","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21381//#testresult/cf8a37f7ea200de","status":"passed","time":{"start":1720667368910,"stop":1720667368911,"duration":1}},{"uid":"c94acd0dceccf7e4","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21380//#testresult/c94acd0dceccf7e4","status":"passed","time":{"start":1720663187556,"stop":1720663187557,"duration":1}},{"uid":"34566549694be1b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21379//#testresult/34566549694be1b","status":"passed","time":{"start":1720663113448,"stop":1720663113449,"duration":1}},{"uid":"1b3ef489fa943592","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21377//#testresult/1b3ef489fa943592","status":"passed","time":{"start":1720662780734,"stop":1720662780735,"duration":1}},{"uid":"aa14d889be6a569","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21376//#testresult/aa14d889be6a569","status":"passed","time":{"start":1720657324056,"stop":1720657324057,"duration":1}},{"uid":"5bac82945ffff07c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21375//#testresult/5bac82945ffff07c","status":"passed","time":{"start":1720656981847,"stop":1720656981847,"duration":0}},{"uid":"b31fb04d6389a84d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21373//#testresult/b31fb04d6389a84d","status":"passed","time":{"start":1720656033715,"stop":1720656033715,"duration":0}},{"uid":"cabecd8095583297","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21372//#testresult/cabecd8095583297","status":"passed","time":{"start":1720655800761,"stop":1720655800762,"duration":1}}]},"tags":[]},"source":"91115d27b8af954c.json","parameterValues":["{'data': UInt64Index([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,\n             ...\n             222, 223, 224, 225, 226, 227, 228, 229, 230, 231],\n            dtype='uint64', length=1000), 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}