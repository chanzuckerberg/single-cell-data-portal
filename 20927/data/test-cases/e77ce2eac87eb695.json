{"uid":"e77ce2eac87eb695","name":"test_type_inference[parameters4]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"e10df5aaf246e00996315387202528ab","time":{"start":1719345908310,"stop":1719345908311,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1719345893533,"stop":1719345893533,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1719345908310,"stop":1719345908310,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1719345908312,"stop":1719345908312,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"9c95668c70b8"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': Int64Index([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,\n            ...\n            -34, -33, -32, -31, -30, -29, -28, -27, -26, -25],\n           dtype='int64', length=1000), 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":9,"unknown":0,"total":9},"items":[{"uid":"7e844061519712bd","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20918//#testresult/7e844061519712bd","status":"passed","time":{"start":1719334939891,"stop":1719334939892,"duration":1}},{"uid":"58542d4db6cbd35f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20919//#testresult/58542d4db6cbd35f","status":"passed","time":{"start":1719335052257,"stop":1719335052258,"duration":1}},{"uid":"6d2dfaff37977fdf","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20911//#testresult/6d2dfaff37977fdf","status":"passed","time":{"start":1719270612510,"stop":1719270612510,"duration":0}},{"uid":"1faa8848f4dbf4db","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20910//#testresult/1faa8848f4dbf4db","status":"passed","time":{"start":1719270570940,"stop":1719270570940,"duration":0}},{"uid":"8cdd1f7fc8ed5328","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20907//#testresult/8cdd1f7fc8ed5328","status":"passed","time":{"start":1719266525061,"stop":1719266525062,"duration":1}},{"uid":"c829ad2f656cfd6c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20894//#testresult/c829ad2f656cfd6c","status":"passed","time":{"start":1718992365512,"stop":1718992365513,"duration":1}},{"uid":"eb2cfc92ffd4e755","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20889//#testresult/eb2cfc92ffd4e755","status":"passed","time":{"start":1718988862682,"stop":1718988862683,"duration":1}},{"uid":"c87ad07464bd698f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20887//#testresult/c87ad07464bd698f","status":"passed","time":{"start":1718925649739,"stop":1718925649740,"duration":1}}]},"tags":[]},"source":"e77ce2eac87eb695.json","parameterValues":["{'data': Int64Index([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,\n            ...\n            -34, -33, -32, -31, -30, -29, -28, -27, -26, -25],\n           dtype='int64', length=1000), 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}