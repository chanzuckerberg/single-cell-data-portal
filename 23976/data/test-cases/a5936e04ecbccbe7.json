{"uid":"a5936e04ecbccbe7","name":"test_type_inference[parameters13]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"b7acf05d60a20089d000d2bb1d4fb63a","time":{"start":1744383515288,"stop":1744383515288,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744383505005,"stop":1744383505005,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744383515287,"stop":1744383515287,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1744383515289,"stop":1744383515289,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"75723b7251fe"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': <Compressed Sparse Row sparse matrix of dtype 'int16'\n\twith 0 stored elements and shape (10, 100)>, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"15ac664a6cc1efac","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23975//#testresult/15ac664a6cc1efac","status":"passed","time":{"start":1744337376829,"stop":1744337376829,"duration":0}},{"uid":"f259d7bea52e8cdc","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23966//#testresult/f259d7bea52e8cdc","status":"passed","time":{"start":1744334800233,"stop":1744334800233,"duration":0}},{"uid":"93c1b263f067068e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23965//#testresult/93c1b263f067068e","status":"passed","time":{"start":1744328197539,"stop":1744328197539,"duration":0}},{"uid":"213e1952c11870e2","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23964//#testresult/213e1952c11870e2","status":"passed","time":{"start":1744326572474,"stop":1744326572475,"duration":1}},{"uid":"73760229d4c625d6","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23961//#testresult/73760229d4c625d6","status":"passed","time":{"start":1744324473102,"stop":1744324473103,"duration":1}},{"uid":"dffaf95958d8e453","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23954//#testresult/dffaf95958d8e453","status":"passed","time":{"start":1744324189275,"stop":1744324189275,"duration":0}},{"uid":"c69c42a4128fedf5","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23951//#testresult/c69c42a4128fedf5","status":"passed","time":{"start":1744322847356,"stop":1744322847356,"duration":0}},{"uid":"b7dba320ae18a9ce","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23950//#testresult/b7dba320ae18a9ce","status":"passed","time":{"start":1744317734315,"stop":1744317734316,"duration":1}},{"uid":"2d96e3d25e135dba","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23949//#testresult/2d96e3d25e135dba","status":"passed","time":{"start":1744316549133,"stop":1744316549133,"duration":0}}]},"tags":[]},"source":"a5936e04ecbccbe7.json","parameterValues":["{'data': <Compressed Sparse Row sparse matrix of dtype 'int16'\n\twith 0 stored elements and shape (10, 100)>, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}