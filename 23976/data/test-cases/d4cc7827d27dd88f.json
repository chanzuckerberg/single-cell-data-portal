{"uid":"d4cc7827d27dd88f","name":"test_type_inference[parameters66]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"91224015dcff41475aadac5cca97c8e4","time":{"start":1744383515514,"stop":1744383515515,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744383505005,"stop":1744383505005,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744383515513,"stop":1744383515513,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1744383515515,"stop":1744383515515,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"75723b7251fe"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0    0.0\n1    1.0\n2    2.0\ndtype: category\nCategories (3, float32): [0.0, 1.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': None}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"ac3c60584bafbb57","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23975//#testresult/ac3c60584bafbb57","status":"passed","time":{"start":1744337377071,"stop":1744337377071,"duration":0}},{"uid":"3d8cced5cf63fd44","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23966//#testresult/3d8cced5cf63fd44","status":"passed","time":{"start":1744334800457,"stop":1744334800458,"duration":1}},{"uid":"45ddaae6251b7334","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23965//#testresult/45ddaae6251b7334","status":"passed","time":{"start":1744328197761,"stop":1744328197761,"duration":0}},{"uid":"84d287bf15223822","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23964//#testresult/84d287bf15223822","status":"passed","time":{"start":1744326572700,"stop":1744326572701,"duration":1}},{"uid":"5d7a90181a15ee0c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23961//#testresult/5d7a90181a15ee0c","status":"passed","time":{"start":1744324473327,"stop":1744324473328,"duration":1}},{"uid":"2bada262851c95da","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23954//#testresult/2bada262851c95da","status":"passed","time":{"start":1744324189502,"stop":1744324189502,"duration":0}},{"uid":"b1657932fec578d3","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23951//#testresult/b1657932fec578d3","status":"passed","time":{"start":1744322847587,"stop":1744322847587,"duration":0}},{"uid":"307257a1eb299235","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23950//#testresult/307257a1eb299235","status":"passed","time":{"start":1744317734537,"stop":1744317734537,"duration":0}},{"uid":"84e6147180b95806","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23949//#testresult/84e6147180b95806","status":"passed","time":{"start":1744316549356,"stop":1744316549357,"duration":1}}]},"tags":[]},"source":"d4cc7827d27dd88f.json","parameterValues":["{'data': 0    0.0\n1    1.0\n2    2.0\ndtype: category\nCategories (3, float32): [0.0, 1.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': None}"]}