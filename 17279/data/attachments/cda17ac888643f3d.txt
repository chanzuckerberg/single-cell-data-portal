{"levelname": "INFO", "asctime": "2023-11-11T01:29:51.011Z", "name": "corpora-api-test", "message": "", "lineno": 163, "pathname": "/single-cell-data-portal/backend/api_server/app.py", "request_id": "4fe8c06c-dddf-4cae-8010-9116626055de", "type": "REQUEST", "details": {"url": "/wmg/v2/query", "method": "POST", "content_length": 127}}
{"levelname": "INFO", "asctime": "2023-11-11T01:29:51.011Z", "name": "wmg-v2-api", "message": "PRATHAP!!! Profiler stats:          11679 function calls (11574 primitive calls) in 0.036 seconds\n\n   Ordered by: cumulative time\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n        5    0.000    0.000    0.036    0.007 tracer.py:952(func_wrapper)\n        5    0.000    0.000    0.036    0.007 query.py:87(expression_summary)\n        5    0.006    0.001    0.036    0.007 query.py:121(_query)\n        5    0.000    0.000    0.025    0.005 _decorators.py:323(wrapper)\n        5    0.000    0.000    0.025    0.005 concat.py:146(concat)\n        5    0.000    0.000    0.024    0.005 concat.py:389(__init__)\n       10    0.000    0.000    0.024    0.002 multirange_indexing.py:288(__iter__)\n        5    0.015    0.003    0.024    0.005 multirange_indexing.py:393(_run_query)\n        5    0.000    0.000    0.007    0.001 {method 'to_pandas' of 'pyarrow.lib._PandasConvertible' objects}\n        5    0.000    0.000    0.007    0.001 pandas_compat.py:797(table_to_blockmanager)\n        5    0.000    0.000    0.005    0.001 pandas_compat.py:903(_deserialize_column_index)\n        5    0.000    0.000    0.004    0.001 multi.py:198(new_meth)\n        5    0.000    0.000    0.004    0.001 multi.py:501(from_tuples)\n        5    0.000    0.000    0.004    0.001 multi.py:435(from_arrays)\n        5    0.000    0.000    0.003    0.001 categorical.py:2986(factorize_from_iterables)\n       10    0.000    0.000    0.003    0.000 categorical.py:3007(<genexpr>)\n        5    0.000    0.000    0.003    0.001 categorical.py:2945(factorize_from_iterable)\n        5    0.000    0.000    0.003    0.001 categorical.py:368(__init__)\n        5    0.000    0.000    0.002    0.000 multirange_indexing.py:250(__getitem__)\n        5    0.000    0.000    0.001    0.000 pandas_compat.py:1163(_table_to_blocks)\n        5    0.000    0.000    0.001    0.000 pandas_compat.py:1174(_flatten_single_level_multiindex)\n       20    0.000    0.000    0.001    0.000 dtypes.py:185(__init__)\n       20    0.000    0.000    0.001    0.000 dtypes.py:334(_finalize)\n       10    0.000    0.000    0.001    0.000 dtypes.py:507(validate_categories)\n    15/10    0.000    0.000    0.001    0.000 base.py:430(__new__)\n1662/1642    0.000    0.000    0.001    0.000 {built-in method builtins.isinstance}\n        5    0.000    0.000    0.001    0.000 multirange_indexing.py:313(_set_ranges)\n        5    0.000    0.000    0.001    0.000 multirange_indexing.py:304(_set_pyquery)\n        5    0.001    0.000    0.001    0.000 {pyarrow.lib.table_to_blocks}\n        5    0.001    0.000    0.001    0.000 multirange_indexing.py:545(_get_pyquery)\n        5    0.000    0.000    0.001    0.000 multirange_indexing.py:366(__init__)\n        5    0.000    0.000    0.001    0.000 concat.py:565(get_result)\n        5    0.000    0.000    0.001    0.000 algorithms.py:593(factorize)\n        5    0.001    0.000    0.001    0.000 dtypes.py:208(_from_values_or_dtype)\n        5    0.000    0.000    0.001    0.000 base.py:708(_with_infer)\n      102    0.000    0.000    0.001    0.000 array_schema.py:318(attr)\n        5    0.000    0.000    0.001    0.000 multirange_indexing.py:186(getitem_ranges)\n        5    0.000    0.000    0.001    0.000 query.py:154(<listcomp>)\n        5    0.000    0.000    0.001    0.000 pandas_compat.py:1170(<listcomp>)\n       15    0.000    0.000    0.001    0.000 pandas_compat.py:726(_reconstruct_block)\n        5    0.000    0.000    0.001    0.000 concat.py:176(concatenate_managers)\n        5    0.000    0.000    0.001    0.000 dataframe_.py:15(check_dataframe_deps)\n       15    0.000    0.000    0.000    0.000 api.py:36(make_block)\n       10    0.000    0.000    0.000    0.000 base.py:2381(is_unique)\n       70    0.000    0.000    0.000    0.000 array_schema.py:155(<genexpr>)\n        5    0.000    0.000    0.000    0.000 {method 'cast' of 'pyarrow.lib.Table' objects}\n       20    0.000    0.000    0.000    0.000 version.py:186(__init__)\n      172    0.000    0.000    0.000    0.000 ctx.py:425(from_pybind11)\n        5    0.000    0.000    0.000    0.000 {method 'nonempty_domain' of 'tiledb.libtiledb.Array' objects}\n        5    0.000    0.000    0.000    0.000 algorithms.py:530(factorize_array)\n      415    0.000    0.000    0.000    0.000 generic.py:45(_instancecheck)\n        5    0.000    0.000    0.000    0.000 concat.py:631(_get_new_axes)\n        5    0.000    0.000    0.000    0.000 multi.py:1108(_engine)\n        5    0.000    0.000    0.000    0.000 concat.py:633(<listcomp>)\n      177    0.000    0.000    0.000    0.000 ctx.py:404(__init__)\n       72    0.000    0.000    0.000    0.000 attribute.py:102(dtype)\n       15    0.000    0.000    0.000    0.000 {built-in method builtins.any}\n      111    0.000    0.000    0.000    0.000 numerictypes.py:356(issubdtype)\n       10    0.000    0.000    0.000    0.000 construction.py:493(sanitize_array)\n        5    0.000    0.000    0.000    0.000 query.py:66(get_indexed_dims_to_lookup_query_criteria)\n        5    0.000    0.000    0.000    0.000 concat.py:199(<listcomp>)\n       26    0.000    0.000    0.000    0.000 multirange_indexing.py:381(<genexpr>)\n        5    0.000    0.000    0.000    0.000 query.py:69(get_attrs_for_cube_query)\n        5    0.000    0.000    0.000    0.000 concat.py:278(_get_mgr_concatenation_plan)\n       50    0.000    0.000    0.000    0.000 base.py:286(is_dtype)\n        5    0.000    0.000    0.000    0.000 tracer.py:783(trace)\n        5    0.000    0.000    0.000    0.000 algorithms.py:1795(safe_sort)\n        5    0.000    0.000    0.000    0.000 query.py:70(<listcomp>)\n        5    0.000    0.000    0.000    0.000 concat.py:638(_get_comb_axis)\n       31    0.000    0.000    0.000    0.000 compute.py:334(cast)\n       15    0.000    0.000    0.000    0.000 common.py:235(asarray_tuplesafe)\n        5    0.000    0.000    0.000    0.000 span.py:546(__exit__)\n       10    0.000    0.000    0.000    0.000 managers.py:997(__init__)\n        5    0.000    0.000    0.000    0.000 algorithms.py:269(_get_hashtable_algo)\n        5    0.000    0.000    0.000    0.000 span.py:260(finish)\n        5    0.000    0.000    0.000    0.000 api.py:78(get_objs_combined_axis)\n      415    0.000    0.000    0.000    0.000 generic.py:40(_check)\n        5    0.000    0.000    0.000    0.000 tracer.py:572(_start_span)\n        5    0.000    0.000    0.000    0.000 span.py:272(_finish_ns)\n       10    0.000    0.000    0.000    0.000 {pandas._libs.lib.maybe_convert_objects}\n        5    0.000    0.000    0.000    0.000 pandas_compat.py:943(_reconstruct_index)\n       25    0.000    0.000    0.000    0.000 array_schema.py:257(domain)\n        5    0.000    0.000    0.000    0.000 tracer.py:750(_on_span_finish)\n        5    0.000    0.000    0.000    0.000 base.py:2824(hasnans)\n       10    0.000    0.000    0.000    0.000 managers.py:1040(_verify_integrity)\n        5    0.000    0.000    0.000    0.000 api.py:122(_get_combined_index)\n        5    0.000    0.000    0.000    0.000 base.py:7396(_maybe_cast_data_without_dtype)\n        5    0.000    0.000    0.000    0.000 multi.py:302(__new__)\n        5    0.000    0.000    0.000    0.000 pandas_compat.py:1187(<listcomp>)\n  565/485    0.000    0.000    0.000    0.000 {built-in method builtins.len}\n        5    0.000    0.000    0.000    0.000 algorithms.py:287(_check_object_for_strings)\n        5    0.000    0.000    0.000    0.000 base.py:5464(equals)\n      222    0.000    0.000    0.000    0.000 numerictypes.py:282(issubclass_)\n      265    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:404(parent)\n       21    0.000    0.000    0.000    0.000 {method 'attr' of 'tiledb.libtiledb.Array' objects}\n        5    0.000    0.000    0.000    0.000 subarray.py:20(__init__)\n        5    0.000    0.000    0.000    0.000 query.py:67(<listcomp>)\n        5    0.000    0.000    0.000    0.000 base.py:1268(copy)\n        5    0.000    0.000    0.000    0.000 range.py:118(__new__)\n        5    0.000    0.000    0.000    0.000 query.py:72(get_dims_for_cube_query)\n       10    0.000    0.000    0.000    0.000 {pandas._libs.lib.infer_dtype}\n       40    0.000    0.000    0.000    0.000 domain.py:93(<genexpr>)\n        5    0.000    0.000    0.000    0.000 {method 'query' of 'tiledb.libtiledb.SparseArrayImpl' objects}\n       85    0.000    0.000    0.000    0.000 abc.py:117(__instancecheck__)\n       10    0.000    0.000    0.000    0.000 base.py:588(_dtype_to_subclass)\n       20    0.000    0.000    0.000    0.000 {method 'search' of 're.Pattern' objects}\n       31    0.000    0.000    0.000    0.000 {pyarrow._compute.call_function}\n        5    0.000    0.000    0.000    0.000 base.py:2811(_isnan)\n        5    0.000    0.000    0.000    0.000 dtypes.py:544(update_dtype)\n       10    0.000    0.000    0.000    0.000 construction.py:744(_try_cast)\n        5    0.000    0.000    0.000    0.000 take.py:57(take_nd)\n        5    0.000    0.000    0.000    0.000 missing.py:108(isna)\n       15    0.000    0.000    0.000    0.000 multirange_indexing.py:169(dim_ranges_from_selection)\n       20    0.000    0.000    0.000    0.000 base.py:54(shape)\n        5    0.000    0.000    0.000    0.000 subarray.py:53(add_ranges)\n       85    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}\n        5    0.000    0.000    0.000    0.000 missing.py:191(_isna)\n       15    0.000    0.000    0.000    0.000 common.py:427(is_period_dtype)\n      458    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}\n        5    0.000    0.000    0.000    0.000 multirange_indexing.py:665(_update_df_from_meta)\n        5    0.000    0.000    0.000    0.000 warnings.py:130(filterwarnings)\n        5    0.000    0.000    0.000    0.000 query.py:73(<listcomp>)\n        5    0.000    0.000    0.000    0.000 concat.py:648(_get_concat_axis)\n        5    0.000    0.000    0.000    0.000 {method 'factorize' of 'pandas._libs.hashtable.StringHashTable' objects}\n        5    0.000    0.000    0.000    0.000 take.py:120(_take_nd_ndarray)\n       10    0.000    0.000    0.000    0.000 frame.py:609(__init__)\n       55    0.000    0.000    0.000    0.000 common.py:1591(_is_dtype_type)\n        5    0.000    0.000    0.000    0.000 {pyarrow.lib.schema}\n       15    0.000    0.000    0.000    0.000 common.py:352(is_datetime64tz_dtype)\n       20    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}\n       20    0.000    0.000    0.000    0.000 base.py:7372(maybe_extract_name)\n       10    0.000    0.000    0.000    0.000 provider.py:136(active)\n        5    0.000    0.000    0.000    0.000 __init__.py:299(loads)\n       10    0.000    0.000    0.000    0.000 numeric.py:289(full)\n        5    0.000    0.000    0.000    0.000 multi.py:794(_set_levels)\n        5    0.000    0.000    0.000    0.000 base.py:1752(_validate_names)\n       15    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}\n      535    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}\n       20    0.000    0.000    0.000    0.000 contextlib.py:279(helper)\n       15    0.000    0.000    0.000    0.000 dtypes.py:977(is_dtype)\n       10    0.000    0.000    0.000    0.000 common.py:501(is_categorical_dtype)\n       20    0.000    0.000    0.000    0.000 construction.py:399(extract_array)\n       15    0.000    0.000    0.000    0.000 domain.py:166(dim)\n        5    0.000    0.000    0.000    0.000 __init__.py:183(dumps)\n       10    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.ndarray' objects}\n       25    0.000    0.000    0.000    0.000 base.py:690(_simple_new)\n        5    0.000    0.000    0.000    0.000 tracer.py:855(current_span)\n       31    0.000    0.000    0.000    0.000 base.py:5304(__getitem__)\n       27    0.000    0.000    0.000    0.000 multirange_indexing.py:174(<genexpr>)\n       15    0.000    0.000    0.000    0.000 typing.py:993(__instancecheck__)\n       20    0.000    0.000    0.000    0.000 version.py:503(_cmpkey)\n        5    0.000    0.000    0.000    0.000 encoder.py:182(encode)\n       40    0.000    0.000    0.000    0.000 {built-in method builtins.all}\n       20    0.000    0.000    0.000    0.000 common.py:162(is_object_dtype)\n       20    0.000    0.000    0.000    0.000 contextlib.py:130(__enter__)\n       10    0.000    0.000    0.000    0.000 algorithms.py:197(_reconstruct_data)\n        5    0.000    0.000    0.000    0.000 decoder.py:332(decode)\n        5    0.000    0.000    0.000    0.000 base.py:881(_engine)\n       10    0.000    0.000    0.000    0.000 _methods.py:54(_any)\n       15    0.000    0.000    0.000    0.000 base.py:821(_view)\n       60    0.000    0.000    0.000    0.000 base.py:56(<genexpr>)\n       15    0.000    0.000    0.000    0.000 dimension.py:182(dtype)\n       76    0.000    0.000    0.000    0.000 abc.py:121(__subclasscheck__)\n       52    0.000    0.000    0.000    0.000 array_schema.py:345(has_attr)\n       15    0.000    0.000    0.000    0.000 blocks.py:2186(check_ndim)\n       40    0.000    0.000    0.000    0.000 {built-in method builtins.next}\n        5    0.000    0.000    0.000    0.000 algorithms.py:117(_ensure_data)\n        5    0.000    0.000    0.000    0.000 cast.py:1178(maybe_infer_to_datetimelike)\n       10    0.000    0.000    0.000    0.000 provider.py:130(activate)\n        5    0.000    0.000    0.000    0.000 generic.py:5844(__finalize__)\n        5    0.000    0.000    0.000    0.000 multi.py:119(_codes_to_ints)\n        5    0.000    0.000    0.000    0.000 missing.py:460(array_equivalent)\n       10    0.000    0.000    0.000    0.000 provider.py:96(_update_active)\n        5    0.000    0.000    0.000    0.000 concat.py:708(_concat_indexes)\n       15    0.000    0.000    0.000    0.000 warnings.py:181(_add_filter)\n       20    0.000    0.000    0.000    0.000 contextlib.py:102(__init__)\n        5    0.000    0.000    0.000    0.000 missing.py:268(_isna_array)\n       15    0.000    0.000    0.000    0.000 common.py:1246(is_float_dtype)\n        5    0.000    0.000    0.000    0.000 <__array_function__ internals>:177(cumsum)\n        5    0.000    0.000    0.000    0.000 multi.py:988(_set_codes)\n      227    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x55d10e40a9a0}\n       15    0.000    0.000    0.000    0.000 _dtype.py:344(_name_get)\n       10    0.000    0.000    0.000    0.000 generic.py:259(__init__)\n       15    0.000    0.000    0.000    0.000 typing.py:1154(__subclasscheck__)\n        5    0.000    0.000    0.000    0.000 managers.py:172(blknos)\n        5    0.000    0.000    0.000    0.000 trace.py:210(on_span_finish)\n       24    0.000    0.000    0.000    0.000 multirange_indexing.py:108(iter_ranges)\n        5    0.000    0.000    0.000    0.000 pandas_compat.py:835(_get_extension_dtypes)\n       15    0.000    0.000    0.000    0.000 blocks.py:2091(maybe_coerce_values)\n        5    0.000    0.000    0.000    0.000 base.py:5377(append)\n       20    0.000    0.000    0.000    0.000 {built-in method builtins.sum}\n       10    0.000    0.000    0.000    0.000 base.py:830(_rename)\n        5    0.000    0.000    0.000    0.000 encoder.py:204(iterencode)\n       25    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1053(_handle_fromlist)\n       20    0.000    0.000    0.000    0.000 contextlib.py:139(__exit__)\n       10    0.000    0.000    0.000    0.000 warnings.py:165(simplefilter)\n        5    0.000    0.000    0.000    0.000 {method '_rebuild_blknos_and_blklocs' of 'pandas._libs.internals.BlockManager' objects}\n       15    0.000    0.000    0.000    0.000 blocks.py:2120(get_block_type)\n        5    0.000    0.000    0.000    0.000 span.py:100(__init__)\n       15    0.000    0.000    0.000    0.000 blocks.py:2228(extract_pandas_array)\n        5    0.000    0.000    0.000    0.000 missing.py:564(_array_equivalent_object)\n        5    0.000    0.000    0.000    0.000 missing.py:309(_isna_string_dtype)\n       40    0.000    0.000    0.000    0.000 multirange_indexing.py:62(timing)\n       10    0.000    0.000    0.000    0.000 <__array_function__ internals>:177(copyto)\n        5    0.000    0.000    0.000    0.000 fromnumeric.py:2497(cumsum)\n       15    0.000    0.000    0.000    0.000 warnings.py:458(__enter__)\n        5    0.000    0.000    0.000    0.000 multi.py:783(levels)\n        5    0.000    0.000    0.000    0.000 _collections_abc.py:821(get)\n       72    0.000    0.000    0.000    0.000 multirange_indexing.py:237(array)\n        5    0.000    0.000    0.000    0.000 {pandas._libs.lib.to_object_array_tuples}\n       76    0.000    0.000    0.000    0.000 {built-in method _abc._abc_subclasscheck}\n       10    0.000    0.000    0.000    0.000 multi.py:815(<genexpr>)\n       50    0.000    0.000    0.000    0.000 attribute.py:111(name)\n       15    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}\n       10    0.000    0.000    0.000    0.000 cast.py:1004(coerce_indexer_dtype)\n       10    0.000    0.000    0.000    0.000 array_schema.py:153(__iter__)\n       30    0.000    0.000    0.000    0.000 common.py:1487(is_ea_or_datetimelike_dtype)\n       40    0.000    0.000    0.000    0.000 managers.py:1042(<genexpr>)\n        5    0.000    0.000    0.000    0.000 re.py:249(compile)\n       10    0.000    0.000    0.000    0.000 multi.py:1004(<genexpr>)\n        5    0.000    0.000    0.000    0.000 fromnumeric.py:51(_wrapfunc)\n       10    0.000    0.000    0.000    0.000 common.py:790(is_unsigned_integer_dtype)\n        5    0.000    0.000    0.000    0.000 {built-in method pandas._libs.missing.isnaobj}\n        5    0.000    0.000    0.000    0.000 trace.py:202(on_span_start)\n       10    0.000    0.000    0.000    0.000 domain.py:91(__iter__)\n       12    0.000    0.000    0.000    0.000 multirange_indexing.py:100(to_scalar)\n      265    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}\n        5    0.000    0.000    0.000    0.000 concat.py:476(<listcomp>)\n        5    0.000    0.000    0.000    0.000 re.py:288(_compile)\n        5    0.000    0.000    0.000    0.000 <__array_function__ internals>:177(concatenate)\n        5    0.000    0.000    0.000    0.000 os.py:675(__getitem__)\n       50    0.000    0.000    0.000    0.000 base.py:925(__len__)\n       40    0.000    0.000    0.000    0.000 dimension.py:191(name)\n        5    0.000    0.000    0.000    0.000 multi.py:788(<listcomp>)\n       25    0.000    0.000    0.000    0.000 construction.py:461(ensure_wrapped_if_datetimelike)\n       70    0.000    0.000    0.000    0.000 version.py:205(<genexpr>)\n        5    0.000    0.000    0.000    0.000 pandas_compat.py:1194(_add_any_metadata)\n       10    0.000    0.000    0.000    0.000 frozen.py:70(__getitem__)\n       10    0.000    0.000    0.000    0.000 provider.py:46(activate)\n       65    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_list_like}\n        5    0.000    0.000    0.000    0.000 array_schema.py:173(sparse)\n        5    0.000    0.000    0.000    0.000 base.py:5116(_get_engine_target)\n       10    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}\n        5    0.000    0.000    0.000    0.000 cast.py:1763(construct_1d_object_array_from_listlike)\n      200    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}\n        5    0.000    0.000    0.000    0.000 range.py:173(_simple_new)\n       10    0.000    0.000    0.000    0.000 common.py:736(is_signed_integer_dtype)\n        5    0.000    0.000    0.000    0.000 __init__.py:77(_get_metas_to_propagate)\n       20    0.000    0.000    0.000    0.000 {built-in method tiledb.main.use_stats}\n        5    0.000    0.000    0.000    0.000 {method 'cumsum' of 'numpy.ndarray' objects}\n        5    0.000    0.000    0.000    0.000 api.py:108(_get_distinct_objs)\n        5    0.000    0.000    0.000    0.000 {pandas._libs.algos.take_1d_int64_int64}\n        5    0.000    0.000    0.000    0.000 categorical.py:764(codes)\n        5    0.000    0.000    0.000    0.000 common.py:1725(validate_all_hashable)\n       15    0.000    0.000    0.000    0.000 warnings.py:477(__exit__)\n       10    0.000    0.000    0.000    0.000 typing.py:306(inner)\n        5    0.000    0.000    0.000    0.000 decoder.py:343(raw_decode)\n       25    0.000    0.000    0.000    0.000 inference.py:325(is_hashable)\n        5    0.000    0.000    0.000    0.000 {pandas._libs.lib.infer_datetimelike_array}\n       31    0.000    0.000    0.000    0.000 common.py:151(cast_scalar_indexer)\n       10    0.000    0.000    0.000    0.000 ctx.py:495(default_ctx)\n        5    0.000    0.000    0.000    0.000 multi.py:3934(_coerce_indexer_frozen)\n       15    0.000    0.000    0.000    0.000 warnings.py:437(__init__)\n       10    0.000    0.000    0.000    0.000 {method 'argsort' of 'numpy.ndarray' objects}\n       10    0.000    0.000    0.000    0.000 common.py:1433(is_extension_array_dtype)\n       15    0.000    0.000    0.000    0.000 blocks.py:236(make_block_same_class)\n       35    0.000    0.000    0.000    0.000 common.py:148(<lambda>)\n       15    0.000    0.000    0.000    0.000 common.py:116(ensure_python_int)\n        5    0.000    0.000    0.000    0.000 frame.py:874(shape)\n       30    0.000    0.000    0.000    0.000 range.py:946(__len__)\n       20    0.000    0.000    0.000    0.000 domain.py:117(ndim)\n       35    0.000    0.000    0.000    0.000 base.py:870(_reset_identity)\n       15    0.000    0.000    0.000    0.000 _hooks.py:115(emit)\n        5    0.000    0.000    0.000    0.000 common.py:192(all_none)\n       20    0.000    0.000    0.000    0.000 {built-in method numpy.empty}\n        5    0.000    0.000    0.000    0.000 api.py:104(<listcomp>)\n       15    0.000    0.000    0.000    0.000 api.py:84(maybe_infer_ndim)\n       10    0.000    0.000    0.000    0.000 domain.py:179(has_dim)\n       10    0.000    0.000    0.000    0.000 construction.py:676(_sanitize_ndim)\n        5    0.000    0.000    0.000    0.000 take.py:554(_take_preprocess_indexer_and_fill_value)\n        5    0.000    0.000    0.000    0.000 range.py:887(_concat)\n       20    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}\n       50    0.000    0.000    0.000    0.000 {built-in method numpy.asarray}\n        5    0.000    0.000    0.000    0.000 trace.py:124(on_span_finish)\n       65    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}\n       10    0.000    0.000    0.000    0.000 array_schema.py:267(nattr)\n       10    0.000    0.000    0.000    0.000 common.py:1751(pandas_dtype)\n       20    0.000    0.000    0.000    0.000 <string>:1(<lambda>)\n       20    0.000    0.000    0.000    0.000 dtypes.py:488(validate_ordered)\n        5    0.000    0.000    0.000    0.000 algorithms.py:905(_re_wrap_factorize)\n       75    0.000    0.000    0.000    0.000 blocks.py:213(mgr_locs)\n       10    0.000    0.000    0.000    0.000 base.py:124(_reset_cache)\n       10    0.000    0.000    0.000    0.000 generic.py:570(_get_block_manager_axis)\n       60    0.000    0.000    0.000    0.000 version.py:452(_parse_letter_version)\n       21    0.000    0.000    0.000    0.000 attribute.py:164(isnullable)\n       21    0.000    0.000    0.000    0.000 attribute.py:174(isvar)\n        5    0.000    0.000    0.000    0.000 pandas_compat.py:904(<listcomp>)\n       35    0.000    0.000    0.000    0.000 common.py:146(classes)\n       10    0.000    0.000    0.000    0.000 base.py:1820(_get_names)\n        5    0.000    0.000    0.000    0.000 base.py:2783(_is_multi)\n       10    0.000    0.000    0.000    0.000 generic.py:5881(<genexpr>)\n        5    0.000    0.000    0.000    0.000 __init__.py:1455(debug)\n       10    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_int8}\n       50    0.000    0.000    0.000    0.000 base.py:5090(_values)\n        5    0.000    0.000    0.000    0.000 concat.py:682(<listcomp>)\n       10    0.000    0.000    0.000    0.000 flags.py:49(__init__)\n        5    0.000    0.000    0.000    0.000 context.py:98(_with_span)\n       12    0.000    0.000    0.000    0.000 numeric.py:1873(isscalar)\n       10    0.000    0.000    0.000    0.000 {built-in method numpy.array}\n       15    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}\n       20    0.000    0.000    0.000    0.000 concat.py:705(_combine_concat_plans)\n       35    0.000    0.000    0.000    0.000 query.py:201(depluralize)\n        5    0.000    0.000    0.000    0.000 algorithms.py:235(_ensure_arraylike)\n        5    0.000    0.000    0.000    0.000 trace.py:290(_queue_span_count_metrics)\n        5    0.000    0.000    0.000    0.000 multirange_indexing.py:221(__init__)\n       10    0.000    0.000    0.000    0.000 {method 'set' of '_contextvars.ContextVar' objects}\n       20    0.000    0.000    0.000    0.000 subarray.py:69(<genexpr>)\n        5    0.000    0.000    0.000    0.000 types.py:176(__get__)\n        5    0.000    0.000    0.000    0.000 generic.py:564(_get_axis)\n       20    0.000    0.000    0.000    0.000 generic.py:550(_get_axis_number)\n       15    0.000    0.000    0.000    0.000 multirange_indexing.py:246(return_incomplete)\n        5    0.000    0.000    0.000    0.000 {method 'take' of 'numpy.ndarray' objects}\n       10    0.000    0.000    0.000    0.000 common.py:1744(<genexpr>)\n       10    0.000    0.000    0.000    0.000 version.py:76(__lt__)\n       81    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}\n       30    0.000    0.000    0.000    0.000 blocks.py:823(shape)\n        5    0.000    0.000    0.000    0.000 pandas_compat.py:892(_check_data_column_metadata_consistency)\n       15    0.000    0.000    0.000    0.000 query.py:75(_transform_cube_index_name)\n       20    0.000    0.000    0.000    0.000 common.py:156(<lambda>)\n       10    0.000    0.000    0.000    0.000 construction.py:713(_sanitize_str_dtypes)\n        5    0.000    0.000    0.000    0.000 cast.py:527(maybe_promote)\n       15    0.000    0.000    0.000    0.000 concat.py:354(__init__)\n       40    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}\n       46    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_integer}\n        5    0.000    0.000    0.000    0.000 multi.py:1112(<listcomp>)\n        5    0.000    0.000    0.000    0.000 pandas_compat.py:1091(_get_multiindex_codes)\n       20    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}\n       52    0.000    0.000    0.000    0.000 typing.py:1737(cast)\n       10    0.000    0.000    0.000    0.000 common.py:319(is_datetime64_dtype)\n        5    0.000    0.000    0.000    0.000 span.py:563(_is_top_level)\n        5    0.000    0.000    0.000    0.000 categorical.py:715(categories)\n       15    0.000    0.000    0.000    0.000 common.py:1420(is_1d_only_ea_dtype)\n        5    0.000    0.000    0.000    0.000 os.py:755(encode)\n       15    0.000    0.000    0.000    0.000 _dtype.py:24(_kind_name)\n       40    0.000    0.000    0.000    0.000 version.py:518(<lambda>)\n        5    0.000    0.000    0.000    0.000 take.py:326(_get_take_nd_function)\n        5    0.000    0.000    0.000    0.000 concat.py:246(_maybe_reindex_columns_na_proxy)\n       10    0.000    0.000    0.000    0.000 multi.py:551(<genexpr>)\n       30    0.000    0.000    0.000    0.000 {built-in method builtins.hash}\n        5    0.000    0.000    0.000    0.000 typing.py:1037(__hash__)\n        5    0.000    0.000    0.000    0.000 {pandas._libs.lib.array_equivalent_object}\n       45    0.000    0.000    0.000    0.000 {built-in method _warnings._filters_mutated}\n       10    0.000    0.000    0.000    0.000 multi.py:1436(_get_names)\n        5    0.000    0.000    0.000    0.000 base.py:2281(_can_hold_na)\n       20    0.000    0.000    0.000    0.000 span.py:228(finished)\n        5    0.000    0.000    0.000    0.000 common.py:531(convert_to_list_like)\n       31    0.000    0.000    0.000    0.000 {built-in method pyarrow.lib.ensure_type}\n       10    0.000    0.000    0.000    0.000 frame.py:857(axes)\n       15    0.000    0.000    0.000    0.000 _dtype.py:330(_name_includes_bit_suffix)\n       10    0.000    0.000    0.000    0.000 base.py:555(<genexpr>)\n        5    0.000    0.000    0.000    0.000 pandas_compat.py:1202(<listcomp>)\n       20    0.000    0.000    0.000    0.000 common.py:151(classes_and_not_datetimelike)\n        5    0.000    0.000    0.000    0.000 base.py:839(is_)\n       10    0.000    0.000    0.000    0.000 __init__.py:1724(isEnabledFor)\n        5    0.000    0.000    0.000    0.000 multirange_indexing.py:598(_iter_attr_names)\n        5    0.000    0.000    0.000    0.000 flags.py:85(allows_duplicate_labels)\n        5    0.000    0.000    0.000    0.000 base.py:5402(<setcomp>)\n        5    0.000    0.000    0.000    0.000 algorithms.py:855(resolve_na_sentinel)\n       10    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}\n        5    0.000    0.000    0.000    0.000 inference.py:188(is_array_like)\n        5    0.000    0.000    0.000    0.000 concat.py:625(_get_result_dim)\n        5    0.000    0.000    0.000    0.000 endpoint_call_counter.py:30(on_span_finish)\n       10    0.000    0.000    0.000    0.000 common.py:393(is_timedelta64_dtype)\n       20    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_object}\n       25    0.000    0.000    0.000    0.000 dtypes.py:577(categories)\n       20    0.000    0.000    0.000    0.000 base.py:1734(name)\n       15    0.000    0.000    0.000    0.000 generic.py:664(ndim)\n        5    0.000    0.000    0.000    0.000 multirange_indexing.py:606(_iter_dim_names)\n       31    0.000    0.000    0.000    0.000 pandas_compat.py:920(<lambda>)\n        5    0.000    0.000    0.000    0.000 {pandas._libs.internals.get_blkno_placements}\n       20    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}\n       20    0.000    0.000    0.000    0.000 version.py:491(_parse_local_version)\n       10    0.000    0.000    0.000    0.000 ctx.py:434(check_ipykernel_warn_once)\n       10    0.000    0.000    0.000    0.000 base.py:574(_ensure_array)\n       10    0.000    0.000    0.000    0.000 common.py:196(<genexpr>)\n       15    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}\n       25    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_bool}\n        5    0.000    0.000    0.000    0.000 common.py:178(not_none)\n       10    0.000    0.000    0.000    0.000 range.py:896(<genexpr>)\n        5    0.000    0.000    0.000    0.000 managers.py:233(is_single_block)\n       31    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_float}\n        5    0.000    0.000    0.000    0.000 context.py:53(__init__)\n       10    0.000    0.000    0.000    0.000 {built-in method builtins.id}\n       10    0.000    0.000    0.000    0.000 base.py:986(dtype)\n        5    0.000    0.000    0.000    0.000 base.py:413(_engine_type)\n        5    0.000    0.000    0.000    0.000 base.py:7277(ensure_index)\n       10    0.000    0.000    0.000    0.000 managers.py:238(items)\n       10    0.000    0.000    0.000    0.000 {built-in method time.time_ns}\n       20    0.000    0.000    0.000    0.000 {method 'get' of '_contextvars.ContextVar' objects}\n       10    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}\n       10    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_scalar}\n       15    0.000    0.000    0.000    0.000 dtypes.py:584(ordered)\n        5    0.000    0.000    0.000    0.000 {method 'index' of 'str' objects}\n       10    0.000    0.000    0.000    0.000 construction.py:733(_maybe_repeat)\n       20    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_platform_int}\n       10    0.000    0.000    0.000    0.000 common.py:182(<genexpr>)\n       15    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_iterator}\n       10    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}\n       10    0.000    0.000    0.000    0.000 multi.py:984(codes)\n        5    0.000    0.000    0.000    0.000 common.py:537(is_string_or_object_np_dtype)\n       10    0.000    0.000    0.000    0.000 multiarray.py:1071(copyto)\n        5    0.000    0.000    0.000    0.000 generic.py:332(attrs)\n        5    0.000    0.000    0.000    0.000 multi.py:949(nlevels)\n       10    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.RLock' objects}\n       10    0.000    0.000    0.000    0.000 base.py:241(disallow_kwargs)\n       10    0.000    0.000    0.000    0.000 generic.py:353(flags)\n        5    0.000    0.000    0.000    0.000 concat.py:701(_maybe_check_integrity)\n        5    0.000    0.000    0.000    0.000 managers.py:188(blklocs)\n        5    0.000    0.000    0.000    0.000 tracer.py:1052(_is_span_internal)\n       15    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}\n        5    0.000    0.000    0.000    0.000 enum.py:801(value)\n       10    0.000    0.000    0.000    0.000 base.py:324(ndim)\n       15    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}\n        5    0.000    0.000    0.000    0.000 categorical.py:475(dtype)\n        5    0.000    0.000    0.000    0.000 categorical.py:2056(_codes)\n        5    0.000    0.000    0.000    0.000 frame.py:600(_constructor)\n        5    0.000    0.000    0.000    0.000 numeric.py:181(_validate_dtype)\n        5    0.000    0.000    0.000    0.000 generic.py:5876(<genexpr>)\n       15    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}\n        5    0.000    0.000    0.000    0.000 span.py:523(context)\n        5    0.000    0.000    0.000    0.000 pandas_compat.py:897(<genexpr>)\n       10    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}\n       10    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}\n        5    0.000    0.000    0.000    0.000 pandas_compat.py:949(<dictcomp>)\n       10    0.000    0.000    0.000    0.000 {function FrozenList.__getitem__ at 0x7f7ae36f6950}\n       10    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}\n        5    0.000    0.000    0.000    0.000 flags.py:53(allows_duplicate_labels)\n       10    0.000    0.000    0.000    0.000 {built-in method builtins.iter}\n        5    0.000    0.000    0.000    0.000 fromnumeric.py:2493(_cumsum_dispatcher)\n        5    0.000    0.000    0.000    0.000 multiarray.py:148(concatenate)\n        5    0.000    0.000    0.000    0.000 pandas_compat.py:930(<listcomp>)\n        5    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}\n        5    0.000    0.000    0.000    0.000 {method '_ctx_' of 'tiledb.libtiledb.Array' objects}\n        5    0.000    0.000    0.000    0.000 trace.py:120(on_span_start)\n        5    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}\n        5    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}\n        5    0.000    0.000    0.000    0.000 multirange_indexing.py:320(_set_shape)\n        5    0.000    0.000    0.000    0.000 span.py:543(__enter__)\n        5    0.000    0.000    0.000    0.000 endpoint_call_counter.py:26(on_span_start)\n        5    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}\n\n\n", "lineno": 96, "pathname": "/single-cell-data-portal/backend/wmg/api/v2.py", "request_id": "4fe8c06c-dddf-4cae-8010-9116626055de"}
{"levelname": "INFO", "asctime": "2023-11-11T01:29:51.011Z", "name": "corpora-api-test", "message": "", "lineno": 177, "pathname": "/single-cell-data-portal/backend/api_server/app.py", "request_id": "4fe8c06c-dddf-4cae-8010-9116626055de", "type": "RESPONSE", "details": {"status_code": 200, "content_length": 1205, "response_time": 0.06712794303894043}}
