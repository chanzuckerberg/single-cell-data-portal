{"uid":"50241d8876bce434","name":"test_type_inference[parameters31]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"90aa4b941e33d523ccd033cab99d6463","time":{"start":1720713742505,"stop":1720713742505,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720713703895,"stop":1720713703895,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1720713742504,"stop":1720713742504,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1720713742506,"stop":1720713742506,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"0ded4e3779f5"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0        0\n1        1\n2        2\n3        3\n4        4\n      ... \n995    995\n996    996\n997    997\n998    998\n999    999\nLength: 1000, dtype: uint64, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"5098051f90937369","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21383//#testresult/5098051f90937369","status":"passed","time":{"start":1720668473696,"stop":1720668473696,"duration":0}},{"uid":"876e3bdf8489c96d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21381//#testresult/876e3bdf8489c96d","status":"passed","time":{"start":1720667369021,"stop":1720667369022,"duration":1}},{"uid":"93eabad4dc804561","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21380//#testresult/93eabad4dc804561","status":"passed","time":{"start":1720663187667,"stop":1720663187668,"duration":1}},{"uid":"d901405df69b8dca","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21379//#testresult/d901405df69b8dca","status":"passed","time":{"start":1720663113565,"stop":1720663113565,"duration":0}},{"uid":"600fbe1369c66787","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21377//#testresult/600fbe1369c66787","status":"passed","time":{"start":1720662780844,"stop":1720662780845,"duration":1}},{"uid":"a708eec46aeab945","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21376//#testresult/a708eec46aeab945","status":"passed","time":{"start":1720657324165,"stop":1720657324166,"duration":1}},{"uid":"ae9fc29bd501008e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21375//#testresult/ae9fc29bd501008e","status":"passed","time":{"start":1720656981958,"stop":1720656981959,"duration":1}},{"uid":"99dadd655fd4f8f7","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21373//#testresult/99dadd655fd4f8f7","status":"passed","time":{"start":1720656033825,"stop":1720656033825,"duration":0}},{"uid":"55ba5704f2c579d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21372//#testresult/55ba5704f2c579d","status":"passed","time":{"start":1720655800870,"stop":1720655800871,"duration":1}}]},"tags":[]},"source":"50241d8876bce434.json","parameterValues":["{'data': 0        0\n1        1\n2        2\n3        3\n4        4\n      ... \n995    995\n996    996\n997    997\n998    998\n999    999\nLength: 1000, dtype: uint64, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}