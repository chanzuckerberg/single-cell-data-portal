{"uid":"feb81625883cb345","name":"test_type_inference[parameters19]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"6dfaec1d71c9e081c79922e8237993cb","time":{"start":1720713742448,"stop":1720713742448,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720713703895,"stop":1720713703895,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1720713742447,"stop":1720713742447,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1720713742448,"stop":1720713742448,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"0ded4e3779f5"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0        0\n1        1\n2        2\n3        3\n4        4\n      ... \n995    995\n996    996\n997    997\n998    998\n999    999\nLength: 1000, dtype: int32, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"7531aee66b67657d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21383//#testresult/7531aee66b67657d","status":"passed","time":{"start":1720668473639,"stop":1720668473639,"duration":0}},{"uid":"49e5a93119cbfc80","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21381//#testresult/49e5a93119cbfc80","status":"passed","time":{"start":1720667368964,"stop":1720667368964,"duration":0}},{"uid":"298cbfc19352161e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21380//#testresult/298cbfc19352161e","status":"passed","time":{"start":1720663187610,"stop":1720663187611,"duration":1}},{"uid":"f753a749d231c170","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21379//#testresult/f753a749d231c170","status":"passed","time":{"start":1720663113506,"stop":1720663113507,"duration":1}},{"uid":"54002f6d8e220dc3","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21377//#testresult/54002f6d8e220dc3","status":"passed","time":{"start":1720662780788,"stop":1720662780788,"duration":0}},{"uid":"1858cf4570d1203e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21376//#testresult/1858cf4570d1203e","status":"passed","time":{"start":1720657324108,"stop":1720657324109,"duration":1}},{"uid":"69c57ee2b2328ecd","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21375//#testresult/69c57ee2b2328ecd","status":"passed","time":{"start":1720656981901,"stop":1720656981902,"duration":1}},{"uid":"c74681463fbc9ed1","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21373//#testresult/c74681463fbc9ed1","status":"passed","time":{"start":1720656033768,"stop":1720656033768,"duration":0}},{"uid":"d1e00eebb55f1c7e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21372//#testresult/d1e00eebb55f1c7e","status":"passed","time":{"start":1720655800814,"stop":1720655800814,"duration":0}}]},"tags":[]},"source":"feb81625883cb345.json","parameterValues":["{'data': 0        0\n1        1\n2        2\n3        3\n4        4\n      ... \n995    995\n996    996\n997    997\n998    998\n999    999\nLength: 1000, dtype: int32, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}