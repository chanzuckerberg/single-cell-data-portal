[
  {
    "tier": "maintained",
    "title": "Geneformer embeddings fine-tuned for CELLxGENE Census cell subclass classification",
    "description": "Geneformer is a foundation transformer model pretrained on a large-scale corpus of ~30 million single cell transcriptomes to enable context-aware predictions in settings with limited data in network biology.\nThese cell embeddings are derived from a Geneformer model CZI fine-tuned for cell subclass classification. As the fine-tuning procedure remains experimental and wasn’t performed by the Geneformer authors, these embeddings should not be used to assess performance of the pre-trained Geneformer model.",
    "primary_contact": {
      "name": "CELLxGENE Discover Team",
      "email": "soma@chanzuckerberg.com",
      "affiliation": "CZI"
    },
    "DOI": "10.1038/s41586-023-06139-9",
    "publication_info": "",
    "publication_link": "",
    "project_page": "",
    "additional_information": "Beginning with the geneformer-12L-30M pretrained model published by Theodoris et al. (huggingface.co/ctheodoris/Geneformer), a BertForSequenceClassification model was trained to predict cell subclass (as annotated in CELLxGENE Discover see https://cellxgene.cziscience.com/collections). Embeddings were then generated using Geneformer’s EmbExtractor module with emb_layer=0.\nFor full details and a reproducible workflow please see: https://github.com/chanzuckerberg/cellxgene-census/blob/main/tools/models/geneformer/README.md",
    "model_link": "s3://cellxgene-contrib-public/models/geneformer/2023-12-15/homo_sapiens/fined-tuned-model/",
    "data_type": "obs_embedding",
    "obsm_layer": "geneformer",
    "census_version": "2023-12-15",
    "experiment_name": "homo_sapiens",
    "measurement_name": "RNA",
    "n_cells": 62998417,
    "n_columns": 512,
    "n_features": 512,
    "notebook_links": [
      [
        "Using trained model",
        "https://chanzuckerberg.github.io/cellxgene-census/notebooks/analysis_demo/comp_bio_geneformer_prediction.html"
      ]
    ],
    "submission_date": "2023-11-06",
    "last_updated": null,
    "revised_by": null
  },
  {
    "tier": "maintained",
    "title": "scVI integrated-embeddings with explicit modeling of batch effects",
    "description": "scVI uses autoencoding-variational Bayes optimization to learn the underlying latent state of gene expression and to approximate the distributions that underlie observed expression values, while accounting for batch effects and limited sensitivity.\nThese cell embeddings are derived from an scVI model trained on all primary Census cells while accounting for the batch effects of sequencing assay, dataset, donor, and suspension type (cell vs nucleus). Then embeddings were obtained as the latent space for all Census cells after performing a forward pass through the trained model.\nThese embeddings are made in collaboration with the scVI team from Nir Yosef’s laboratory. For questions about scVI please refer to the scverse discourse forum https://discourse.scverse.org/.",
    "primary_contact": {
      "name": "CELLxGENE Discover Team",
      "email": "soma@chanzuckerberg.com",
      "affiliation": "CZI"
    },
    "additional_contacts": [
      {
        "name": "Nir Yosef",
        "email": "nir.yosef@weizmann.ac.il",
        "affiliation": "Weizmann Institute of Science, Israel"
      },
      {
        "name": "Can Ergen",
        "email": "cergen@berkeley.edu",
        "affiliation": "UC Berkeley"
      },
      {
        "name": "Martin Kim",
        "email": "martinkim@berkeley.edu",
        "affiliation": "UC Berkeley"
      }
    ],
    "DOI": "10.1038/s41592-018-0229-2",
    "additional_information": "scVI was trained on primary cells from Census with at least 300 expressed genes, and on the top 8000 highly variable genes with the Census method highly_variable_genes, which implements Scanpy’s Seurat flavor to be used on count data while accounting for batch effects. The scVI parameters are: n_layer=1, n_hidden=500 and dropout_rate=0.1, and the training was run for a total of 20 epochs. An embedding with n_latent=200 was obtained by performing a forward pass on the model to get the latent representation across all Census cells, without additional retraining.\nModel is available for the scArches workflow and census data can be loaded as minified data to test for organ-level differential abundance and similar.\nFor full details and a reproducible workflow please see: https://github.com/chanzuckerberg/cellxgene-census/blob/main/tools/models/scvi/README.md",
    "model_link": "s3://cellxgene-contrib-public/models/scvi/2023-12-15/homo_sapiens/model.pt",
    "census_version": "2023-12-15",
    "data_type": "obs_embedding",
    "obsm_layer": "scvi",
    "experiment_name": "homo_sapiens",
    "measurement_name": "RNA",
    "n_cells": 62998417,
    "n_columns": 200,
    "n_features": 200,
    "submission_date": "2023-11-18",
    "publication_info": "",
    "publication_link": "",
    "notebook_links": [
      [
        "Using trained model",
        "https://chanzuckerberg.github.io/cellxgene-census/notebooks/analysis_demo/comp_bio_scvi_model_use.html"
      ]
    ],
    "last_updated": null,
    "revised_by": null
  },
  {
    "tier": "maintained",
    "title": "scVI integrated-embeddings with explicit modeling of batch effects",
    "description": "scVI uses autoencoding-variational Bayes optimization to learn the underlying latent state of gene expression and to approximate the distributions that underlie observed expression values, while accounting for batch effects and limited sensitivity.\nThese cell embeddings are derived from an scVI model trained on all primary Census cells while accounting for the batch effects of sequencing assay, dataset, donor, and suspension type (cell vs nucleus). Then embeddings were obtained as the latent space for all Census cells after performing a forward pass through the trained model.\nThese embeddings are made in collaboration with the scVI team from Nir Yosef’s laboratory. For questions about scVI please refer to the scverse discourse forum https://discourse.scverse.org/.",
    "primary_contact": {
      "name": "CELLxGENE Discover Team",
      "email": "soma@chanzuckerberg.com",
      "affiliation": "CZI"
    },
    "additional_contacts": [
      {
        "name": "Nir Yosef",
        "email": "nir.yosef@weizmann.ac.il",
        "affiliation": "Weizmann Institute of Science, Israel"
      },
      {
        "name": "Can Ergen",
        "email": "cergen@berkeley.edu",
        "affiliation": "UC Berkeley"
      },
      {
        "name": "Martin Kim",
        "email": "martinkim@berkeley.edu",
        "affiliation": "UC Berkeley"
      }
    ],
    "DOI": "10.1038/s41592-018-0229-2",
    "additional_information": "scVI was trained on primary cells from Census with at least 300 expressed genes, and on the top 8000 highly variable genes with the Census method highly_variable_genes, which implements Scanpy’s Seurat flavor to be used on count data while accounting for batch effects. The scVI parameters are: n_layer=1, n_hidden=500 and dropout_rate=0.1, and the training was run for a total of 20 epochs. An embedding with n_latent=200 was obtained by performing a forward pass on the model to get the latent representation across all Census cells, without additional retraining.\nModel is available for the scArches workflow and census data can be loaded as minified data to test for organ-level differential abundance and similar.\nFor full details and a reproducible workflow please see: https://github.com/chanzuckerberg/cellxgene-census/blob/main/tools/models/scvi/README.md",
    "model_link": "s3://cellxgene-contrib-public/models/scvi/2023-12-15/mus_musculus/model.pt",
    "census_version": "2023-12-15",
    "data_type": "obs_embedding",
    "obsm_layer": "scvi",
    "experiment_name": "mus_musculus",
    "measurement_name": "RNA",
    "n_cells": 5684805,
    "n_columns": 200,
    "n_features": 200,
    "submission_date": "2023-11-18",
    "publication_info": "",
    "publication_link": "",
    "notebook_links": [
      [
        "Using trained model",
        "https://chanzuckerberg.github.io/cellxgene-census/notebooks/analysis_demo/comp_bio_scvi_model_use.html"
      ]
    ],
    "last_updated": null,
    "revised_by": null
  },
  {
    "tier": "community",
    "title": "PINNACLE: Contextual AI Model for Single-Cell Protein Biology",
    "description": "PINNACLE is a flexible geometric deep learning model that is trained on protein interaction networks contextualized by 156 cell types from a human single-cell transcriptomic atlas in order to generate context-aware protein representations. It generates 394,760 protein representations (~18X more than existing methods) that reflect the organization of 156 cell types spanning 62 tissues. We demonstrate that PINNACLE’s contextualized protein representations 1) enable zero-shot retrieval of the tissue hierarchy, 2) improve 3D structure predictions of PD-1/PD-L1 and B7-1/CTLA-4 protein interactions, two critical immune checkpoint interactors targeted by cancer immunotherapies, and 3) outperform state-of-the-art, yet context-free, models in nominating therapeutic targets of RA and IBD while pinpointing their most predictive cell type contexts.",
    "primary_contact": {
      "name": "Marinka Zitnik",
      "email": "marinka@hms.harvard.edu",
      "affiliation": "Zitnik Lab, Department of Biomedical Informatics, Harvard University"
    },
    "additional_contacts": [
      {
        "name": "Michelle M. Li",
        "email": "michelleli@g.harvard.edu",
        "affiliation": "Zitnik Lab, Department of Biomedical Informatics, Harvard University"
      },
      {
        "name": "Yepeng Huang",
        "email": "yepeng@fas.harvard.edu",
        "affiliation": "Zitnik Lab, Department of Biomedical Informatics, Harvard University"
      }
    ],
    "DOI": "10.1101/2023.07.18.549602",
    "model_link": "https://huggingface.co/spaces/michellemli/PINNACLE",
    "project_page": "https://zitniklab.hms.harvard.edu/projects/PINNACLE/",
    "census_version": "",
    "data_type": "",
    "experiment_name": "",
    "measurement_name": "",
    "n_cells": null,
    "n_columns": null,
    "n_features": null,
    "submission_date": "2023-12-13",
    "publication_info": "",
    "publication_link": "",
    "notebook_links": null,
    "last_updated": null,
    "revised_by": null
  },
  {
    "tier": "community",
    "title": "scCIPHER: Contextual Deep Learning on Single-Cell Knowledge Graphs for Precision Medicine in Neurological Disorders",
    "description": "Neurological disorders are the leading driver of global disability and cause 16.8% of global mortality. Unfortunately, most lack disease-modifying treatments or cures. To address disease complexity and heterogeneity in neurological disease, we developed scCIPHER, an AI approach for Contextually Informed Precision HEalthcaRe using deep learning on single-cell knowledge graphs. We created the Neurological Disease Knowledge Graph (NeuroKG), a neurobiological knowledge graph with 132 thousand nodes and 3.98 million edges, by integrating 20 high-quality primary data sources with single-cell RNA-sequencing data from 3.37 million cells across 106 regions of the adult human brain. Next, we pre-trained a heterogeneous graph transformer on NeuroKG to create scCIPHER. We leverage scCIPHER to make precision medicine-based predictions in neurological disorders across patient phenotyping, therapeutic response prediction, and causal gene discovery tasks, with validation in large-scale patient cohorts.",
    "primary_contact": {
      "name": "Marinka Zitnik",
      "email": "marinka@hms.harvard.edu",
      "affiliation": "Zitnik Lab, Department of Biomedical Informatics, Harvard University"
    },
    "additional_contacts": [
      {
        "name": "Ayush Noori",
        "email": "anoori@college.harvard.edu ",
        "affiliation": "Zitnik Lab, Department of Biomedical Informatics, Harvard University"
      }
    ],
    "DOI": "",
    "model_link": "https://github.com/mims-harvard/scCIPHER",
    "project_page": "https://zitniklab.hms.harvard.edu/projects/scCIPHER",
    "census_version": "",
    "data_type": "",
    "experiment_name": "",
    "measurement_name": "",
    "n_cells": null,
    "n_columns": null,
    "n_features": null,
    "submission_date": "2023-12-13",
    "publication_info": "",
    "publication_link": "",
    "notebook_links": null,
    "last_updated": null,
    "revised_by": null
  },
  {
    "tier": "community",
    "title": "Identifying regulatory network changes between healthy and cancerous tissues with single-cell atlas",
    "description": "A major question in cancer biology is how cancer cells rewire the regulatory network to support uncontrollable cell growth. We developed a computational framework, D-SPIN, that decodes regulatory network models of single-cell profiling from multiple samples and various conditions. With a collection of healthy and cancerous tissue profiling from Census data, we identified a hundred gene programs shared between healthy and cancer tissues, constructed regulatory network models of the cell population, and observed a series of regulatory shifts in key functions such as energy metabolism and cell adhesion in cancer tissues. Our study can help identify network-level signatures of cancer progression, and propose critical regulatory shifts as targets of therapeutics.",
    "primary_contact": {
      "name": "Matt Thomson",
      "email": "mthomson@caltech.edu",
      "affiliation": "Thomson Lab, Caltech"
    },
    "additional_contacts": [
      {
        "name": "Jialong Jiang",
        "email": "jiangjl@caltech.edu" ,
        "affiliation": "Thomson Lab, Caltech"
      },
      {
        "name": "Yingying Gong",
        "email": "ygong@caltech.edu" ,
        "affiliation": "Thomson Lab, Caltech"
      }
    ],
    "DOI": "",
    "model_link": "https://github.com/JialongJiang/DSPIN",
    "project_page": "",
    "census_version": "",
    "data_type": "",
    "experiment_name": "",
    "measurement_name": "",
    "n_cells": null,
    "n_columns": null,
    "n_features": null,
    "submission_date": "2023-12-12",
    "publication_info": "",
    "publication_link": "",
    "notebook_links": null,
    "last_updated": null,
    "revised_by": null
  }
]
