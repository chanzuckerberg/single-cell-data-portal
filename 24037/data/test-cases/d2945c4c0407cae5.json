{"uid":"d2945c4c0407cae5","name":"test_type_inference[parameters11]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"398d66e2a4ceb83704dc463c5ae4fec9","time":{"start":1744647589920,"stop":1744647589920,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744647576097,"stop":1744647576097,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744647589918,"stop":1744647589918,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1744647589921,"stop":1744647589921,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"94026ed803ac"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0        0\n1        1\n2        2\n3        3\n4        4\n      ... \n995    995\n996    996\n997    997\n998    998\n999    999\nLength: 1000, dtype: int16, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"60700f08d3c87f3d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24036//#testresult/60700f08d3c87f3d","status":"passed","time":{"start":1744646979447,"stop":1744646979447,"duration":0}},{"uid":"68b2688741707409","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24034//#testresult/68b2688741707409","status":"passed","time":{"start":1744645890914,"stop":1744645890915,"duration":1}},{"uid":"872aba425a761dae","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24033//#testresult/872aba425a761dae","status":"passed","time":{"start":1744643892346,"stop":1744643892346,"duration":0}},{"uid":"6ce94f598caa7155","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24023//#testresult/6ce94f598caa7155","status":"passed","time":{"start":1744637601562,"stop":1744637601562,"duration":0}},{"uid":"9749d89ef5be7e6b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24017//#testresult/9749d89ef5be7e6b","status":"passed","time":{"start":1744407043493,"stop":1744407043493,"duration":0}},{"uid":"25742e2726b2929a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24016//#testresult/25742e2726b2929a","status":"passed","time":{"start":1744406937052,"stop":1744406937052,"duration":0}},{"uid":"d92555ce8d1d94ee","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24015//#testresult/d92555ce8d1d94ee","status":"passed","time":{"start":1744404329978,"stop":1744404329978,"duration":0}},{"uid":"6b01179a1038138b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24012//#testresult/6b01179a1038138b","status":"passed","time":{"start":1744402200061,"stop":1744402200061,"duration":0}},{"uid":"ce414403fd4a8c6d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24009//#testresult/ce414403fd4a8c6d","status":"passed","time":{"start":1744400192460,"stop":1744400192460,"duration":0}}]},"tags":[]},"source":"d2945c4c0407cae5.json","parameterValues":["{'data': 0        0\n1        1\n2        2\n3        3\n4        4\n      ... \n995    995\n996    996\n997    997\n998    998\n999    999\nLength: 1000, dtype: int16, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}