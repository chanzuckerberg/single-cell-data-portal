{"uid":"16b2728a4d8a63dd","name":"test_type_inference[parameters23]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"949eeaf0ff08630aafc8b9bc3a0b51da","time":{"start":1744647589986,"stop":1744647589986,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744647576097,"stop":1744647576097,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744647589985,"stop":1744647589985,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1744647589987,"stop":1744647589987,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"94026ed803ac"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0        0\n1        1\n2        2\n3        3\n4        4\n      ... \n995    995\n996    996\n997    997\n998    998\n999    999\nLength: 1000, dtype: uint32, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"7b35525691876c8","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24036//#testresult/7b35525691876c8","status":"passed","time":{"start":1744646979506,"stop":1744646979506,"duration":0}},{"uid":"9f9e559a7cc7be94","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24034//#testresult/9f9e559a7cc7be94","status":"passed","time":{"start":1744645890971,"stop":1744645890972,"duration":1}},{"uid":"a2556ae0d17b6c48","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24033//#testresult/a2556ae0d17b6c48","status":"passed","time":{"start":1744643892405,"stop":1744643892405,"duration":0}},{"uid":"754e4689368fcb29","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24023//#testresult/754e4689368fcb29","status":"passed","time":{"start":1744637601619,"stop":1744637601619,"duration":0}},{"uid":"2515db14c7dad5a6","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24017//#testresult/2515db14c7dad5a6","status":"passed","time":{"start":1744407043549,"stop":1744407043550,"duration":1}},{"uid":"3ed21bfdeba19688","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24016//#testresult/3ed21bfdeba19688","status":"passed","time":{"start":1744406937109,"stop":1744406937110,"duration":1}},{"uid":"90ec3cbaa5683772","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24015//#testresult/90ec3cbaa5683772","status":"passed","time":{"start":1744404330040,"stop":1744404330041,"duration":1}},{"uid":"7e47a6ecd8918656","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24012//#testresult/7e47a6ecd8918656","status":"passed","time":{"start":1744402200118,"stop":1744402200119,"duration":1}},{"uid":"98b75a6ca0647353","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24009//#testresult/98b75a6ca0647353","status":"passed","time":{"start":1744400192517,"stop":1744400192518,"duration":1}}]},"tags":[]},"source":"16b2728a4d8a63dd.json","parameterValues":["{'data': 0        0\n1        1\n2        2\n3        3\n4        4\n      ... \n995    995\n996    996\n997    997\n998    998\n999    999\nLength: 1000, dtype: uint32, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}