{"uid":"3e273d18a1965887","name":"test_type_inference[parameters59]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"135d65deb17d6e970ad741675c243bd6","time":{"start":1744647590135,"stop":1744647590135,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744647576097,"stop":1744647576097,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744647590134,"stop":1744647590134,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1744647590136,"stop":1744647590136,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"94026ed803ac"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0    0\n1    1\n2    2\ndtype: category\nCategories (3, uint8): [0, 1, 2], 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'categorical'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"1d5c7706658ff850","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24036//#testresult/1d5c7706658ff850","status":"passed","time":{"start":1744646979655,"stop":1744646979656,"duration":1}},{"uid":"e51a5c5d1e923216","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24034//#testresult/e51a5c5d1e923216","status":"passed","time":{"start":1744645891116,"stop":1744645891117,"duration":1}},{"uid":"529b25e48f616a3e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24033//#testresult/529b25e48f616a3e","status":"passed","time":{"start":1744643892554,"stop":1744643892555,"duration":1}},{"uid":"bb7ac34879cf6c20","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24023//#testresult/bb7ac34879cf6c20","status":"passed","time":{"start":1744637601771,"stop":1744637601772,"duration":1}},{"uid":"2586f2988117564a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24017//#testresult/2586f2988117564a","status":"passed","time":{"start":1744407043693,"stop":1744407043693,"duration":0}},{"uid":"c9decbb6e9c8366f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24016//#testresult/c9decbb6e9c8366f","status":"passed","time":{"start":1744406937256,"stop":1744406937256,"duration":0}},{"uid":"262e7fc3932f82a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24015//#testresult/262e7fc3932f82a","status":"passed","time":{"start":1744404330189,"stop":1744404330190,"duration":1}},{"uid":"8f8c86848e062392","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24012//#testresult/8f8c86848e062392","status":"passed","time":{"start":1744402200265,"stop":1744402200266,"duration":1}},{"uid":"35f47a0489fd80bd","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24009//#testresult/35f47a0489fd80bd","status":"passed","time":{"start":1744400192664,"stop":1744400192665,"duration":1}}]},"tags":[]},"source":"3e273d18a1965887.json","parameterValues":["{'data': 0    0\n1    1\n2    2\ndtype: category\nCategories (3, uint8): [0, 1, 2], 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'categorical'}}"]}