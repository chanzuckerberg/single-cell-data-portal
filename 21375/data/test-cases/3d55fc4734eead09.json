{"uid":"3d55fc4734eead09","name":"test_type_inference[parameters51]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"f21283bcdffe46de01ee370b51c5feba","time":{"start":1720656982037,"stop":1720656982037,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720656936307,"stop":1720656936307,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1720656982036,"stop":1720656982036,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"3123909acff585c6","name":"log","source":"3123909acff585c6.txt","type":"text/plain","size":341},{"uid":"b850739fa9d21def","name":"stdout","source":"b850739fa9d21def.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1720656982038,"stop":1720656982038,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"5bfa9824eed8"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': <10x100 sparse matrix of type '<class 'numpy.float64'>'\n\twith 0 stored elements in Compressed Sparse Row format>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":3},"items":[{"uid":"92b00c40f8ba6b4f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21373//#testresult/92b00c40f8ba6b4f","status":"passed","time":{"start":1720656033903,"stop":1720656033904,"duration":1}},{"uid":"c2c288f1a1334074","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21372//#testresult/c2c288f1a1334074","status":"passed","time":{"start":1720655800947,"stop":1720655800948,"duration":1}}]},"tags":[]},"source":"3d55fc4734eead09.json","parameterValues":["{'data': <10x100 sparse matrix of type '<class 'numpy.float64'>'\n\twith 0 stored elements in Compressed Sparse Row format>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}