{"uid":"720f55b31533b5d9","name":"test_type_inference[parameters41]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"ffc02ebcf10ae1694e36f70c11fd745a","time":{"start":1719346919353,"stop":1719346919353,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1719346904807,"stop":1719346904807,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1719346919351,"stop":1719346919351,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1719346919354,"stop":1719346919354,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"63b01b8d59f3"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0      -128.0\n1      -127.0\n2      -126.0\n3      -125.0\n4      -124.0\n        ...  \n1123    995.0\n1124    996.0\n1125    997.0\n1126    998.0\n1127    999.0\nLength: 1128, dtype: float32, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': None}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":18,"unknown":0,"total":18},"items":[{"uid":"e428dad6a4a868ed","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20935//#testresult/e428dad6a4a868ed","status":"passed","time":{"start":1719346402433,"stop":1719346402434,"duration":1}},{"uid":"d7f5e4e0bdeb3701","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20932//#testresult/d7f5e4e0bdeb3701","status":"passed","time":{"start":1719346273430,"stop":1719346273430,"duration":0}},{"uid":"91b5c423ee8dd242","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20941//#testresult/91b5c423ee8dd242","status":"passed","time":{"start":1719346540129,"stop":1719346540130,"duration":1}},{"uid":"706e72ebda1fe61d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20934//#testresult/706e72ebda1fe61d","status":"passed","time":{"start":1719346394210,"stop":1719346394210,"duration":0}},{"uid":"827ca70082124c7","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20933//#testresult/827ca70082124c7","status":"passed","time":{"start":1719346305254,"stop":1719346305254,"duration":0}},{"uid":"9a72d9a5b356f5ca","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20929//#testresult/9a72d9a5b356f5ca","status":"passed","time":{"start":1719346122179,"stop":1719346122179,"duration":0}},{"uid":"1e3be0a4da03268f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20930//#testresult/1e3be0a4da03268f","status":"passed","time":{"start":1719346138214,"stop":1719346138214,"duration":0}},{"uid":"4147482a0f073dcc","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20926//#testresult/4147482a0f073dcc","status":"passed","time":{"start":1719345895639,"stop":1719345895640,"duration":1}},{"uid":"46d89319def41eaf","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20927//#testresult/46d89319def41eaf","status":"passed","time":{"start":1719345908485,"stop":1719345908486,"duration":1}},{"uid":"92d095b76c60dd0d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20918//#testresult/92d095b76c60dd0d","status":"passed","time":{"start":1719334940072,"stop":1719334940073,"duration":1}},{"uid":"e40ab92c34fd6d6a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20919//#testresult/e40ab92c34fd6d6a","status":"passed","time":{"start":1719335052434,"stop":1719335052434,"duration":0}},{"uid":"b1f21ba59f51140f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20911//#testresult/b1f21ba59f51140f","status":"passed","time":{"start":1719270612681,"stop":1719270612681,"duration":0}},{"uid":"2ba76c0b51397af0","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20910//#testresult/2ba76c0b51397af0","status":"passed","time":{"start":1719270571104,"stop":1719270571104,"duration":0}},{"uid":"4e2013d3c265cc0e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20907//#testresult/4e2013d3c265cc0e","status":"passed","time":{"start":1719266525229,"stop":1719266525229,"duration":0}},{"uid":"4ef425a7ce220879","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20894//#testresult/4ef425a7ce220879","status":"passed","time":{"start":1718992365678,"stop":1718992365678,"duration":0}},{"uid":"28eb8df08b4e17e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20889//#testresult/28eb8df08b4e17e","status":"passed","time":{"start":1718988862852,"stop":1718988862852,"duration":0}},{"uid":"7ee537c05b09c258","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20887//#testresult/7ee537c05b09c258","status":"passed","time":{"start":1718925649905,"stop":1718925649905,"duration":0}}]},"tags":[]},"source":"720f55b31533b5d9.json","parameterValues":["{'data': 0      -128.0\n1      -127.0\n2      -126.0\n3      -125.0\n4      -124.0\n        ...  \n1123    995.0\n1124    996.0\n1125    997.0\n1126    998.0\n1127    999.0\nLength: 1128, dtype: float32, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': None}"]}