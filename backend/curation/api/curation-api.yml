openapi: 3.0.0
info:
  version: "1.0.0"
  title: Chan Zuckerberg Initiative CELLxGENE Discover API
  termsOfService: https://cellxgene.cziscience.com/tos
  contact:
    name: API Support
    email: cellxgene@chanzuckerberg.com
  description: |
    ## For Examples
    * [Python Notebooks](https://github.com/chanzuckerberg/single-cell-curation/tree/main/notebooks/curation_api/python_raw)
    * [R Notebooks](https://github.com/chanzuckerberg/single-cell-curation/tree/main/notebooks/curation_api/R)

    ## Data Model
    <!-- Data model diagram created via Lucid: https://lucid.app/lucidchart/8d085832-34f4-4413-9c1d-44e77d06e326/edit?invitationId=inv_ed354532-7256-4e0a-9ad0-b622905e5198&page=Vfzkzdv~I1fL# -->
    <img src="/static/discover-api-data-model.png" width="50%"/>

    ## Working with versions

    #### Access to published version history
    The CZ CELLxGENE Discover API supports access to all published versions of Collections and Datasets. For example,
    if a Dataset was published and then later updated and published again, then both Dataset Versions can be accessed.

    #### Different types of identifiers
    The Collection identifier collection_id is set during the creation of a Collection; it does not change, even if the
    Collection is updated. It always refers to the latest published version of the Collection and is the required
    identifier to use with Collection endpoints.

    The Collection Version identifier `collection_version_id` refers to one specific published version of a Collection
    and is required by the Collection Version endpoint.

    The Dataset identifier dataset_id is set during the creation of a Dataset; it does not change, even if the Dataset
    is updated. It always refers to the latest published version of the Dataset and is the required identifier to use
    with Dataset endpoints.

    The Dataset Version identifier `dataset_version_id` refers to one specific published version of a Dataset and is
    required by the Dataset Version endpoint.

    **Important Note:** if a Dataset is NOT updated during a revision of its parent Collection and the revision is
    published, then its Dataset Version (and identifier `dataset_version_id`) do not change even though there is a new
    Collection Version (and identifier `collection_version_id`).

servers:
  - description: Production environment
    url: https://api.cellxgene.cziscience.com/
  - description: Development environment
    url: https://api.cellxgene.dev.single-cell.czi.technology
  - description: Staging environment
    url: https://api.cellxgene.staging.single-cell.czi.technology
paths:
  /v1/auth/token:
    post:
      summary: Generate an access token
      tags:
        - Authentication
      description: |
        Returns a bearer access token that must be passed in an Authorization header to requests that
        require authorization such as creating a new Collection.
      operationId: backend.curation.api.v1.curation.auth.token.post
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
            example: "<YOUR-CURATOR-API-KEY>"
          required: true
          description: Your curation API key.```
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        "401":
          $ref: "#/components/responses/401"

  /v1/collections:
    get:
      summary: List Collections' metadata.
      description: |
        For each Collection in the list, the Datasets for that Collection include a subset of Dataset metadata as a 
        preview. To retrieve full Dataset metadata for a specific Collection, GET /v1/collections/{collection_id} must 
        be used.

        The default `visibility` is PUBLIC. When visibility is PUBLIC, then a list of all public Collections is 
        returned. 

        When the visibility parameter is set to PRIVATE, a list of all private Collections or private revisions of 
        public Collections that the user is authorized to access is returned. An access token MUST be set in the request
        header as: `Authorization: Bearer <access_token>`

        If a Collection in the list is a private revision of a public Collection, then it is annotated with 
        `revision_of`.

        * Optional: provide your access token in the request header as `Authorization: Bearer <access_token>`.
      operationId: backend.curation.api.v1.curation.collections.actions.get
      security:
        - curatorAccessLenient: []
        - {}
      tags:
        - Collection
      parameters:
        - description: |
            The visibility of the Collections to query for (and its constituent Datasets).

            | visibility | description | Authorization Required |
            | ---------- | ----------- | -------------- |
            | PUBLIC   | All public Collections are returned. | No |
            | PRIVATE  | All private Collections that the user is authorized to access are returned. If a Collection in the list is a private Revision of a public Collection, then it is annotated with revision_of. | Yes |
          in: query
          name: visibility
          required: false
          schema:
            $ref: "#/components/schemas/visibility"
        - name: curator
          description: |
            Return Collections owned by the specified curator. The use of this parameter is limited to curators 
            with permission to query all Collections.
          in: query
          required: false
          schema:
            type: string
          example: "John Smith"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/collection_list"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
    post:
      summary: Create a Collection
      description: >
        Create a new private Collection

        * Required: provide your access token in the request header as `Authorization: Bearer <access_token>`.
      operationId: backend.curation.api.v1.curation.collections.actions.post
      tags:
        - Collection
      security:
        - curatorAccess: []
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              $ref: "#/components/schemas/collection_form_metadata"
              required:
                - name
                - description
                - contact_name
                - contact_email
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  collection_id:
                    $ref: "#/components/schemas/collection_id"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"

  /v1/collections/{collection_id}:
    get:
      summary: Fetch a Collection with Datasets
      description: >
        Fetch full metadata for the Collection and its Datasets.

        An Authorization token must be provided in order to retrieve the id of an associated Revision for this Collection (the `revising_in` field), if such a Revision currently exists.

        * Optional: provide your access token in the request header as `Authorization: Bearer <access_token>`.
      operationId: backend.curation.api.v1.curation.collections.collection_id.actions.get
      security:
        - curatorAccessLenient: []
        - {}
      tags:
        - Collection
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/collection"
        "403":
          $ref: "#/components/responses/403"
        "410":
          $ref: "#/components/responses/410"
    patch:
      summary: Update a Collection's metadata.
      description: |
        Update a private Collection or a Revision. If any Collection metadata fields are included in the body of the
        request, these fields will be updated for the specified Collection. If links are included, they will fully
        replace all existing links. CELLxGENE Discover queries **Crossref** (link to their site) for the publication 
        metadata of the DOI such as the list of authors. If the DOI has not been submitted to Crossref by its 
        publisher, then the request returns a 400 (BAD REQUEST).

        * Required: provide your access token in the request header as `Authorization: Bearer <access_token>`.
      operationId: backend.curation.api.v1.curation.collections.collection_id.actions.patch
      security:
        - curatorAccess: []
      tags:
        - Collection
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              $ref: "#/components/schemas/collection_form_metadata"
            examples:
              update_name:
                summary: Update the name
                value:
                  name: "New Collection name"
              update_description:
                summary: Update the description
                value:
                  description: "New Collection description"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/collection_form_metadata"
                  - type: object
                    properties:
                      publisher_metadata:
                        $ref: "#/components/schemas/publisher_metadata"
                required:
                  - doi
                  - links
                  - name
                  - description
                  - contact_name
                  - contact_email
                  - publisher_metadata
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "405":
          $ref: "#/components/responses/405"
    delete:
      summary: Delete a private Collection.
      description: |
        Delete a private Collection or cancel a Revision.

        * Required: provide your access token in the request header as `Authorization: Bearer <access_token>`.
      operationId: backend.curation.api.v1.curation.collections.collection_id.actions.delete
      security:
        - curatorAccess: []
      tags:
        - Collection
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
      responses:
        "204":
          $ref: "#/components/responses/204"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "405":
          $ref: "#/components/responses/405"

  /v1/collections/{collection_id}/revision:
    post:
      summary: Start a Revision of a published Collection
      description: |
        This starts a Revision of a published Collection. A Revision is a private Collection that is a copy of a
        published Collection. When published, a Revision replaces the original published Collection in-place. Only one
        ongoing Revision may exist per published Collection at any given time.

        All methods of updating or adding Datasets and metadata to a Revision work the same as for a private Collection.

        * Required: provide your access token in the request header as `Authorization: Bearer <access_token>`.
      operationId: backend.curation.api.v1.curation.collections.collection_id.revision.post
      security:
        - curatorAccess: []
      tags:
        - Collection
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  collection_id:
                    $ref: "#/components/schemas/collection_id"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"

  /v1/collections/{collection_id}/datasets:
    post:
      summary: Create an empty Dataset and return the `id` to be used in a future upload.
      description: |
        Create a new empty Dataset and return the `id`. The `id` is used when uploading a datafile 
        to S3 to identify what Dataset the file belongs to.

        * Required: provide your access token in the request header as `Authorization: bearer <access_token>`.
      operationId: backend.curation.api.v1.curation.collections.collection_id.datasets.actions.post
      security:
        - curatorAccess: []
      tags:
        - Collection
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataset_id:
                    $ref: "#/components/schemas/dataset_id"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "405":
          $ref: "#/components/responses/405"

  /v1/collections/{collection_id}/datasets/{dataset_id}:
    delete:
      summary: Delete a Dataset or cancel processing for a Dataset in a private Collection or Revision.
      description: >-
        Delete or cancel processing for a Dataset with `dataset_id` in `collection_id`. 
        The `collection_id` MUST reference either a private Collection OR a 
        Revision.

        If the Dataset is being processed, then this endpoint will cancel processing and delete the Dataset. While 
        the cancellation process is occurring, the Dataset may still appear as part of the Collection for a few minutes, but will eventually be removed.

        * Required: provide your access token in the request header as `Authorization: bearer <access_token>`.
      operationId: backend.curation.api.v1.curation.collections.collection_id.datasets.dataset_id.actions.delete
      tags:
        - Collection
      security:
        - curatorAccess: []
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
        - $ref: "#/components/parameters/path_dataset_id"
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
    get:
      summary: Fetch Dataset metadata from a Collection.
      description: |
        Fetch Dataset metadata for `dataset_id` in a `collection_id`.
      operationId: backend.curation.api.v1.curation.collections.collection_id.datasets.dataset_id.actions.get
      tags:
        - Collection
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
        - $ref: "#/components/parameters/path_dataset_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dataset"
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "410":
          $ref: "#/components/responses/410"
    put:
      summary: Upload a Dataset by providing a link
      description: |
        Upload a datafile to become a Dataset. MUST use an existing Dataset id for the `dataset_id` path parameter. The
        Dataset will be uploaded from the provided `link` which MUST either be a presigned AWS S3 URL or Dropbox shared
        file URL.

        * Required: provide your access token in the request header as `Authorization: Bearer <access_token>`.
      operationId: backend.curation.api.v1.curation.collections.collection_id.datasets.dataset_id.actions.put
      tags:
        - Collection
      security:
        - curatorAccess: []
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
        - $ref: "#/components/parameters/path_dataset_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                link:
                  description: |
                    A user-provided link to the Dataset source file. The Dataset will be uploaded from the provided 
                    `link` which MUST either be a presigned AWS S3  or Dropbox shared file URL.
                  type: string
      responses:
        "202":
          $ref: "#/components/responses/202"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "405":
          $ref: "#/components/responses/405"
        "404":
          $ref: "#/components/responses/404"
        "413":
          $ref: "#/components/responses/413"

  /v1/collections/{collection_id}/s3-upload-credentials:
    get:
      summary: Get credentials for uploading local files
      tags:
        - Collection
      description: |
        Retrieve temporary AWS credentials for uploading Dataset source files to S3 to create
        or update Datasets for the specified Collection.


        * `<collection_id>` MUST NOT be a published Collection. Only uploads to private Collections
        (unpublished OR ongoing Revision) will be processed.

        * If there is an existing Dataset with `<dataset_id>` in `<collection_id>`, the existing Dataset
        SHALL be replaced.


        The response contains the credentials required for uploading to our AWS S3 bucket:

        * access_key

        * secret_access_key

        * session_token


        We recommend using an AWS SDK in your preferred language to perform the s3 upload, such as `boto3` in Python or
        `aws.s3` in R. To upload a datafile to a Dataset, the id of the Dataset (`<dataset_id>`) must be appended to the
        s3 key prefix (`<UploadKeyPrefix>`) that is returned in the response body from this endpoint. You must also
        retrieve the `Bucket` attribute on the response body. These values must be applied accordingly to the
        'upload file' (or equivalent) function in the s3 module of whichever AWS SDK you choose to use. Generally,
        these functions take a 'key' or 'object' argument in addition to a 'bucket' argument. Taking the values from the
        aforementioned `"UploadKeyPrefix"` and `"Bucket"` attributes that are returned on the response to this endpoint,
        this resolves to the following:

        * the object or key: `<UploadKeyPrefix>/<dataset_id>` (note: you must include the joining slash `/`)

        * the bucket: `<Bucket>`


        Once a file is successfully uploaded, it wil be processed and added to the Collection that you specified in your
        initial request to this endpoint, with no further user action required. Use
        `GET /curation/collections/{collection_id}/datasets/{dataset_id}` to retrieve metadata for the
        Dataset in question in order to check on its processing status.

        A Dataset uploaded directly to S3 in this manner will appear in the Collection only once the Dataset has started
        processing.

        * Required: provide your access token in the request header as `Authorization: Bearer <access_token>`.
      security:
        - curatorAccess: []
      operationId: backend.curation.api.v1.curation.collections.collection_id.s3_upload_credentials.get
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  Bucket:
                    description: The AWS S3 bucket to upload to.
                    type: string
                  credentials:
                    type: object
                    properties:
                      AccessKeyId:
                        type: string
                      SecretAccessKey:
                        type: string
                      SessionToken:
                        type: string
                  UploadKeyPrefix:
                    description: |
                      Use this as a prefix to the S3 Key used to upload the file to S3. This will help ensure that it is
                      processed correctly.
                    type: string
        "401":
          $ref: "#/components/responses/401"
        "410":
          $ref: "#/components/responses/410"

  /v1/collections/{collection_id}/versions:
    get:
      summary: Fetch all Collection Versions for a given Collection
      description: >
        Fetch full metadata for all published Collection Versions and their constituent Dataset Versions. The
        `collection_id` must reference a *Collection*, **NOT** a *Collection Version*. Collection Versions are returned
        in reverse-chronological order.
      operationId: backend.curation.api.v1.curation.collections.collection_id.versions.get
      tags:
        - Collection
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/collection_version"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "410":
          $ref: "#/components/responses/410"

  /v1/collection_versions/{collection_version_id}:
    get:
      summary: Fetch a Collection Version with Dataset Versions
      description: >
        Fetch full metadata for a published Collection Version and its Dataset Versions. The `collection_version_id`
        must reference a *Collection Version*, **NOT** a *Collection*.
      operationId: backend.curation.api.v1.curation.collection_versions.collection_version_id.actions.get
      tags:
        - Collection Version
      parameters:
        - $ref: "#/components/parameters/path_collection_version_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/collection_version"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "410":
          $ref: "#/components/responses/410"

  /v1/datasets:
    get:
      summary: List all Datasets
      tags:
        - Dataset
      description: |
        List all public Datasets with full metadata as well as Collection name and Collection doi.
      operationId: backend.curation.api.v1.curation.datasets.actions.get
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/dataset_index"

  /v1/datasets/{dataset_id}/versions:
    get:
      summary: List all Dataset Versions for a given Dataset
      tags:
        - Dataset
      description: |
        List all published Dataset Versions for a given Dataset. The `dataset_id` must reference a *Dataset*, **NOT** a
        *Dataset Version*. Dataset Versions are returned in reverse-chronological order.
      operationId: backend.curation.api.v1.curation.datasets.dataset_id.versions.actions.get
      parameters:
        - $ref: "#/components/parameters/path_dataset_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/dataset_version"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "410":
          $ref: "#/components/responses/410"

  /v1/dataset_versions/{dataset_version_id}:
    get:
      summary: Get full metadata for a Dataset Version
      tags:
        - Dataset Version
      description: |
        Fetch Dataset metadata for a Dataset Version. The `dataset_version_id` must reference a *Dataset Version*,
        **NOT** a *Dataset*.
      operationId: backend.curation.api.v1.curation.dataset_versions.dataset_version_id.actions.get
      parameters:
        - $ref: "#/components/parameters/path_dataset_version_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dataset_version"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "410":
          $ref: "#/components/responses/410"

components:
  schemas:
    asset_response:
      items:
        properties:
          filesize:
            description: the size of the file in bytes.
            type: number
          filetype:
            $ref: "#/components/schemas/asset_filetype"
          url:
            description: A URL to download this asset.
            type: string
        type: object
      type: array
    asset_filetype:
      enum:
        - H5AD
        - RDS
      type: string
      description: the file type of the asset.
    batch_condition:
      description: |
        These keys define the batches that a normalization or integration algorithm should be aware of.
        [batch condition schema](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#batch_condition)

      type: array
      items:
        type: string
      nullable: true
      example: ["patient", "seqBatch"]
    collection_list:
      description: Collection metadata
      properties:
        collection_id:
          $ref: "#/components/schemas/collection_id"
        collection_url:
          description: |
            The CELLxGENE Discover URL for the Collection. This points to the canonical link unless it's a revision, 
            in which case it points to the unpublished revision version.
          type: string
        collection_version_id:
          $ref: "#/components/schemas/collection_version_id"
        consortia:
          $ref: "#/components/schemas/consortia"
        contact_email:
          $ref: "#/components/schemas/contact_email"
        contact_name:
          $ref: "#/components/schemas/contact_name"
        created_at:
          type: string
        curator_name:
          $ref: "#/components/schemas/curator_name"
        datasets:
          type: array
          description: A preview of the metadata for each Dataset in the Collection.
          items:
            $ref: "#/components/schemas/dataset_preview"
        description:
          $ref: "#/components/schemas/collection_description"
        doi:
          $ref: "#/components/schemas/doi"
        links:
          $ref: "#/components/schemas/links"
        name:
          $ref: "#/components/schemas/collection_name"
        processing_status:
          $ref: "#/components/schemas/processing_status_collection"
        published_at:
          $ref: "#/components/schemas/published_at"
        publisher_metadata:
          $ref: "#/components/schemas/publisher_metadata"
        revised_at:
          $ref: "#/components/schemas/collection_revised_at"
        revising_in:
          $ref: "#/components/schemas/collection_revising_in"
        revision_of:
          $ref: "#/components/schemas/collection_revision_of"
        visibility:
          $ref: "#/components/schemas/visibility"
      type: object
    collection_url:
      description: The CELLxGENE Discover URL for the Collection.
      type: string
    consortia:
      type: array
      items:
        type: string
        description: |
          The broader research groups which contributed to this collection of datasets. Allowed consortia are:

          | Valid consortia |
          | ---------- |
          | Allen Institute for Brain Science   | 
          | BRAIN Initiative  |
          | CZ Biohub  |
          | CZI Neurodegeneration Challenge Network  |
          | CZI Single-Cell Biology  |
          | European Union’s Horizon 2020  |
          | GenitoUrinary Development Molecular Anatomy Project (GUDMAP)  |
          | Gut Cell Atlas  |
          | Human BioMolecular Atlas Program (HuBMAP)  |
          | Human Pancreas Analysis Program (HPAP) |
          | Human Tumor Atlas Network (HTAN)  |
          | Kidney Precision Medicine Project (KPMP)  |
          | LungMAP  |
          | SEA-AD  |
          | Wellcome HCA Strategic Science Support  |
    contact_email:
      description: The email of contact person for the Collection. Example email john.smith@email.com
      type: string
    contact_name:
      description: The name of the primary contact for the Collection
      type: string
    created_at:
      description: A timestamp of when the resource was created.
      type: string
    curator_name:
      description: The name of the curator for the Collection.
      nullable: true
      type: string
    collection_name:
      description: The name of the Collection.
      nullable: true
      type: string
    published_at:
      description: A timestamp of when the Collection was first published.
      nullable: true
      type: string
    dataset_published_at:
      description: A timestamp of when the Dataset was first published.
      nullable: true
      type: string
    dataset_version_published_at:
      description: A timestamp of when this Dataset Version was published.
      type: string
    collection_revised_at:
      description: A timestamp indicating the last time a Revision for this Collection was published.
      nullable: true
      type: string
    dataset_revised_at:
      description: A timestamp indicating the last time a Revision for this Dataset was published.
      nullable: true
      type: string
    collection_version_published_at:
      description: A timestamp of when this Collection Version was published.
      type: string
    collection_revising_in:
      type: string
      description: >
        If there is a private Revision for a public Collection, then `revising_in` is set to the id of 
        the private Revision in the metadata of the public Collection. The value is `None` if the user is not 
        authorized or no private Revision exists.
      nullable: true
    collection_revision_of:
      description: |
        If a private Collection is a Revision of a public Collection, then `revision_of` is set to the id of the 
        public Collection in the metadata of the private Collection. The value is `None` if no private Revision 
        exists.
      nullable: true
      type: string
    collection_tombstone:
      description: If this is True, then the Collection has been deleted from CELLxGENE Discover.
      type: boolean
    collection_description:
      description: A description of the Collection.
      type: string
    collection:
      description: Collection metadata
      properties:
        collection_id:
          $ref: "#/components/schemas/collection_id"
        collection_url:
          $ref: "#/components/schemas/collection_url"
        collection_version_id:
          $ref: "#/components/schemas/collection_version_id"
        consortia:
          $ref: "#/components/schemas/consortia"
        contact_email:
          $ref: "#/components/schemas/contact_email"
        contact_name:
          $ref: "#/components/schemas/contact_name"
        created_at:
          $ref: "#/components/schemas/created_at"
        curator_name:
          $ref: "#/components/schemas/curator_name"
        datasets:
          type: array
          description: A list of Dataset metadata associated with the Collection
          items:
            $ref: "#/components/schemas/dataset"
        description:
          $ref: "#/components/schemas/collection_description"
        doi:
          $ref: "#/components/schemas/doi"
        links:
          $ref: "#/components/schemas/links"
        name:
          $ref: "#/components/schemas/collection_name"
        processing_status:
          $ref: "#/components/schemas/processing_status_collection"
        published_at:
          $ref: "#/components/schemas/published_at"
        publisher_metadata:
          $ref: "#/components/schemas/publisher_metadata"
        revised_at:
          $ref: "#/components/schemas/collection_revised_at"
        revising_in:
          $ref: "#/components/schemas/collection_revising_in"
        revision_of:
          $ref: "#/components/schemas/collection_revision_of"
        visibility:
          $ref: "#/components/schemas/visibility"
      type: object
    collection_version:
      description: Collection Version metadata
      properties:
        collection_id:
          $ref: "#/components/schemas/collection_id"
        collection_url:
          $ref: "#/components/schemas/collection_url"
        collection_version_id:
          $ref: "#/components/schemas/collection_version_id"
        consortia:
          $ref: "#/components/schemas/consortia"
        contact_email:
          $ref: "#/components/schemas/contact_email"
        contact_name:
          $ref: "#/components/schemas/contact_name"
        created_at:
          $ref: "#/components/schemas/created_at"
        curator_name:
          $ref: "#/components/schemas/curator_name"
        dataset_versions:
          type: array
          description: A list of Dataset Versions associated with the Collection Version
          items:
            $ref: "#/components/schemas/dataset_version"
        description:
          $ref: "#/components/schemas/collection_description"
        doi:
          $ref: "#/components/schemas/doi"
        links:
          $ref: "#/components/schemas/links"
        name:
          $ref: "#/components/schemas/collection_name"
        published_at:
          $ref: "#/components/schemas/collection_version_published_at"
        publisher_metadata:
          $ref: "#/components/schemas/publisher_metadata"
        visibility:
          $ref: "#/components/schemas/visibility"
      type: object
    collection_form_metadata:
      properties:
        consortia:
          $ref: "#/components/schemas/consortia"
        contact_email:
          $ref: "#/components/schemas/contact_email"
        contact_name:
          $ref: "#/components/schemas/contact_name"
        description:
          $ref: "#/components/schemas/collection_description"
        doi:
          $ref: "#/components/schemas/doi"
        links:
          $ref: "#/components/schemas/links"
        name:
          $ref: "#/components/schemas/collection_name"
      type: object
    collection_id:
      description: A unique identifier of a Collection.
      example: fedcba98-7654-3210-fedc-ba9876543210
      type: string
      format: uuid
    collection_version_id:
      description: A unique identifier of a Collection Version.
      example: fedcba98-7654-3210-fedc-ba9876543210
      type: string
      format: uuid
    dataset:
      properties:
        assay:
          $ref: "#/components/schemas/dataset_assay"
        assets:
          $ref: "#/components/schemas/asset_response"
        batch_condition:
          $ref: "#/components/schemas/batch_condition"
        cell_count:
          description: The number of cells in the Dataset.
          nullable: true
          type: integer
        cell_type:
          description: |
            [cell type label](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#cell_type)
          default: []
          items:
            $ref: "#/components/schemas/ontology_element"
          type: array
        dataset_id:
          $ref: "#/components/schemas/dataset_id"
        dataset_version_id:
          $ref: "#/components/schemas/dataset_version_id"
        development_stage:
          description: |
            [development stage label](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#development_stage)
          default: []
          items:
            $ref: "#/components/schemas/ontology_element"
          type: array
          nullable: true
        disease:
          $ref: "#/components/schemas/dataset_disease"
        donor_id:
          $ref: "#/components/schemas/donor_id"
        explorer_url:
          $ref: "#/components/schemas/explorer_url"
        is_primary_data:
          $ref: "#/components/schemas/is_primary_data"
        mean_genes_per_cell:
          nullable: true
          type: number
        title:
          description: |
            [title](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#title)
          nullable: true
          type: string
        organism:
          $ref: "#/components/schemas/dataset_organism"
          nullable: true
        processing_status:
          $ref: "#/components/schemas/processing_status_dataset"
        processing_status_detail:
          type: string
          description: |
            When `processing_status` is set to VALIDATION_FAILURE, further details about the validation failures for
            the dataset can be found in `processing_status_detail`.
          nullable: true
        published_at:
          $ref: "#/components/schemas/dataset_published_at"
        revised_at:
          $ref: "#/components/schemas/dataset_revised_at"
        schema_version:
          description: |
            The version of the CELLxGENE schema with which the Dataset complies to. [Schemas](https://github.com/chanzuckerberg/single-cell-curation/tree/main/schema)
          nullable: true
          type: string
        self_reported_ethnicity:
          description: |
            [self reported ethnicity label](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#self_reported_ethnicity)
          default: []
          items:
            $ref: "#/components/schemas/ontology_element"
          type: array
        sex:
          description: |
            [sex label](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#sex)
          default: []
          items:
            $ref: "#/components/schemas/ontology_element"
          type: array
        suspension_type:
          $ref: "#/components/schemas/suspension_type"
        tissue:
          $ref: "#/components/schemas/dataset_tissue"
        x_approximate_distribution:
          $ref: "#/components/schemas/distribution"
      type: object
    dataset_index:
      properties:
        assay:
          $ref: "#/components/schemas/dataset_assay"
        assets:
          $ref: "#/components/schemas/asset_response"
        batch_condition:
          $ref: "#/components/schemas/batch_condition"
        cell_count:
          description: The number of cells in the Dataset.
          nullable: true
          type: integer
        cell_type:
          description: |
            [cell type label](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#cell_type)
          default: []
          items:
            $ref: "#/components/schemas/ontology_element"
          type: array
        collection_doi:
          $ref: "#/components/schemas/doi"
        collection_id:
          $ref: "#/components/schemas/collection_id"
        collection_name:
          $ref: "#/components/schemas/collection_name"
        dataset_id:
          $ref: "#/components/schemas/dataset_id"
        dataset_version_id:
          $ref: "#/components/schemas/dataset_version_id"
        development_stage:
          description: |
            [development stage label](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#development_stage)
          default: []
          items:
            $ref: "#/components/schemas/ontology_element"
          type: array
          nullable: true
        disease:
          $ref: "#/components/schemas/dataset_disease"
        donor_id:
          $ref: "#/components/schemas/donor_id"
        explorer_url:
          $ref: "#/components/schemas/explorer_url"
        is_primary_data:
          $ref: "#/components/schemas/is_primary_data"
        mean_genes_per_cell:
          nullable: true
          type: number
        title:
          description: |
            [title](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#title)
          nullable: true
          type: string
        organism:
          $ref: "#/components/schemas/dataset_organism"
        processing_status:
          $ref: "#/components/schemas/processing_status_dataset"
        processing_status_detail:
          type: string
          description: |
            When `processing_status` is set to VALIDATION_FAILURE, further details about the validation failures for
            the dataset can be found in `processing_status_detail`.
          nullable: true
        published_at:
          $ref: "#/components/schemas/dataset_published_at"
        revised_at:
          $ref: "#/components/schemas/dataset_revised_at"
        schema_version:
          description: |
            The version of the CELLxGENE schema with which the Dataset complies to. [Schemas](https://github.com/chanzuckerberg/single-cell-curation/tree/main/schema)
          nullable: true
          type: string
        self_reported_ethnicity:
          description: |
            [self reported ethnicity label](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#self_reported_ethnicity)
          default: []
          items:
            $ref: "#/components/schemas/ontology_element"
          type: array
        sex:
          description: |
            [sex label](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#sex)
          default: []
          items:
            $ref: "#/components/schemas/ontology_element"
          type: array
        suspension_type:
          $ref: "#/components/schemas/suspension_type"
        tissue:
          $ref: "#/components/schemas/dataset_tissue"
        x_approximate_distribution:
          $ref: "#/components/schemas/distribution"
      type: object
    dataset_version:
      properties:
        assay:
          $ref: "#/components/schemas/dataset_assay"
        assets:
          $ref: "#/components/schemas/asset_response"
        batch_condition:
          $ref: "#/components/schemas/batch_condition"
        cell_count:
          description: The number of cells in the Dataset.
          nullable: true
          type: integer
        cell_type:
          description: |
            [cell type label](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#cell_type)
          default: []
          items:
            $ref: "#/components/schemas/ontology_element"
          type: array
        collection_id:
          $ref: "#/components/schemas/collection_id"
        collection_version_id:
          description: |
            The Collection Version in which this Dataset Version was first published.
          type: string
          format: uuid
        dataset_id:
          $ref: "#/components/schemas/dataset_id"
        dataset_version_id:
          $ref: "#/components/schemas/dataset_version_id"
        development_stage:
          description: |
            [development stage label](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#development_stage)
          default: []
          items:
            $ref: "#/components/schemas/ontology_element"
          type: array
          nullable: true
        disease:
          $ref: "#/components/schemas/dataset_disease"
        donor_id:
          $ref: "#/components/schemas/donor_id"
        is_primary_data:
          $ref: "#/components/schemas/is_primary_data"
        mean_genes_per_cell:
          nullable: true
          type: number
        title:
          description: |
            [title](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#title)
          nullable: true
          type: string
        organism:
          $ref: "#/components/schemas/dataset_organism"
          nullable: true
        published_at:
          $ref: "#/components/schemas/dataset_version_published_at"
        schema_version:
          description: |
            The version of the CELLxGENE schema with which the Dataset complies to. [Schemas](https://github.com/chanzuckerberg/single-cell-curation/tree/main/schema)
          nullable: true
          type: string
        self_reported_ethnicity:
          description: |
            [self reported ethnicity label](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#self_reported_ethnicity)
          default: []
          items:
            $ref: "#/components/schemas/ontology_element"
          type: array
        sex:
          description: |
            [sex label](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#sex)
          default: []
          items:
            $ref: "#/components/schemas/ontology_element"
          type: array
        suspension_type:
          $ref: "#/components/schemas/suspension_type"
        tissue:
          $ref: "#/components/schemas/dataset_tissue"
        x_approximate_distribution:
          $ref: "#/components/schemas/distribution"
      type: object
    dataset_assay:
      description: |
        [assay label](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#assay)
      default: []
      items:
        $ref: "#/components/schemas/ontology_element"
      type: array
    dataset_disease:
      description: |
        [disease label](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#disease)
      default: []
      items:
        $ref: "#/components/schemas/ontology_element"
      type: array
    dataset_organism:
      description: |
        [organism label](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#organism)
      default: []
      items:
        $ref: "#/components/schemas/ontology_element"
      type: array
    dataset_tissue:
      description: |
        [tissue label](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#tissue)
      default: []
      items:
        $ref: "#/components/schemas/ontology_element"
      type: array
    dataset_tombstone:
      description: When True, this Dataset was withdrawn from the Data curation at the request of its submitter.
      type: boolean
    dataset_id:
      description: A unique identifier of a Dataset.
      example: 01234567-89ab-cdef-0123-456789abcdef
      type: string
      format: uuid
    dataset_version_id:
      description: A unique identifier of a Dataset Version.
      example: 01234567-89ab-cdef-0123-456789abcdef
      type: string
      format: uuid
    dataset_preview:
      properties:
        assay:
          $ref: "#/components/schemas/dataset_assay"
        disease:
          $ref: "#/components/schemas/dataset_disease"
        dataset_id:
          $ref: "#/components/schemas/dataset_id"
        organism:
          $ref: "#/components/schemas/dataset_organism"
        tissue:
          $ref: "#/components/schemas/dataset_tissue"
        suspension_type:
          $ref: "#/components/schemas/suspension_type"
      type: object
    distribution:
      description:
        CELLxGENE Discover runs a heuristic to detect the approximate distribution
        of the data in X so that it can accurately calculate statistical properties
        of the data. This field enables the curator to override this heuristic and
        specify the data distribution explicitly. [x_approximate_distribution](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#x_approximate_distribution)
      enum:
        - COUNT
        - NORMAL
      type: string
      nullable: true
    doi:
      description: Document Object Identifier (DOI). Specifically, only the _CURIE reference_.
      type: string
      nullable: true
      example: "10.1093/ajae/aaq063"
    explorer_url:
      description: |
        The URL at which a given Dataset may be explored using CELLxGENE Explorer.
      nullable: true
      type: string
    donor_id:
      description: Free-text that identifies a unique individual that data were derived from.
      type: array
      items:
        type: string
      nullable: true
    is_primary_data:
      description: |
        [is_primary_data](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#is_primary_data)

        Describes whether cellular observations for this Dataset are all
        canonical (True), all non-canonical (False), or contain a mixture (True, False).
      items:
        type: boolean
      type: array
    links:
      items:
        additionalProperties: false
        description: A URL that links associated resources with the Collection.
        properties:
          link_name:
            description: A brief description of the URL.
            nullable: true
            type: string
          link_type:
            description: Any valid URL.
            enum:
              - PROTOCOL
              - RAW_DATA
              - LAB_WEBSITE
              - OTHER
              - DATA_SOURCE
            type: string
          link_url:
            description: The URL of the link.
            type: string
        required:
          - link_url
          - link_type
        type: object
      type: array
    ontology_element:
      properties:
        label:
          type: string
        ontology_term_id:
          type: string
      type: object
    problem:
      description: Error message container for HTTP APIs.
      properties:
        detail:
          type: string
        title:
          type: string
        type:
          type: string
      type: object
    processing_status_collection:
      description: |
        Processing status for a Collection
        | `processing_status` | Description |
        | ------------------- | ----------- |
        | `"FAILURE"` | one or more Datasets ran into an error during processing. More information can be found in the Dataset processing_status logs. |
        | `"PENDING"` | one or more Datasets are still being processed. |
        | `"SUCCESS"` | all Datasets have been processed successfully. |
        | `null` | the Collection has no Datasets. |
      enum:
        - FAILURE
        - PENDING
        - SUCCESS
      nullable: true
      type: string
    processing_status_dataset:
      description: |
        Processing status for a Dataset
        | `processing_status` | Description |
        | ------------------- | ----------- |
        | `"PENDING"` | the Dataset has is still being processed. |
        | `"SUCCESS"` | the Dataset has successfully been processed. |
        | `"VALIDATION_FAILURE"` | An error occured during validation. See `processing_status_detail`|
        | `"PIPELINE_FAILURE"`| An error occured during processing. |
        | `"INITIALIZED"` | Dataset id created, and awaiting upload. |
      enum:
        - PENDING
        - SUCCESS
        - VALIDATION_FAILURE
        - PIPELINE_FAILURE
        - INITIALIZED
      nullable: true
      type: string
    publisher_metadata:
      nullable: true
      properties:
        authors:
          items:
            properties:
              family:
                type: string
              given:
                type: string
              name:
                type: string
            type: object
          type: array
        is_preprint:
          type: boolean
        journal:
          type: string
        published_day:
          type: number
        published_month:
          type: number
        published_year:
          type: number
      type: object
    suspension_type:
      description: |
        [suspension_type](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/3.0.0/schema.md#suspension_type)

        List of unique suspension types represented in the dataset, corresponding to dataset's assay(s).
        Possible item values are 'nucleus', 'cell', and/or 'na'.
      type: array
      items:
        type: string
      nullable: true
      example: ["cell"]
    visibility:
      default: PUBLIC
      description: |
        The visibility of the Collection.

        | visibility | description |
        | ---------- | ----------- | 
        | PUBLIC   | The Collection is published and accessible to all users of CELLxGENE Discover |
        | PRIVATE  | The Collection is in private review, either as a new Collection that has not been published or a Revision of a previously published Collection. |
      enum:
        - PUBLIC
        - PRIVATE
      type: string
  parameters:
    path_collection_id:
      description: The uuid of a Collection.
      in: path
      name: collection_id
      required: true
      schema:
        $ref: "#/components/schemas/collection_id"
    path_collection_version_id:
      description: The uuid of a Collection Version.
      in: path
      name: collection_version_id
      required: true
      schema:
        $ref: "#/components/schemas/collection_version_id"
    path_dataset_id:
      description: The uuid of the Dataset.
      in: path
      name: dataset_id
      required: true
      schema:
        $ref: "#/components/schemas/dataset_id"
    path_dataset_version_id:
      description: The uuid of the Dataset Version.
      in: path
      name: dataset_version_id
      required: true
      schema:
        $ref: "#/components/schemas/dataset_version_id"
  responses:
    "200":
      description: OK
    "201":
      description: Created
    "202":
      description: Accepted
    "204":
      description: No content
    "400":
      content:
        application/problem+json:
          schema:
            type: object
            properties:
              detail:
                type: string
              invalid_parameters:
                nullable: true
                type: array
                items:
                  type: object
                  properties:
                    name:
                      description: the errant parameter
                      type: string
                    reason:
                      description: the specific problem with the parameter
                      type: string
                    value:
                      description: the errant value
                      type: string
              title:
                type: string
              type:
                type: string
      description: Invalid or missing parameter
    "401":
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
      description: Failed to authenticate
    "403":
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
      description: Forbidden
    "404":
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
      description: Resource not found
    "405":
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
      description: Method not allowed
    "409":
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
      description: File conflict
    "410":
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
      description: Content has been removed
    "413":
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
      description: Exceed File Size Limit
  securitySchemes:
    curatorAccess:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: backend.portal.api.app.v1.authentication.curation_access_token_func
    curatorAccessLenient:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: backend.portal.api.app.v1.authentication.curation_access_token_func_lenient
