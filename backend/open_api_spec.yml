openapi: 3.0.0
info:
servers:
paths:
  /curation/auth/key:
    post:
      summary: Generate the curator's API key
      security:
        - cxguserCookie: []
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    required: true
                  id:
                    type: string
                    required: true
        "401":
          $ref: "#/components/responses/401"
    get:
      summary: Fetch the identifier of the curator's active API keys
      security:
        - cxguserCookie: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/401"
    delete:
      summary: Delete the curator's API key
      security:
        - cxguserCookie: []
      responses:
        "202":
          $ref: "#/components/responses/202"
        "401":
          $ref: "#/components/responses/401"

  /curation/auth/token:
    post:
      summary: Generate an access token
      security:
        - apiKey: []
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        "401":
          $ref: "#/components/responses/401"

  /curation/collections:
    get:
      description: Fetch all Collections metadata. Authentication required for private collections.
      security:
        - cxguserCookieLenient: []
      parameters:
        - $ref: "#/components/parameters/query_visibility"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  collections:
                    type: array
                      items:
                        $ref: "#/components/schemas/collection_with_dataset_preview"
        "401":
          $ref: "#/components/responses/401"
    post:
      description: Create a new Collection
      security:
        - cxguserCookie: []
      requestBody:
        content:
          application/json:
            $ref: "#/components/schemas/collection_metadata"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/collection_uuid"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"

  /curation/collections/{collection_id}:
    delete:
      description: Delete a private Collection. Delete an existing revision for a public Collection.
      security:
        - cxguserCookie: []
      parameters:
        - $ref: "#/components/parameters/path_collection_uuid"
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              type: string
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
    get:
      description: Fetch Collection metadata and associated Datasets, public and private.
      security:
        - cxgUserCookieLenient: []
      parameters:
        - $ref: "#/components/parameters/path_collection_uuid"
        - $ref: "#/components/parameters/query_visibility"
      responses:
        "200":
          description: OK
          content:
            application/json:
              $ref: "#/components/schemas/collection"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
    put:
      description: Start a revision. Update any included Collection metadata fields.
      security:
        - cxguserCookie: []
      parameters:
        - $ref: "#/components/parameters/path_collection_uuid"
      requestBody:
        content:
          application/json:
            $ref: "#/components/schemas/collection_metadata"
      responses:
        "204":
          $ref: "#/components/responses/204"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"

  /curation/collections/{collection_id}/datasets:
    delete:
      description: Delete a private Dataset.
      security:
        - cxguserCookie: []
      parameters:
        - $ref: "#/components/parameters/path_collection_uuid"
        - $ref: "#/components/parameters/optional_query_curator_tag"
        - $ref: "#/components/parameters/optional_query_dataset_uuid"
      responses:
        "204":
          $ref: "#/components/responses/204"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
    get:
      description: Fetch a Dataset.
      security:
        - cxguserCookie: []
      parameters:
        - $ref: "#/components/parameters/path_collection_uuid"
        - $ref: "#/components/parameters/optional_query_curator_tag"
        - $ref: "#/components/parameters/optional_query_dataset_uuid"
        - $ref: "#/components/parameters/query_visibility"
      responses:
        "200":
          description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    dataset:
                      $ref: "#/components/schemas/dataset"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
    patch:
      description: Update a Dataset's curator-provided tag.
      security:
        - cxguserCookie: []
      parameters:
        - $ref: "#/components/parameters/path_collection_uuid"
        - $ref: "#/components/parameters/optional_query_curator_tag"
        - $ref: "#components/parameters/optional_query_dataset_uuid"
        - $ref: "#/components/parameters/query_visibility"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                curator_tag:
                  type: string
                  description: curator-provided tag
      responses:
        "204":
          $ref: "#/components/responses/204"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"

  /curation/collections/{collection_id}/datasets/upload-links:
    put:
      description: Upload a Dataset. The Dataset will be downloaded from the provided link.
      security:
        - cxguserCookie: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                curator_tag:
                  type: string
                id:
                  $ref: "#/components/schemas/dataset_uuid"
                link:
                  $ref: "#/components/schemas/upload_link"
      responses:
        "204":
          $ref: "#/components/responses/204"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"

  /curation/collections/{collection_id}/datasets/upload-s3:
    put:
      description: >
        Retrieve AWS credentials for uploading Dataset source files to S3 to create
        or update Datasets for the specified Collection.
      security:
        - cxguserCookie: []
      parameters:
        - $ref: "#/components/parameters/path_collection_uuid"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  credentials:
                    type: object
                    properties:
                      access_key:
                        type: string
                        required: true
                      secret_access_key:
                        type: string
                        required: true
                      access_token:
                        type: string
                        required: true
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"

  /curation/collections/{collection_id}/datasets/status:
    get:
      description: Get the processing status for a Dataset.
      security:
        - cxguserCookie: []
      parameters:
        - $ref: "#/components/parameters/path_collection_uuid"
        - $ref: "#/components/parameters/optional_query_curator_tag"
        - $ref: "#components/parameters/optional_query_dataset_uuid"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type:
                  object:
                    properties:
                      status:
                        type: string
                        enum: [FAILURE, PENDING, SUCCESS]
                        required: true

components:
  schemas:
    user_uuid:
      description: A unique identifier of a logged in User of Corpora.
      type: string
    userinfo:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/user_uuid"
        name:
          description: The user's name
          type: string
        email:
          description: The user's email
          type: string
    collection_metadata:
      type: object
      additionalProperties: false
      required:
        - name
        - description
        - contact_name
        - contact_email
        - curator_name
      properties:
        name:
          type: string
          description: name of the collection
        description:
          type: string
          description: description of the collection
        contact_name:
          type: string
          description: name of the primary person of contact for the collection
        contact_email:
          type: string
          description: email of contact person for the collection
        curator_name:
          type: string
          description: name of the curator of the collection.
        links:
          $ref: "#/components/schemas/links"
        published_at:
          type: number
          description: date of publication
        revised_at:
          type: number
          description: date of revision
    collection_uuid:
      description: A unique identifier of a Collection.
      type: string
    curator_tag:
      description: A curator-provided tag that is unique within a Collection.
      type: string
    dataset_uuid:
      description: A unique identifier of a Dataset.
      type: string
    geneset_uuid:
      description: A unique identifier of a gene set.
      type: string
    visibility:
      description: >-
        Determines the visibility of the collection, that will either make the collection visible on the public
        sites or only viewable through obfuscated URLs.
      type: string
      enum: [PUBLIC, PRIVATE]
    distribution:
      description: >-
        Cellxgene runs a heuristic to detect the approximate distribution of the data in X so that it can accurately
        calculate statistical properties of the data. This field enables the curator to override this heuristic
        and specify the data distribution explicitly.
      type: string
      enum: [COUNT, NORMAL]
    is_primary_data:
      description: >-
        Describes whether cellular observations for this dataset are all canonical (PRIMARY),
        all non-canonical (SECONDARY), or contain a mixture (BOTH).
      type: string
      enum: [PRIMARY, SECONDARY, BOTH]
    links:
      type: array
      items:
        type: object
        additionalProperties: false
        required:
          - link_url
          - link_type
        properties:
          link_name:
            type: string
          link_url:
            type: string
          link_type:
            type: string
            enum: [PROTOCOL, RAW_DATA, DOI, LAB_WEBSITE, OTHER, DATA_SOURCE]
    collection:
      type: object
      required:
        - id
        - name
        - visibility
        - contact_name
        - contact_email
        - curator_name
        - revised_at
        - created_at
        - links
        - datasets
      properties:
        id:
          $ref: "#/components/schemas/collection_uuid"
        name:
          type: string
        visibility:
          $ref: "#/components/schemas/visibility"
        contact_name:
          type: string
        contact_email:
          type: string
        curator_name:
          type: string
        revised_at:
          type: number
        created_at:
          type: number
        links:
          $ref: "#/components/schemas/links"
        datasets:
          type: array
          items:
            $ref: "#/components/schemas/dataset"
        access_type:
          type: string
          enum: [READ, WRITE]
        published_at:
          type: number
        description:
          type: string
        obfuscated_uuid:
          type: string
        data_submission_policy_version:
          type: string
        genesets:
          type: array
          items:
            $ref: "#/components/schemas/gene_set"
    collection_with_dataset_preview:
      type: object
      required:
        - id
        - name
        - visibility
        - contact_name
        - contact_email
        - curator_name
        - revised_at
        - created_at
        - links
        - datasets
      properties:
        id:
          $ref: "#/components/schemas/collection_uuid"
        name:
          type: string
        visibility:
          $ref: "#/components/schemas/visibility"
        contact_name:
          type: string
        contact_email:
          type: string
        curator_name:
          type: string
        revised_at:
          type: number
        created_at:
          type: number
        links:
          $ref: "#/components/schemas/links"
        datasets:
          type: array
          items:
            $ref: "#/components/schemas/dataset_preview"
        access_type:
          type: string
          enum: [ READ, WRITE ]
        published_at:
          type: number
        description:
          type: string
        obfuscated_uuid:
          type: string
        data_submission_policy_version:
          type: string
        genesets:
          type: array
          items:
            $ref: "#/components/schemas/gene_set"
    dataset:
      type: object
      required:
        - id
        - curator_tag
        - name
        - revision
        - collection_id
        - collection_visibility
        - revised_at
        - is_primary_data
        - X_normalization
        - dataset_assets
        - tombstone
        - assay
        - organism
        - tissue
      properties:
        id:
          $ref: "#/components/schemas/dataset_uuid"
        curator_tag:
          $ref: "#/components/schemas/curator_tag"
        name:
          type: string
        revision:
          type: integer
        collection_id:
          $ref: "#/components/schemas/collection_uuid"
        collection_visibility:
          $ref: "#/components/schemas/visibility"
        revised_at:
          type: number
        is_primary_data:
          $ref: "#/components/schemas/is_primary_data"
        X_normalization:
          type: string
        dataset_assets:
          type: array
          items:
            $ref: "#/components/schemas/dataset_asset"
        tombstone:
          type: boolean
        assay:
          $ref: "#/components/schemas/ontology_element_array"
        organism:
          $ref: "#/components/schemas/ontology_element_array"
        tissue:
          $ref: "#/components/schemas/ontology_element_array"
        disease:
          $ref: "#/components/schemas/ontology_element_array"
        sex:
          $ref: "#/components/schemas/ontology_element_array"
        ethnicity:
          $ref: "#/components/schemas/ontology_element_array"
        development_stage:
          $ref: "#/components/schemas/ontology_element_array"
        dataset_deployments:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
        linked_genesets:
          type: array
          items:
            type: string
        cell_type:
          $ref: "#/components/schemas/ontology_element_array"
        cell_count:
          type: integer
        X_approximate_distribution:
          $ref: "#/components/schemas/distribution"
        schema_version:
          type: string
    dataset_preview:
      type: object
      required:
        - id
        - curator_tag
        - tissue
        - assay
        - disease
        - organism
        - tombstone
      properties:
        id:
          $ref: "#/components/schemas/dataset_uuid"
        curator_tag:
          $ref: "#/components/schemas/curator_tag"
        tissue:
          $ref: "#/components/schemas/ontology_element_array"
        assay:
          $ref: "#/components/schemas/ontology_element_array"
        disease:
          $ref: "#/components/schemas/ontology_element_array"
        organism:
          $ref: "#/components/schemas/ontology_element_array"
        tombstone:
          type: boolean
    dataset_asset:
      type: object
      properties:
        id:
          type: string
        dataset_id:
          type: string
        filetype:
          type: string
          enum: [H5AD, RDS, CXG]
        filename:
          type: string
        type:
          type: string
          enum: [REMIX, ORIGINAL]
        s3_uri:
          type: string
    gene_set:
      type: object
      properties:
        name:
          type: string
        id":
          type: string
        description:
          type: string
        linked_datasets:
          type: array
          items:
            type: string
    ontology_element:
      type: object
      properties:
        ontology_term_id:
          type: string
        label:
          type: string
    ontology_element_array:
      type: array
      items:
        $ref: "#/components/schemas/ontology_element"
    problem:
      type: object
      description: Error message container for HTTP APIs.
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
    user_defined_gene_sets:
      type: object
      description: User created geneset information
      properties:
        gene_set_name:
          type: string
        gene_set_description:
          type: string
        genes:
          type: array
          items:
            type: object
            description: Gene specific information
            properties:
              gene_symbol:
                type: string
              gene_description:
                type: string
              additional_params:
                type: object
    dataset_identifiers:
      type: object
      description: Information for identifying and accessing a datatset
      required:
        - dataset_id
        - collection_id
        - tombstoned
      properties:
        dataset_id:
          type: string
        collection_id:
          type: string
        explorer_s3_uri:
          type: string
        tombstoned:
          type: boolean
    upload_link:
      description: A link from which to download a Dataset source file.
      type: string

  parameters:
    optional_query_curator_tag:
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/curator_tag"
    optional_query_dataset_uuid:
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/dataset_uuid"
    path_collection_uuid:
      name: collection_uuid
      description: >
        The uuid of a collection. To specify the private revision of a public
        collection, use the uuid of the public collection.
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/collection_uuid"
    path_dataset_uuid:
      name: dataset_uuid
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/dataset_uuid"
    path_geneset_uuid:
      name: geneset_uuid
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/geneset_uuid"
    path_filename:
      name: filename
      description: The name of a file to add, remove, or download.
      in: path
      required: true
      schema:
        type: string
    query_user_uuid:
      name: user_uuid
      description: an ID that represents the user.
      in: query
      schema:
        $ref: "#/components/schemas/user_uuid"
    query_visibility:
      name: visibility
      in: query
      schema:
        $ref: "#/components/schemas/visibility"
        default: PUBLIC

  responses:
    200:
      description: OK
    201:
      description: Created
    202:
      description: Accepted
    204:
      description: No content
    400:
      description: Invalid or missing parameter
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
    401:
      description: Failed to authenticate
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
    403:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
    404:
      description: Resource not found
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
    405:
      description: Method not allowed
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
    409:
      description: File conflict
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
    413:
      description: Exceed File Size Limit
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
  securitySchemes:
    cxguserCookie:
      type: apiKey
      in: cookie
      name: cxguser
      x-apikeyInfoFunc: backend.corpora.lambdas.api.v1.authentication.apikey_info_func
    cxguserCookieLenient:
      type: apiKey
      in: cookie
      name: cxguser
      x-apikeyInfoFunc: backend.corpora.lambdas.api.v1.authentication.apikey_info_func_lenient
    dummyAuth:
      type: apiKey
      in: header
      name: cxgpublic
      x-apikeyInfoFunc: backend.corpora.lambdas.api.v1.authentication.apikey_dummy_info_func
    APIKeyAuth:
      type: apiKey
      in: header
      name: apiKey
