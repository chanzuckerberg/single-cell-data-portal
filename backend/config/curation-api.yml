openapi: 3.0.0
info:
  version: "1.0.0"
  title: Chan Zuckerburg Initiative cellxgene Data Portal Curator API
servers:
  - description: Production environment
    url: https://api.cellxgene.cziscience.com/
  - description: Development environment
    url: https://api.cellxgene.dev.single-cell.czi.technology
  - description: Staging environment
    url: https://api.cellxgene.staging.single-cell.czi.technology
paths:
  /v1/auth/token:
    post:
      summary: Generate an access token
      tags:
        - authentication
      description: >-
        Returns a bearer access token that must be passed as a parameter to requests that
        require authorization such as creating a new Collection.
      operationId: backend.corpora.lambdas.api.v1.curation.auth.token.post
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
            example: "<YOUR-CURATOR-API-KEY>"
          required: true
          description: Your curation API key.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        "401":
          $ref: "#/components/responses/401"

  /v1/collections:
    get:
      summary: Fetch Collections metadata.
      description: >-
        * When the visibility parameter is unspecified or set to `PUBLIC`, a list of all public collections is returned.
        The Authorization header is not required. If a collection in the list has been deleted, then it is annotated
        with tombstone set to True.

        * When the visibility parameter is set to `PRIVATE`, a list of all private collections that the user is
        authorized to access is returned. The Authorization header is required. If a collection in the list is a private
        revision of a public collection, then it is annotated with revision_of.

        * Each collection in the list contains a subset of collection metadata as a preview.

        * To retrieve full collection metadata for a specific collection, `GET /v1/collections/{collection_id}`
        must be used.
      operationId: backend.corpora.lambdas.api.v1.curation.collections.actions.get
      security:
        - curatorAccessLenient: []
        - {}
      tags:
        - collection
      parameters:
        - $ref: "#/components/parameters/query_visibility"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  collections:
                    type: array
                    items:
                      allOf:
                        - $ref: "#/components/schemas/collection_common"
                        - type: object
                          properties:
                            datasets:
                              type: array
                              items:
                                $ref: "#/components/schemas/dataset_preview"
        "401":
          $ref: "#/components/responses/401"
    post:
      summary: Create a Collection
      description: Create a new Collection
      operationId: backend.corpora.lambdas.api.v1.collection.create_collection
      tags:
        - collection
      security:
        - curatorAccess: []
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              $ref: "#/components/schemas/collection_form_metadata"
              required:
                - name
                - description
                - contact_name
                - contact_email
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  collection_id:
                    $ref: "#/components/schemas/collection_id"
        "400":
          $ref: "#/components/responses/400_multiple"
        "401":
          $ref: "#/components/responses/401"

  /v1/collections/{collection_id}:
    get:
      summary: Fetch a Collection with Datasets
      description: Fetch full Collection metadata and associated Datasets.
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.actions.get
      security:
        - curatorAccessLenient: []
        - {}
      tags:
        - collection
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/collection_common"
                  - type: object
                    properties:
                      datasets:
                        type: array
                        items:
                          $ref: "#/components/schemas/dataset"
        "404":
          $ref: "#/components/responses/404"
    patch:
      summary: Update a Collection's metadata.
      description: >-
        Update a private Collection or a Revision. If any Collection metadata fields are included in the body of the
        request, these fields SHALL be updated for the specified Collection. If links are included, they will fully
        replace all existing links. A DOI link that cannot be found at Crossref results in a 400 (BAD REQUEST).
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.actions.patch
      security:
        - curatorAccess: []
      tags:
        - collection
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              $ref: "#/components/schemas/collection_form_metadata"
            examples:
              update_name:
                summary: Update the name
                value:
                  name: "New Collection name"
              update_description:
                summary: Update the description
                value:
                  description: "New Collection description"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/collection_form_metadata"
                  - type: object
                    properties:
                      publisher_metadata:
                        $ref: "#/components/schemas/publisher_metadata"
                required:
                  - links
                  - name
                  - description
                  - contact_name
                  - contact_email
                  - publisher_metadata
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400_multiple"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
    delete:
      summary: Delete a private collection.
      description: >-
        Delete a private collection or cancel a revision.
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.actions.delete
      security:
        - curatorAccess: []
      tags:
        - collection
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
      responses:
        "204":
          $ref: "#/components/responses/204"
        "400":
          $ref: "#/components/responses/400_multiple"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "405":
          $ref: "#/components/responses/405"

  /v1/collections/{collection_id}/revision:
    post:
      summary: Start a revision of a published Collection
      description: >-
        This starts a Revision of a published Collection. A Revision is a private Collection that is a copy of a
        published Collection. When published, a Revision replaces the original published Collection in-place. Only one
        ongoing Revision may exist per published Collection at any given time.

        All methods of updating or adding Datasets and metadata to a Revision work the same as for a private Collection.
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.revision.post_collection_revision
      security:
        - curatorAccess: []
      tags:
        - collection
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  revision_id:
                    $ref: "#/components/schemas/collection_id"
        "401":
          $ref: "#/components/responses/401"
        "409":
          $ref: "#/components/responses/409"

  /v1/collections/{collection_id}/datasets:
    delete:
      summary: Delete a private Dataset
      description: >-
        Delete a Dataset. The **collection_id** MUST reference either a private Collection OR a Revision. MUST
        indicate the Dataset by providing *one* of either the **curator_tag** (non-null) OR the **dataset_id**
        parameters.
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.datasets.actions.delete
      tags:
        - collection
      security:
        - curatorAccess: []
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
        - $ref: "#/components/parameters/query_curator_tag"
        - $ref: "#/components/parameters/query_dataset_id"
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
    get:
      summary: Fetch a Dataset from a collection
      description: >-
        Fetch a Dataset from a collection. If a `dataset_id` or a `curator_tag` is provided as a query parameter
        the associated Dataset metadata is returned.
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.datasets.actions.get
      tags:
        - collection
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
        - $ref: "#/components/parameters/query_curator_tag"
        - $ref: "#/components/parameters/query_dataset_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                - $ref: "#/components/schemas/dataset"
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
    patch:
      summary: Update a Dataset's curator tag.
      tags:
        - collection
      description: >-
        Update a Dataset's curator-provided tag. The Dataset MUST NOT belong to a published Collection. MUST indicate
        the Dataset by providing *one* of either the **curator_tag** (non-null) OR the **dataset_id** parameters.
      security:
        - curatorAccess: []
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.datasets.actions.patch
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
        - $ref: "#/components/parameters/query_curator_tag"
        - $ref: "#/components/parameters/query_dataset_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                curator_tag:
                  type: string
                  description: curator-provided tag
            example:
              curator_tag: "new/curator_tag"
      responses:
        "204":
          $ref: "#/components/responses/204"
        "400":
          $ref: "#/components/responses/400_multiple"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"

  /v1/collections/{collection_id}/datasets/upload-link:
    put:
      summary: Upload a Dataset by providing a link
      description: >-
        Upload a Dataset. The Dataset will be uploaded from the provided link. MUST include a **curator_tag** in the
        request body; if an existing Dataset has this tag, the existing Dataset SHALL be replaced, otherwise a new
        Dataset will be added. MAY include the **id** of an existing Dataset, in which case the existing Dataset
        SHALL be replaced.
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.datasets.upload_link.put
      tags:
        - collection
      security:
        - curatorAccess: []
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                curator_tag:
                  type: string
                id:
                  $ref: "#/components/schemas/dataset_id"
                link:
                  $ref: "#/components/schemas/upload_link"
            examples:
              tag:
                summary: Using the tag
                value:
                  curator_tag: "<new_or_existing_tag>"
                  link: "<download_link_for_data_source_file>"
              id:
                summary: Using the dataset uuid
                value:
                  id: "<existing_dataset_id>"
                  link: "<download_link_for_data_source_file>"
      responses:
        "202":
          $ref: "#/components/responses/202"
        "400":
          $ref: "#/components/responses/400_multiple"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"

  /v1/collections/{collection_id}/datasets/s3-upload-credentials:
    get:
      summary: Get credentials for uploading local files
      tags:
        - collection
      description: >-
        Retrieve temporary AWS credentials for uploading Dataset source files to S3 to create
        or update Datasets for the specified Collection.

        * Uploads to <root_bucket> MUST take the form of `s3://<root_bucket>/<collection_id>/<curator_tag>`.

        * `<collection_id>` MUST NOT be a published Collection. Only uploads to private Collections
        (unpublished OR ongoing Revision) will be processed.

        * If there is no Dataset with tag `<curator_tag>` in `<collection_id>`, a new Dataset SHALL be added.

        * If there is an existing Dataset with tag `<curator_tag>` in `<collection_id>`, the existing Dataset
        SHALL be replaced.


        The response contains the credentials required for uploading to our AWS S3 bucket:

        * access_key

        * secret_access_key

        * session_token


        To upload the files to S3, use the Python boto3 package. Once a file is successfully uploaded, it wil be
        processed and added to the Collection (specified in the S3 key path) with no further user action required.
        Include an email address in the S3 file upload metadata to receive processing and error notifications.
        Alternatively, use `/curation/collections/{collection_id}/datasets/status` to check on the processing
        status for a given Dataset.

      security:
        - curatorAccess: []
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.datasets.upload_s3.get
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  credentials:
                    type: object
                    properties:
                      AccessKeyId:
                        type: string
                      SecretAccessKey:
                        type: string
                      SessionToken:
                        type: string
                  UploadKeyPrefix:
                    type: string
                  Bucket:
                    type: string
        "401":
          $ref: "#/components/responses/401"

  /v1/collections/{collection_id}/datasets/assets:
    get:
      summary: Retrieve links for downloading a dataset
      tags:
        - collection
      description: >-
        Generate URLs to download the files associated with the dataset. MUST include *one* of the **curator_tag**
        and **dataset_id** parameters.
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.assets.get
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
        - $ref: "#/components/parameters/query_curator_tag"
        - $ref: "#/components/parameters/query_dataset_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/asset_response"
        "202":
          description: Unable to retrieve one or more asset response fields.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/asset_response"
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"

components:
  schemas:
    asset_response:
      type: object
      properties:
        dataset_id:
          $ref: "#/components/schemas/dataset_id"
        curator_tag:
          $ref: "#/components/schemas/curator_tag"
        assets:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/dataset_asset"
              - type: object
                properties:
                  presigned_url:
                    type: string
                  file_size:
                    type: number
    collection_id:
      description: A unique identifier of a Collection.
      type: string
      example: fedcba98-7654-3210-fedc-ba9876543210
    collection_common:
      description: Full Collection metadata
      type: object
      properties:
        id:
          $ref: "#/components/schemas/collection_id"
        name:
          type: string
          nullable: true
        visibility:
          $ref: "#/components/schemas/visibility"
        collection_url:
          type: string
        contact_name:
          type: string
          nullable: true
        contact_email:
          type: string
          nullable: true
        curator_name:
          type: string
          nullable: true
        revised_at:
          type: string
          nullable: true
        created_at:
          type: string
        links:
          $ref: "#/components/schemas/links"
        access_type:
          type: string
          enum: [READ, WRITE]
          nullable: true
        published_at:
          type: string
          nullable: true
        description:
          type: string
        publisher_metadata:
          $ref: "#/components/schemas/publisher_metadata"
        revision_of:
          type: string
          description: the id of the published version of this Collection
          nullable: true
        revising_in:
          type: string
          description: the id of the associated revision Collection, if one exists and the user is authorized
          nullable: true
        tombstone:
          type: boolean
        processing_status:
          $ref: "#/components/schemas/processing_status"
    conversion_status:
      type: string
      description: Status for a Dataset asset generated during initial Dataset source file processing
      enum: [CONVERTED, CONVERTING, FAILED, NA, UPLOADING, UPLOADED, SKIPPED]
    curator_tag:
      description: A curator-provided tag for a Dataset that serves as a unique identifier *within a Collection*.
      type: string
      example: an/example/curator_tag.h5ad
    dataset_id:
      description: A unique identifier of a Dataset.
      type: string
      example: 01234567-89ab-cdef-0123-456789abcdef
    visibility:
      description: >-
        Determines the visibility of the collection, that will either make the collection visible on the public
        sites or only viewable through obfuscated URLs.
      type: string
      enum: [PUBLIC, PRIVATE]
      default: PUBLIC
    distribution:
      description: >-
        Cellxgene runs a heuristic to detect the approximate distribution of the data in X so that it can accurately
        calculate statistical properties of the data. This field enables the curator to override this heuristic
        and specify the data distribution explicitly.
      type: string
      enum: [COUNT, NORMAL]
    is_primary_data:
      description: >-
        Describes whether cellular observations for this dataset are all canonical (PRIMARY),
        all non-canonical (SECONDARY), or contain a mixture (BOTH).
      type: string
      enum: [PRIMARY, SECONDARY, BOTH]
      nullable: true
    links:
      type: array
      items:
        type: object
        additionalProperties: false
        required:
          - link_url
          - link_type
        properties:
          link_name:
            type: string
            nullable: true
          link_url:
            type: string
            nullable: true
          link_type:
            type: string
            enum: [PROTOCOL, RAW_DATA, DOI, LAB_WEBSITE, OTHER, DATA_SOURCE]
            nullable: true
    dataset:
      allOf:
        - $ref: "#/components/schemas/dataset_preview"
        - type: object
          properties:
            name:
              type: string
              nullable: true
            revision:
              type: integer
              nullable: true
            revised_at:
              type: string
              nullable: true
            is_primary_data:
              $ref: "#/components/schemas/is_primary_data"
            X_normalization:
              type: string
              nullable: true
            dataset_assets:
              type: array
              items:
                $ref: "#/components/schemas/dataset_asset"
            sex:
              $ref: "#/components/schemas/ontology_elements"
            ethnicity:
              $ref: "#/components/schemas/ontology_elements"
            development_stage:
              $ref: "#/components/schemas/ontology_elements"
              nullable: true
            explorer_url:
              $ref: "#/components/schemas/explorer_url"
            cell_type:
              $ref: "#/components/schemas/ontology_elements"
            cell_count:
              type: integer
              nullable: true
            X_approximate_distribution:
              $ref: "#/components/schemas/distribution"
            #            batch_condition:  # TODO: https://app.zenhub.com/workspaces/single-cell-5e2a191dad828d52cc78b028/issues/chanzuckerberg/single-cell-data-portal/1461  # noqa: E501
            #              type: array
            #              items:
            #                type: string
            mean_genes_per_cell:
              type: number
              nullable: true
            schema_version:
              type: string
              nullable: true
            processing_status:
              $ref: "#/components/schemas/processing_status"
    dataset_preview:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/dataset_id"
        curator_tag:
          $ref: "#/components/schemas/curator_tag"
          nullable: true
        tissue:
          $ref: "#/components/schemas/ontology_elements"
        assay:
          $ref: "#/components/schemas/ontology_elements"
        disease:
          $ref: "#/components/schemas/ontology_elements"
        organism:
          $ref: "#/components/schemas/ontology_elements"
        tombstone:
          type: boolean
    dataset_asset:
      type: object
      properties:
        filetype:
          type: string
          enum: [H5AD, RDS]
        filename:
          type: string
    explorer_url:
      type: string
      description: The url at which a given Dataset may be explored using the cellxgene visualization tool
      nullable: true
    ontology_element:
      type: object
      properties:
        ontology_term_id:
          type: string
        label:
          type: string
    ontology_elements:
      type: array
      default: []
      items:
        $ref: "#/components/schemas/ontology_element"
    problem:
      type: object
      description: Error message container for HTTP APIs.
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
    processing_status:
      type: string
      description: Processing status for a Dataset or Collection
      enum: [FAILURE, PENDING, SUCCESS]
      nullable: true
    publisher_metadata:
      type: object
      nullable: true
      properties:
        authors:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              given:
                type: string
              family:
                type: string
        is_preprint:
          type: boolean
        journal:
          type: string
        published_day:
          type: number
        published_month:
          type: number
        published_year:
          type: number
    collection_form_metadata:
      type: object
      properties:
        name:
          type: string
          description: name of the collection
        description:
          type: string
          description: description of the collection
        contact_name:
          type: string
          description: name of the primary person of contact for the collection
        contact_email:
          type: string
          description: email of contact person for the collection
        links:
          $ref: "#/components/schemas/links"
    upload_link:
      description: A user-provided link to the dataset source file.
      type: string

  parameters:
    query_curator_tag:
      name: curator_tag
      description: >-
        A curator-provided tag. MUST be unique within a given Collection. MAY be used to uniquely identify a Dataset
        when using the Curator API. SHALL default to null for Datasets created using the Data Portal UI.
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/curator_tag"
    query_dataset_id:
      name: dataset_id
      description: The uuid of the Dataset.
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/dataset_id"
    path_collection_id:
      name: collection_id
      description: The uuid of a Collection.
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/collection_id"
    query_visibility:
      name: visibility
      description: The 'visibility' of a Collection (and its constituent Datasets).
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/visibility"
  responses:
    200:
      description: OK
    201:
      description: Created
    202:
      description: Accepted
    204:
      description: No content
    400:
      description: Invalid or missing parameter
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
    400_multiple:
      description: Invalid or missing parameters
      content:
        application/problem+json:
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  description: the errant parameter
                value:
                  type: string
                  description: the errant value
                reason:
                  type: string
                  description: the specific problem with the parameter
    401:
      description: Failed to authenticate
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
    403:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
    404:
      description: Resource not found
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
    405:
      description: Method not allowed
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
    409:
      description: File conflict
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
    413:
      description: Exceed File Size Limit
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
  securitySchemes:
    curatorAccess:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: backend.corpora.lambdas.api.v1.authentication.curation_apikey_info_func
    curatorAccessLenient:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: backend.corpora.lambdas.api.v1.authentication.curation_apikey_info_func_lenient
