openapi: 3.0.0
info:
  version: "1.0.0"
  title: Chan Zuckerberg Initiative cellxgene Data Portal Curator API
  termsOfService: https://cellxgene.cziscience.com/tos
  contact:
    name: API Support
    email: cellxgene@chanzuckerberg.com
servers:
  - description: Production environment
    url: https://api.cellxgene.cziscience.com/
  - description: Development environment
    url: https://api.cellxgene.dev.single-cell.czi.technology
  - description: Staging environment
    url: https://api.cellxgene.staging.single-cell.czi.technology
paths:
  /v1/auth/token:
    post:
      summary: Generate an access token
      tags:
        - authentication
      description: >-
        Returns a bearer access token that must be passed in an Authentication header to requests that
        require authorization such as creating a new Collection.
      operationId: backend.corpora.lambdas.api.v1.curation.auth.token.post
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
            example: "<YOUR-CURATOR-API-KEY>"
          required: true
          description: Your curation API key.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        "401":
          $ref: "#/components/responses/401"

  /v1/collections:
    get:
      summary: Fetch Collections metadata.
      description: >-
        * When the visibility parameter is unspecified or set to `PUBLIC`, a list of all public collections is returned.
        The Authorization header is not required. If a Collection in the list has been deleted, then it is annotated
        with tombstone set to True.

        * When the visibility parameter is set to `PRIVATE`, a list of all private Collections that the user is
        authorized to access is returned. The Authorization header is required. If a Collection in the list is a private
        revision of a public collection, then it is annotated with revision_of.

        * Each Collection in the list contains a subset of Collection metadata as a preview.

        * To retrieve full Collection metadata for a specific Collection, `GET /v1/collections/{collection_id}`
        must be used.

        * Optional: provide your access token in the request header as `Authentication: bearer <access_token>`.
      operationId: backend.corpora.lambdas.api.v1.curation.collections.actions.get
      security:
        - curatorAccessLenient: []
        - {}
      tags:
        - collection
      parameters:
        - $ref: "#/components/parameters/query_visibility"
        - name: curator
          description: >-
            Return collections owned by the specified curator. The use of this parameter is limited to curators 
            with permission to query all collections.
          in: query
          required: false
          schema:
            type: string
          example: "John Smith"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/collection_list"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
    post:
      summary: Create a Collection
      description: >
        Create a new Collection

        * Required: provide your access token in the request header as `Authentication: bearer <access_token>`.
      operationId: backend.corpora.lambdas.api.v1.collection.create_collection
      tags:
        - collection
      security:
        - curatorAccess: []
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              $ref: "#/components/schemas/collection_form_metadata"
              required:
                - name
                - description
                - contact_name
                - contact_email
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  collection_id:
                    $ref: "#/components/schemas/collection_id"
        "400":
          $ref: "#/components/responses/400_multiple"
        "401":
          $ref: "#/components/responses/401"

  /v1/collections/{collection_id}:
    get:
      summary: Fetch a Collection with Datasets
      description: >
        Fetch full Collection metadata and associated Datasets.

        * Optional: provide your access token in the request header as `Authentication: bearer <access_token>`.
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.actions.get
      security:
        - curatorAccessLenient: []
        - {}
      tags:
        - collection
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/collection_get"
        "403":
          $ref: "#/components/responses/403"
    patch:
      summary: Update a Collection's metadata.
      description: >-
        Update a private Collection or a Revision. If any Collection metadata fields are included in the body of the
        request, these fields SHALL be updated for the specified Collection. If links are included, they will fully
        replace all existing links. A DOI link that cannot be found at Crossref results in a 400 (BAD REQUEST).

        * Optional: provide your access token in the request header as `Authentication: bearer <access_token>`.
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.actions.patch
      security:
        - curatorAccess: []
      tags:
        - collection
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              $ref: "#/components/schemas/collection_form_metadata"
            examples:
              update_name:
                summary: Update the name
                value:
                  name: "New Collection name"
              update_description:
                summary: Update the description
                value:
                  description: "New Collection description"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/collection_form_metadata"
                  - type: object
                    properties:
                      publisher_metadata:
                        $ref: "#/components/schemas/publisher_metadata"
                required:
                  - links
                  - name
                  - description
                  - contact_name
                  - contact_email
                  - publisher_metadata
        "400":
          $ref: "#/components/responses/400_multiple"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "405":
          $ref: "#/components/responses/405"
    delete:
      summary: Delete a private Collection.
      description: >-
        Delete a private Collection or cancel a revision.

        * Required: provide your access token in the request header as `Authentication: bearer <access_token>`.
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.actions.delete
      security:
        - curatorAccess: []
      tags:
        - collection
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
      responses:
        "204":
          $ref: "#/components/responses/204"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "405":
          $ref: "#/components/responses/405"

  /v1/collections/{collection_id}/revision:
    post:
      summary: Start a revision of a published Collection
      description: >-
        This starts a Revision of a published Collection. A Revision is a private Collection that is a copy of a
        published Collection. When published, a Revision replaces the original published Collection in-place. Only one
        ongoing Revision may exist per published Collection at any given time.

        All methods of updating or adding Datasets and metadata to a Revision work the same as for a private Collection.

        * Required: provide your access token in the request header as `Authentication: bearer <access_token>`.
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.revision.post_collection_revision
      security:
        - curatorAccess: []
      tags:
        - collection
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  revision_id:
                    $ref: "#/components/schemas/collection_id"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"

  /v1/collections/{collection_id}/datasets:
    delete:
      summary: Delete a Dataset or cancel processing for a Dataset in a private Collection or revision.
      description: >-
        Delete a Dataset or cancel processing for a Dataset. The **collection_id** MUST reference either a private Collection OR a 
        Revision. MUST indicate the Dataset by providing *one* of either the **curator_tag** (non-null) OR the **dataset_id**
        parameters.

        If the Dataset is being processed, then this endpoint will cancel processing and delete the Dataset. While 
        the cancellation process is occurring, the Dataset may still appear as part of the Collection for a few minutes, but will eventually be removed.

        * Required: provide your access token in the request header as `Authentication: bearer <access_token>`.
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.datasets.actions.delete
      tags:
        - collection
      security:
        - curatorAccess: []
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
        - $ref: "#/components/parameters/query_curator_tag"
        - $ref: "#/components/parameters/query_dataset_id"
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
    get:
      summary: Fetch a Dataset from a Collection
      description: >-
        Fetch a Dataset from a collection. If a `dataset_id` or a `curator_tag` is provided as a query parameter
        the associated Dataset metadata is returned.
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.datasets.actions.get
      tags:
        - collection
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
        - $ref: "#/components/parameters/query_curator_tag"
        - $ref: "#/components/parameters/query_dataset_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dataset"
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
    patch:
      summary: Update a Dataset's curator tag.
      tags:
        - collection
      description: >-
        Update a Dataset's curator-provided tag. The Dataset MUST NOT belong to a published Collection. MUST indicate
        the Dataset by providing *one* of either the **curator_tag** (non-null) OR the **dataset_id** parameters.

        * Required: provide your access token in the request header as `Authentication: bearer <access_token>`.
      security:
        - curatorAccess: []
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.datasets.actions.patch
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
        - $ref: "#/components/parameters/query_curator_tag"
        - $ref: "#/components/parameters/query_dataset_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                curator_tag:
                  $ref: "#/components/schemas/curator_tag"
            example:
              curator_tag: "new/curator_tag"
      responses:
        "204":
          $ref: "#/components/responses/204"
        "400":
          $ref: "#/components/responses/400_multiple"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "409":
          $ref: "#/components/responses/409"

  /v1/collections/{collection_id}/datasets/upload-link:
    put:
      summary: Upload a Dataset by providing a link
      description: >-
        Upload a Dataset. The Dataset will be uploaded from the provided `link` which MUST either be a presigned AWS S3 
        URL or Dropbox shared file URL. MUST include a `curator_tag` in the request body; if an existing Dataset has this 
        tag, the existing Dataset SHALL be replaced, otherwise a new Dataset will be added. MAY include the `datase_id` 
        of an existing Dataset, in which case the existing Dataset SHALL be replaced and the `curator_tag` field
        will be ignored.

        * Required: provide your access token in the request header as `Authentication: bearer <access_token>`.
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.datasets.upload_link.put
      tags:
        - collection
      security:
        - curatorAccess: []
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                curator_tag:
                  $ref: "#/components/schemas/curator_tag"
                id:
                  $ref: "#/components/schemas/dataset_id"
                link:
                  $ref: "#/components/schemas/upload_link"
            examples:
              tag:
                summary: Using the tag
                value:
                  curator_tag: "<new_or_existing_tag>"
                  link: "<download_link_for_data_source_file>"
              id:
                summary: Using the Dataset uuid
                value:
                  id: "<existing_dataset_id>"
                  link: "<download_link_for_data_source_file>"
      responses:
        "202":
          $ref: "#/components/responses/202"
        "400":
          $ref: "#/components/responses/400_multiple"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "405":
          $ref: "#/components/responses/405"
        "404":
          $ref: "#/components/responses/404"
        "413":
          $ref: "#/components/responses/413"

  /v1/collections/{collection_id}/datasets/s3-upload-credentials:
    get:
      summary: Get credentials for uploading local files
      tags:
        - collection
      description: >-
        Retrieve temporary AWS credentials for uploading Dataset source files to S3 to create
        or update Datasets for the specified Collection.

        * Uploads to <root_bucket> MUST take the form of `s3://<root_bucket>/<collection_id>/<curator_tag>`.

        * `<collection_id>` MUST NOT be a published Collection. Only uploads to private Collections
        (unpublished OR ongoing Revision) will be processed.

        * If there is no Dataset with tag `<curator_tag>` in `<collection_id>`, a new Dataset SHALL be added.

        * If there is an existing Dataset with tag `<curator_tag>` in `<collection_id>`, the existing Dataset
        SHALL be replaced.


        The response contains the credentials required for uploading to our AWS S3 bucket:

        * access_key

        * secret_access_key

        * session_token


        To upload the files to S3, use the Python boto3 package. Once a file is successfully uploaded, it wil be
        processed and added to the Collection (specified in the S3 key path) with no further user action required.
        Use `GET /curation/collections/{collection_id}/datasets/` with `curator_tag` or `id` query parameter  to check 
        on the processing status for a given Dataset.

        A Dataset uploaded directly to S3 will appear in the Collection only once the Dataset has started
        processing.

        * Required: provide your access token in the request header as `Authentication: bearer <access_token>`.
      security:
        - curatorAccess: []
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.datasets.upload_s3.get
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  Bucket:
                    type: string
                  credentials:
                    type: object
                    properties:
                      AccessKeyId:
                        type: string
                      SecretAccessKey:
                        type: string
                      SessionToken:
                        type: string
                  UploadKeyPrefix:
                    type: string
        "401":
          $ref: "#/components/responses/401"

  /v1/collections/{collection_id}/datasets/assets:
    get:
      summary: Retrieve links for downloading a Dataset
      tags:
        - collection
      description: >-
        Generate Presigned S3 URLs to download the files associated with the Dataset. MUST include *one* of the **curator_tag**
        and **dataset_id** parameters. Pre-signed S3 URLs have a life span of up to 1 hour. Therefore,
        generate a presigned URL immediately before each download to ensure it is current.
      operationId: backend.corpora.lambdas.api.v1.curation.collections.collection_id.assets.get
      parameters:
        - $ref: "#/components/parameters/path_collection_id"
        - $ref: "#/components/parameters/query_curator_tag"
        - $ref: "#/components/parameters/query_dataset_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/asset_response"
        "202":
          description: Unable to retrieve one or more asset response fields.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/asset_response"
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"

components:
  schemas:
    asset_response:
      properties:
        assets:
          items:
            properties:
              file_name:
                type: string
              file_size:
                type: number
              file_type:
                enum:
                  - H5AD
                  - RDS
                type: string
              presigned_url:
                type: string
            type: object
          type: array
        curator_tag:
          "$ref": "#/components/schemas/curator_tag"
          nullable: true
        dataset_id:
          "$ref": "#/components/schemas/dataset_id"
      type: object
    batch_condition:
      description: These keys define the batches that a normalization or integration algorithm should be aware of
      type: array
      items:
        type: string
      nullable: true
      example: ["patient", "seqBatch"]
    collection_list:
      description: Full Collection metadata
      properties:
        collection_url:
          type: string
        contact_email:
          nullable: true
          type: string
        contact_name:
          nullable: true
          type: string
        created_at:
          type: string
        curator_name:
          nullable: true
          type: string
        datasets:
          type: array
          items:
            $ref: "#/components/schemas/dataset_preview"
        description:
          type: string
        id:
          "$ref": "#/components/schemas/collection_id"
        links:
          "$ref": "#/components/schemas/links"
        name:
          nullable: true
          type: string
        processing_status:
          "$ref": "#/components/schemas/processing_status_collection"
        published_at:
          nullable: true
          type: string
        publisher_metadata:
          "$ref": "#/components/schemas/publisher_metadata"
        revised_at:
          nullable: true
          type: string
        revising_in:
          type: string
          description: the id of the associated revision Collection, if one exists and the user is authorized
          nullable: true
        revision_of:
          description: the id of the published version of this Collection
          nullable: true
          type: string
        tombstone:
          type: boolean
        visibility:
          "$ref": "#/components/schemas/visibility"
      type: object
    collection_get:
      description: Full Collection metadata
      properties:
        collection_url:
          type: string
        contact_email:
          nullable: true
          type: string
          description: Example email john.smith@email.com
        contact_name:
          nullable: true
          type: string
        created_at:
          type: string
        curator_name:
          nullable: true
          type: string
        datasets:
          type: array
          items:
            $ref: "#/components/schemas/dataset"
        description:
          type: string
        id:
          "$ref": "#/components/schemas/collection_id"
        links:
          "$ref": "#/components/schemas/links"
        name:
          nullable: true
          type: string
        processing_status:
          "$ref": "#/components/schemas/processing_status_collection"
        published_at:
          nullable: true
          type: string
        publisher_metadata:
          "$ref": "#/components/schemas/publisher_metadata"
        revised_at:
          nullable: true
          type: string
        revising_in:
          type: string
          description: the id of the associated revision Collection, if one exists and the user is authorized
          nullable: true
        revision_of:
          description: the id of the published version of this Collection
          nullable: true
          type: string
        tombstone:
          type: boolean
        visibility:
          "$ref": "#/components/schemas/visibility"
      type: object
    collection_form_metadata:
      properties:
        contact_email:
          description: email of contact person for the collection
          type: string
        contact_name:
          description: name of the primary person of contact for the collection
          type: string
        description:
          description: description of the collection
          type: string
        links:
          "$ref": "#/components/schemas/links"
        name:
          description: name of the collection
          type: string
      type: object
    collection_id:
      description: A unique identifier of a Collection.
      example: fedcba98-7654-3210-fedc-ba9876543210
      type: string
    curator_tag:
      description:
        A curator-provided tag for a Dataset that serves as a unique identifier
        *within a Collection*.
      example: an/example/curator_tag.h5ad
      type: string
    dataset:
      properties:
        assay:
          "$ref": "#/components/schemas/ontology_elements"
        batch_condition:
          "$ref": "#/components/schemas/batch_condition"
        cell_count:
          nullable: true
          type: integer
        cell_type:
          "$ref": "#/components/schemas/ontology_elements"
        curator_tag:
          "$ref": "#/components/schemas/curator_tag"
          nullable: true
        dataset_assets:
          items:
            "$ref": "#/components/schemas/dataset_asset"
          type: array
        development_stage:
          "$ref": "#/components/schemas/ontology_elements"
          nullable: true
        disease:
          "$ref": "#/components/schemas/ontology_elements"
        ethnicity:
          "$ref": "#/components/schemas/ontology_elements"
        explorer_url:
          "$ref": "#/components/schemas/explorer_url"
        id:
          "$ref": "#/components/schemas/dataset_id"
        is_primary_data:
          "$ref": "#/components/schemas/is_primary_data"
        mean_genes_per_cell:
          nullable: true
          type: number
        title:
          nullable: true
          type: string
        organism:
          "$ref": "#/components/schemas/ontology_elements"
        processing_status:
          "$ref": "#/components/schemas/processing_status_dataset"
        revised_at:
          nullable: true
          type: string
        revision:
          nullable: true
          type: integer
        schema_version:
          nullable: true
          type: string
        sex:
          "$ref": "#/components/schemas/ontology_elements"
        tissue:
          "$ref": "#/components/schemas/ontology_elements"
        tombstone:
          type: boolean
        x_approximate_distribution:
          "$ref": "#/components/schemas/distribution"
        x_normalization:
          nullable: true
          type: string
      type: object
    dataset_asset:
      properties:
        filename:
          type: string
        filetype:
          enum:
            - H5AD
            - RDS
          type: string
      type: object
    dataset_id:
      description: A unique identifier of a Dataset.
      example: 01234567-89ab-cdef-0123-456789abcdef
      type: string
    dataset_preview:
      properties:
        assay:
          "$ref": "#/components/schemas/ontology_elements"
        curator_tag:
          "$ref": "#/components/schemas/curator_tag"
          nullable: true
        disease:
          "$ref": "#/components/schemas/ontology_elements"
        id:
          "$ref": "#/components/schemas/dataset_id"
        organism:
          "$ref": "#/components/schemas/ontology_elements"
        tissue:
          "$ref": "#/components/schemas/ontology_elements"
        tombstone:
          type: boolean
      type: object
    distribution:
      description:
        Cellxgene runs a heuristic to detect the approximate distribution
        of the data in X so that it can accurately calculate statistical properties
        of the data. This field enables the curator to override this heuristic and
        specify the data distribution explicitly.
      enum:
        - COUNT
        - NORMAL
      type: string
      nullable: true
    explorer_url:
      description:
        The url at which a given Dataset may be explored using the cellxgene
        visualization tool
      nullable: true
      type: string
    is_primary_data:
      description:
        Describes whether cellular observations for this Dataset are all
        canonical (True), all non-canonical (False), or contain a mixture (True, False).
      items:
        type: boolean
      type: array
    links:
      items:
        additionalProperties: false
        description: A URL that links associated resources with the collection.
        properties:
          link_name:
            nullable: true
            type: string
          link_type:
            description: If the link_type is DOI, then the `link_url` must be a valid DOI link and the `link_name` will be ignored or overwritten if provided. For example, https://doi.org/00.0000/science.abc1234 is a valid DOI `link_url`. All other links types can be any valid URL.
            enum:
              - PROTOCOL
              - RAW_DATA
              - DOI
              - LAB_WEBSITE
              - OTHER
              - DATA_SOURCE
            nullable: true
            type: string
          link_url:
            nullable: true
            type: string
        required:
          - link_url
          - link_type
        type: object
      type: array
    ontology_element:
      properties:
        label:
          type: string
        ontology_term_id:
          type: string
      type: object
    ontology_elements:
      default: []
      items:
        "$ref": "#/components/schemas/ontology_element"
      type: array
    problem:
      description: Error message container for HTTP APIs.
      properties:
        detail:
          type: string
        title:
          type: string
        type:
          type: string
      type: object
    processing_status_collection:
      description: >-
        Processing status for a Collection

        * `"FAILURE"`: one or more Datasets ran into an error during processing. The CELLxGENE team will reach out to help you.
        * `"PENDING"`: one or more Datasets are still being processed.
        * `"SUCCESS"`: all Datasets have been processed successfully.
        * `null`: the Collection has no Datasets.
      enum:
        - FAILURE
        - PENDING
        - SUCCESS
      nullable: true
      type: string
    processing_status_dataset:
      description: >-
        Processing status for a Dataset

          * `"FAILURE"`: the Dataset ran into an error during processing. The CELLxGENE team will reach out to help you.
          * `"PENDING"`: the Dataset has is still being processed.
          * `"SUCCESS"`: the Dataset has successfully been processed.
      enum:
        - FAILURE
        - PENDING
        - SUCCESS
      nullable: true
      type: string
    publisher_metadata:
      nullable: true
      properties:
        authors:
          items:
            properties:
              family:
                type: string
              given:
                type: string
              name:
                type: string
            type: object
          type: array
        is_preprint:
          type: boolean
        journal:
          type: string
        published_day:
          type: number
        published_month:
          type: number
        published_year:
          type: number
      type: object
    upload_link:
      description: A user-provided link to the Dataset source file.
      type: string
    visibility:
      default: PUBLIC
      description:
        Determines the visibility of the Collection, that will either make
        the Collection visible on the public sites or only viewable through obfuscated
        URLs.
      enum:
        - PUBLIC
        - PRIVATE
      type: string
  parameters:
    path_collection_id:
      description: The uuid of a Collection.
      in: path
      name: collection_id
      required: true
      schema:
        "$ref": "#/components/schemas/collection_id"
    query_curator_tag:
      description:
        A curator-provided tag. **MUST** be unique within a given Collection.
        **MAY** be used to uniquely identify a Dataset when using the Curator API. **SHALL**
        default to null for Datasets created using the Data Portal UI.
      in: query
      name: curator_tag
      required: false
      schema:
        "$ref": "#/components/schemas/curator_tag"
    query_dataset_id:
      description: The uuid of the Dataset.
      in: query
      name: dataset_id
      required: false
      schema:
        "$ref": "#/components/schemas/dataset_id"
    query_visibility:
      description: The 'visibility' of a Collection (and its constituent Datasets).
      in: query
      name: visibility
      required: false
      schema:
        "$ref": "#/components/schemas/visibility"
  responses:
    "200":
      description: OK
    "201":
      description: Created
    "202":
      description: Accepted
    "204":
      description: No content
    "400":
      content:
        application/problem+json:
          schema:
            "$ref": "#/components/schemas/problem"
      description: Invalid or missing parameter
    400_multiple:
      content:
        application/problem+json:
          schema:
            items:
              properties:
                name:
                  description: the errant parameter
                  type: string
                reason:
                  description: the specific problem with the parameter
                  type: string
                value:
                  description: the errant value
                  type: string
              type: object
            type: array
      description: Invalid or missing parameters
    "401":
      content:
        application/problem+json:
          schema:
            "$ref": "#/components/schemas/problem"
      description: Failed to authenticate
    "403":
      content:
        application/problem+json:
          schema:
            "$ref": "#/components/schemas/problem"
      description: Forbidden
    "404":
      content:
        application/problem+json:
          schema:
            "$ref": "#/components/schemas/problem"
      description: Resource not found
    "405":
      content:
        application/problem+json:
          schema:
            "$ref": "#/components/schemas/problem"
      description: Method not allowed
    "409":
      content:
        application/problem+json:
          schema:
            "$ref": "#/components/schemas/problem"
      description: File conflict
    "413":
      content:
        application/problem+json:
          schema:
            "$ref": "#/components/schemas/problem"
      description: Exceed File Size Limit
  securitySchemes:
    curatorAccess:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: backend.corpora.lambdas.api.v1.authentication.curation_apikey_info_func
    curatorAccessLenient:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: backend.corpora.lambdas.api.v1.authentication.curation_apikey_info_func_lenient
