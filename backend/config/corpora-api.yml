openapi: 3.0.0
info:
  version: "1.0.0"
  title: Chan Zuckerburg Initiative cellxgene Data Portal API
  description: >-
    This API is under development, and subject frequent breaking changes without notice. Users are encouraged to use the
    https://cellxgene.cziscience.com to access the cellxgene Data Portal.
servers:
  - description: Production environment
    url: https://api.corpora.cziscience.com
  - description: Development environment
    url: https://api.dev.corpora.cziscience.com
  - description: Staging environment
    url: https://api.staging.corpora.cziscience.com
paths:
  /dp/v1/collections:
    get:
      tags:
        - collections
      summary: List published collections in Corpora
      security:
        - cxguserCookie: []
        - dummyAuth: []
      description: >-
        This lists all collections and their UUIDs that currently exist in the corpora. If a parameter is specified as
        a filter, then only collections that meet the status criteria will be outputted.
      operationId: corpora.lambdas.api.v1.collection.get_collections_list
      parameters:
        - $ref: "#/components/parameters/query_user_uuid"
        - name: from_date
          in: query
          schema:
            type: integer
          description: The date after which collections should have been created. In seconds since epoch.
        - name: to_date
          in: query
          description: The date before which collections should have been created. In seconds since epoch.
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - collections
                properties:
                  collections:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - created_at
                      properties:
                        id:
                          $ref: "#/components/schemas/collection_uuid"
                        created_at:
                          type: number
                  from_date:
                    type: integer
                  to_date:
                    type: integer
        "400":
          $ref: "#/components/responses/400"
    post:
      tags:
        - collections
      summary: Create a collection
      security:
        - cxguserCookie: []
      description: >-
        Creates a new collection in corpora. Once a collection is created it can be linked to datasets.
      operationId: corpora.lambdas.api.v1.collection.create_collection
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                - contact_name
                - contact_email
              properties:
                name:
                  type: string
                  description: name of the collection
                description:
                  type: string
                  description: description of the collection
                contact_name:
                  type: string
                  description: name of the primary person of contact for the collection
                contact_email:
                  type: string
                  description: email of contact person for the collection
                data_submission_policy_version:
                  type: string
                  description: Which data submission policy was the collection submitted under
                links:
                  $ref: "#/components/schemas/links"
      responses:
        "201":
          description: A new collection has been created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  collection_uuid:
                    $ref: "#/components/schemas/collection_uuid"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"

  /dp/v1/collections/{collection_uuid}:
    get:
      tags:
        - collections
      summary: Get a collection's full details
      security:
        - cxguserCookie: []
        - dummyAuth: []
      description: >-
        This will return all datasets and associated attributes.
      operationId: corpora.lambdas.api.v1.collection.get_collection_details
      parameters:
        - $ref: "#/components/parameters/path_collection_uuid"
        - $ref: "#/components/parameters/query_visibility"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/collection"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
    post:
      tags:
        - collections
      summary: Start a revision of a public collection,
      security:
        - cxguserCookie: []
        - dummyAuth: []
      description: >-
        This will return a private version of the public collection with all datasets and assoicated attributes of the
        public collection.
      operationId: corpora.lambdas.api.v1.collection.post_collection_revision
      parameters:
        - $ref: "#/components/parameters/path_collection_uuid"
      responses:
        "201":
          description: A new collection revision has been created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/collection"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "409":
          $ref: "#/components/responses/409"

    put:
      tags:
        - collections
      summary: Update a private collection's details
      security:
        - cxguserCookie: []
      description: >-
        Update a private collection's summary, links, contact info, and description details.
      operationId: corpora.lambdas.api.v1.collection.update_collection
      parameters:
        - $ref: "#/components/parameters/path_collection_uuid"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: name of the collection
                description:
                  type: string
                  description: description of the collection
                contact_name:
                  type: string
                  description: name of the primary person of contact for the collection
                contact_email:
                  type: string
                  description: email of contact person for the collection
                data_submission_policy_version:
                  type: string
                  description: Which data submission policy was the collection submitted under
                links:
                  $ref: "#/components/schemas/links"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/collection"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"

    delete:
      tags:
        - collections
      summary: Delete a collection
      security:
        - cxguserCookie: [ ]
      description: >-
        Deletes an entire private collection from cellxgene data-portal, including any generated artifacts/assets and
        deployments.
      operationId: corpora.lambdas.api.v1.collection.delete_collection
      parameters:
        - $ref: "#/components/parameters/path_collection_uuid"
        - $ref: "#/components/parameters/query_visibility"
      responses:
        "204":
          $ref: "#/components/responses/204"
        "401":
          $ref: "#/components/responses/401"

  /dp/v1/collections/{collection_uuid}/upload-links:
    post:
      summary: Start an dataset upload
      tags:
        - collections
      description: >-
        An authenticated user can upload a file from a shared link to a dataset in their collection.

        If the upload is in an error state, this endpoint can be used with the dataset_id to restart the collection.
        If a new link is provided, the new link will be used. If the collection is not in an error state, this endpoint
        will return an error.
      security:
        - cxguserCookie: []
      operationId: corpora.lambdas.api.v1.collection_uuid.upload.link
      parameters:
        - $ref: "#/components/parameters/path_collection_uuid"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  description: The shared link generated by dropbox linking to a dataset.
                  type: string
                dataset_uuid:
                  $ref: "#/components/schemas/dataset_uuid"
              required:
                - url
      responses:
        "202":
          description: The upload request was accepted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataset_uuid:
                    type: string
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "409":
          $ref: "#/components/responses/409"
        "413":
          $ref: "#/components/responses/413"

  /dp/v1/collections/{collection_uuid}/genesets:
    post:
      tags:
        - collections
        - genesets
      summary: Add genesets to a collection
      security:
        - cxguserCookie: []
      description: >-
        Add genesets to a private collection
      operationId: corpora.lambdas.api.v1.collection_uuid.gene_set.post
      parameters:
        - $ref: "#/components/parameters/path_collection_uuid"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                genesets:
                  description: A list of genesets including their gene symbols and descriptions
                  $ref: "#/components/schemas/user_defined_gene_sets"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/gene_set"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"


  /dp/v1/collections/{collection_uuid}/publish:
    post:
      tags:
        - collections
      summary: Publish a collection
      security:
        - cxguserCookie: []
      description: >-
        Update status of specified collection to PUBLIC.  This will make it
        visible on the public sites.

        If publishing modification to a previously published collection, this will replace the old collection with the new
        published collection. The old collection will no longer be accessible.
      operationId: corpora.lambdas.api.v1.collection_uuid.publish.post
      parameters:
        - $ref: "#/components/parameters/path_collection_uuid"
      responses:
        "202":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  collection_uuid:
                    $ref: "#/components/schemas/collection_uuid"
                  visibility:
                    $ref: "#/components/schemas/visibility"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"

  /dp/v1/datasets/{dataset_uuid}:
    delete:
      tags:
        - datasets
      summary: Delete a dataset
      description: >-
        Cancels the in process upload of a dataset to the data portal and cleans up (removes) any artifacts created
        in the upload process. If the dataset has already been uploaded and converted, this endpoint deletes it from
        the data portal and removes associated artifacts
      operationId: corpora.lambdas.api.v1.dataset.delete_dataset
      security:
        - cxguserCookie: []
      parameters:
        - $ref: "#/components/parameters/path_dataset_uuid"
      responses:
        "202":
          $ref: "#/components/responses/202"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "405":
          $ref: "#/components/responses/405"

  /dp/v1/datasets/{dataset_uuid}/asset/{asset_uuid}:
    post:
      tags:
        - datasets
      summary: Request to download a dataset
      description: >-
        Request to download a file which on success will generate a pre-signed URL to download the dataset.
      operationId: corpora.lambdas.api.v1.dataset.post_dataset_asset
      parameters:
        - $ref: "#/components/parameters/path_dataset_uuid"
        - name: asset_uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataset_uuid:
                    $ref: "#/components/schemas/dataset_uuid"
                  presigned_url:
                    type: string
                  file_name:
                    type: string
                  file_size:
                    type: number
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"

  /dp/v1/datasets/{dataset_uuid}/gene_sets:
    post:
      tags:
        - datasets
        - genesets
      summary: Update links between a dataset and gene sets
      security:
        - cxguserCookie: [ ]
      description: >-
        Request to update (add or remove) linkages between a dataset and gene sets. The request must be made by the
        collection owner and the dataset and gene sets must all belong to the same private collection
      operationId: corpora.lambdas.api.v1.dataset.post_dataset_gene_sets
      parameters:
        - $ref: "#/components/parameters/path_dataset_uuid"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - add
                - remove
              properties:
                add:
                  type: array
                  items:
                    type: string
                remove:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/gene_set"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"

  /dp/v1/datasets/{dataset_uuid}/status:
    get:
      tags:
        - datasets
      summary: Get the status of a dataset upload.
      operationId: corpora.lambdas.api.v1.dataset.get_status
      security:
        - cxguserCookie: []
      parameters:
        - $ref: "#/components/parameters/path_dataset_uuid"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataset_uuid:
                    $ref: "#/components/schemas/dataset_uuid"
                  processing_status:
                    type: string
                    enum: [PENDING, SUCCESS, FAILURE]
                  upload_status:
                    type: string
                    enum:
                      [
                        WAITING,
                        UPLOADING,
                        UPLOADED,
                        FAILED,
                        CANCEL_PENDING,
                        CANCELED,
                        NA,
                      ]
                  upload_message:
                    type: string
                  upload_progress:
                    type: number
                  validation_status:
                    type: string
                    enum: [VALIDATING, VALID, INVALID, NA]
                  validation_message:
                    type: string
                  conversion_loom_status:
                    type: string
                    enum: [CONVERTING, CONVERTED, FAILED, NA]
                  conversion_anndata_status:
                    type: string
                    enum: [CONVERTING, CONVERTED, FAILED, NA]
                  conversion_cxg_status:
                    type: string
                    enum: [CONVERTING, CONVERTED, FAILED, NA]
                  conversion_rds_status:
                    type: string
                    enum: [CONVERTING, CONVERTED, FAILED, NA]
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"

  /dp/v1/genesets/{geneset_uuid}:
    delete:
      tags:
        - genesets
      summary: Delete a genese
      security:
        - cxguserCookie: [ ]
      description: >-
        Delete a gene by set removing it from a collection and any data sets it was linked to.
      operationId: corpora.lambdas.api.v1.gene_sets.delete
      parameters:
        - $ref: "#/components/parameters/path_geneset_uuid"
      responses:
        "202":
          $ref: "#/components/responses/202"
        "403":
          $ref: "#/components/responses/403"
        "405":
          $ref: "#/components/responses/405"

  /dp/v1/login:
    get:
      tags:
        - authentication
      summary: login to the system
      operationId: corpora.lambdas.api.v1.authentication.login
      responses:
        "200":
          $ref: "#/components/responses/200"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"

  /dp/v1/logout:
    get:
      tags:
        - authentication
      summary: logout of the system
      operationId: corpora.lambdas.api.v1.authentication.logout
      responses:
        "200":
          $ref: "#/components/responses/200"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"

  /dp/v1/userinfo:
    get:
      tags:
        - authentication
      summary: retrieve user information if the user is logged in
      operationId: corpora.lambdas.api.v1.authentication.userinfo
      security:
        - cxguserCookie: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userinfo"
          $ref: "#/components/responses/200"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"

  /dp/v1/oauth2/callback:
    get:
      tags:
        - authentication
      summary: callback function from auth server after login
      operationId: corpora.lambdas.api.v1.authentication.oauth2_callback
      responses:
        "200":
          $ref: "#/components/responses/200"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"

components:
  schemas:
    user_uuid:
      description: A unique identifier of a logged in User of Corpora.
      type: string
    userinfo:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/user_uuid"
        name:
          description: The user's name
          type: string
        email:
          description: The user's email
          type: string
    collection_uuid:
      description: A unique identifier of a Collection.
      type: string
    dataset_uuid:
      description: A unique identifier of a Dataset.
      type: string
    geneset_uuid:
      description: A unique identifier of a gene set.
      type: string
    visibility:
      description: >-
        Determines the visibility of the collection, that will either make the collection visible on the public
        sites or only viewable through obfuscated URLs.
      type: string
      enum: [PUBLIC, PRIVATE]
    links:
      type: array
      items:
        type: object
        required:
          - link_url
          - link_type
        properties:
          link_name:
            type: string
          link_url:
            type: string
          link_type:
            type: string
            enum: [PROTOCOL, RAW_DATA, DOI, LAB_WEBSITE, OTHER, DATA_SOURCE]
    collection:
      type: object
      required:
        - name
        - description
        - id
        - visibility
        - links
        - datasets
        - created_at
        - updated_at
        - data_submission_policy_version
      properties:
        access_type:
          type: string
          enum: [READ, WRITE]
        created_at:
          type: number
        updated_at:
          type: number
        description:
          type: string
        name:
          type: string
        id:
          $ref: "#/components/schemas/collection_uuid"
        visibility:
          $ref: "#/components/schemas/visibility"
        links:
          $ref: "#/components/schemas/links"
        obfuscated_uuid:
          type: string
        contact_name:
          type: string
        contact_email:
          type: string
        data_submission_policy_version:
          type: string
        datasets:
          type: array
          items:
            $ref: "#/components/schemas/dataset"
        genesets:
          type: array
          items:
            $ref: "#/components/schemas/gene_set"
    ontology_element:
      type: object
      properties:
        ontology_term_id:
          type: string
        label:
          type: string
    ontology_element_array:
      type: array
      items:
        $ref: "#/components/schemas/ontology_element"
    dataset:
      type: object
      required:
        - id
        - name
        - revision
        - collection_id
        - collection_visibility
      properties:
        id:
          $ref: "#/components/schemas/dataset_uuid"
        assay:
          $ref: "#/components/schemas/ontology_element_array"
        tissue:
          $ref: "#/components/schemas/ontology_element_array"
        disease:
          $ref: "#/components/schemas/ontology_element_array"
        sex:
          type: array
          items:
            type: string
        ethnicity:
          $ref: "#/components/schemas/ontology_element_array"
        organism:
          $ref: "#/components/schemas/ontology_element"
        development_stage:
          $ref: "#/components/schemas/ontology_element_array"
        name:
          type: string
        revision:
          type: integer
        dataset_deployments:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              environment:
                type: string
              url:
                type: string
        linked_genesets:
          type: array
          items:
            type: string
        dataset_assets:
          type: array
          items:
            $ref: "#/components/schemas/dataset_asset"
        collection_id:
          $ref: "#/components/schemas/collection_uuid"
        collection_visibility:
          $ref: "#/components/schemas/visibility"
        cell_count:
          type: integer
    dataset_asset:
      type: object
      properties:
        id:
          type: string
        dataset_id:
          type: string
        filetype:
          type: string
          enum: [H5AD, RDS, LOOM, CXG]
        filename:
          type: string
        type:
          type: string
          enum: [REMIX, ORIGINAL]
        s3_uri:
          type: string
    gene_set:
      type: object
      properties:
        name:
          type: string
        id":
          type: string
        description:
          type: string
        linked_datasets:
          type: array
          items:
            type: string
    problem:
      type: object
      description: Error message container for HTTP APIs.
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
    user_defined_gene_sets:
      type: object
      description: User created geneset information
      properties:
        gene_set_name:
          type: string
        gene_set_description:
          type: string
        genes:
          type: array
          items:
            type: object
            description: Gene specific information
            properties:
              gene_symbol:
                type: string
              gene_description:
                type: string
              additional_params:
                type: object


  parameters:
    path_collection_uuid:
      name: collection_uuid
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/collection_uuid"
    path_dataset_uuid:
      name: dataset_uuid
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/dataset_uuid"
    path_geneset_uuid:
      name: geneset_uuid
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/geneset_uuid"
    path_filename:
      name: filename
      description: The name of a file to add, remove, or download.
      in: path
      required: true
      schema:
        type: string
    query_user_uuid:
      name: user_uuid
      description: an ID that represents the user.
      in: query
      schema:
        $ref: "#/components/schemas/user_uuid"
    query_visibility:
      name: visibility
      in: query
      schema:
        $ref: "#/components/schemas/visibility"
        default: PUBLIC

  responses:
    200:
      description: OK.
    201:
      description: Created.
    202:
      description: Accepted
    204:
      description: No Content
    400:
      description: Invalid parameter.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
    401:
      description: Failed to authenticate.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
    403:
      description: Unauthorized.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
    404:
      description: Resource not found.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
    405:
      description: Method not allowed.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
    409:
      description: File conflict.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
    "413":
      description: Exceed File Size Limit
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
  securitySchemes:
    cxguserCookie:
      type: apiKey
      in: cookie
      name: cxguser
      x-apikeyInfoFunc: corpora.lambdas.api.v1.authentication.apikey_info_func
    dummyAuth:
      type: apiKey
      in: header
      name: cxgpublic
      x-apikeyInfoFunc: corpora.lambdas.api.v1.authentication.apikey_dummy_info_func
