ARG BASE_TAG=branch-main

FROM ghcr.io/chanzuckerberg/corpora-upload-base:$BASE_TAG
# Install cellxgene so we get the remote server that has the converter in it
# The cellxgene install script expects executables named python and pip, not python3 and pip3
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1 \
  && update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1

# For lighter weight Docker images
ENV PIP_NO_CACHE_DIR=1

# HACK: Create a no-op npm; npm build not needed for backend-only operations
# The no-op npm touches some files that are the cellxgene install script expects to exist
RUN git clone https://github.com/chanzuckerberg/cellxgene.git \
 && echo '#!/bin/sh\nmkdir -p build/static && touch build/static/.gitignore build/index.html build/csp-hashes.json' > /usr/bin/npm && chmod 755 /usr/bin/npm \
 && cd cellxgene \
 && make pydist-czi-hosted \
 && make install-dist \
 && make dev-env-czi-hosted \
 && cd .. \
 && rm -rf cellxgene client build/client /usr/bin/npm

# Install python dependencies
RUN pip3 install loompy==3.0.6 scanpy==1.6.0 python-igraph==0.8.3 louvain==0.7.0 tiledb==0.7.4 cellxgene-schema awscli

ADD requirements.txt requirements.txt
ADD backend/corpora/api_server/requirements.txt backend/corpora/api_server/requirements.txt
RUN pip3 install -r requirements.txt

ADD tests /corpora-data-portal/tests
ADD backend/__init__.py backend/__init__.py
ADD backend/corpora/__init__.py backend/corpora/__init__.py
ADD backend/corpora/dataset_processing backend/corpora/dataset_processing
ADD backend/corpora/common backend/corpora/common

ARG HAPPY_BRANCH="unknown"
ARG HAPPY_COMMIT=""
LABEL branch=${HAPPY_BRANCH}
LABEL commit=${HAPPY_COMMIT}
ENV COMMIT_SHA=${HAPPY_COMMIT}
ENV COMMIT_BRANCH=${HAPPY_BRANCH}

CMD ["python3", "-m", "backend.corpora.dataset_processing.process"]
