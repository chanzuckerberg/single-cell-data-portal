INFO     wmg-v2-api:v2.py:102 PRATHAP!!! Profiling expression_summary:
         2326 function calls (2305 primitive calls) in 0.009 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.009    0.009 tracer.py:952(func_wrapper)
        1    0.000    0.000    0.009    0.009 query.py:87(expression_summary)
        1    0.001    0.001    0.009    0.009 query.py:121(_query)
        1    0.000    0.000    0.007    0.007 _decorators.py:323(wrapper)
        1    0.000    0.000    0.007    0.007 concat.py:146(concat)
        1    0.000    0.000    0.007    0.007 concat.py:389(__init__)
        2    0.000    0.000    0.006    0.003 multirange_indexing.py:288(__iter__)
        1    0.003    0.003    0.006    0.006 multirange_indexing.py:393(_run_query)
        1    0.000    0.000    0.003    0.003 {method 'to_pandas' of 'pyarrow.lib._PandasConvertible' objects}
        1    0.000    0.000    0.003    0.003 pandas_compat.py:797(table_to_blockmanager)
        1    0.000    0.000    0.002    0.002 pandas_compat.py:903(_deserialize_column_index)
        1    0.000    0.000    0.002    0.002 multi.py:198(new_meth)
        1    0.000    0.000    0.002    0.002 multi.py:501(from_tuples)
        1    0.000    0.000    0.002    0.002 multi.py:435(from_arrays)
        1    0.000    0.000    0.002    0.002 categorical.py:2986(factorize_from_iterables)
        2    0.000    0.000    0.002    0.001 categorical.py:3007(<genexpr>)
        1    0.000    0.000    0.002    0.002 categorical.py:2945(factorize_from_iterable)
        5    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap>:1053(_handle_fromlist)
        1    0.000    0.000    0.001    0.001 categorical.py:368(__init__)
        1    0.000    0.000    0.001    0.001 multirange_indexing.py:250(__getitem__)
        1    0.000    0.000    0.000    0.000 pandas_compat.py:1163(_table_to_blocks)
        1    0.000    0.000    0.000    0.000 pandas_compat.py:1174(_flatten_single_level_multiindex)
        4    0.000    0.000    0.000    0.000 dtypes.py:185(__init__)
        4    0.000    0.000    0.000    0.000 dtypes.py:334(_finalize)
        2    0.000    0.000    0.000    0.000 dtypes.py:507(validate_categories)
      3/2    0.000    0.000    0.000    0.000 base.py:430(__new__)
        1    0.000    0.000    0.000    0.000 algorithms.py:593(factorize)
  330/326    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
        1    0.000    0.000    0.000    0.000 concat.py:565(get_result)
        1    0.000    0.000    0.000    0.000 multirange_indexing.py:313(_set_ranges)
        1    0.000    0.000    0.000    0.000 multirange_indexing.py:304(_set_pyquery)
        1    0.000    0.000    0.000    0.000 multirange_indexing.py:545(_get_pyquery)
        1    0.000    0.000    0.000    0.000 multirange_indexing.py:366(__init__)
        1    0.000    0.000    0.000    0.000 base.py:708(_with_infer)
        1    0.000    0.000    0.000    0.000 {pyarrow.lib.table_to_blocks}
       20    0.000    0.000    0.000    0.000 array_schema.py:318(attr)
        1    0.000    0.000    0.000    0.000 multirange_indexing.py:186(getitem_ranges)
        1    0.000    0.000    0.000    0.000 algorithms.py:530(factorize_array)
        1    0.000    0.000    0.000    0.000 query.py:154(<listcomp>)
        1    0.000    0.000    0.000    0.000 pandas_compat.py:1170(<listcomp>)
        1    0.000    0.000    0.000    0.000 concat.py:176(concatenate_managers)
        3    0.000    0.000    0.000    0.000 pandas_compat.py:726(_reconstruct_block)
        3    0.000    0.000    0.000    0.000 api.py:36(make_block)
       14    0.000    0.000    0.000    0.000 array_schema.py:155(<genexpr>)
        2    0.000    0.000    0.000    0.000 base.py:2381(is_unique)
        1    0.000    0.000    0.000    0.000 algorithms.py:269(_get_hashtable_algo)
        1    0.000    0.000    0.000    0.000 dataframe_.py:15(check_dataframe_deps)
       34    0.000    0.000    0.000    0.000 ctx.py:425(from_pybind11)
        1    0.000    0.000    0.000    0.000 {method 'nonempty_domain' of 'tiledb.libtiledb.Array' objects}
        1    0.000    0.000    0.000    0.000 {method 'cast' of 'pyarrow.lib.Table' objects}
        4    0.000    0.000    0.000    0.000 version.py:186(__init__)
       83    0.000    0.000    0.000    0.000 generic.py:45(_instancecheck)
        1    0.000    0.000    0.000    0.000 algorithms.py:287(_check_object_for_strings)
        1    0.000    0.000    0.000    0.000 concat.py:631(_get_new_axes)
        2    0.000    0.000    0.000    0.000 {pandas._libs.lib.infer_dtype}
        1    0.000    0.000    0.000    0.000 concat.py:633(<listcomp>)
        1    0.000    0.000    0.000    0.000 multi.py:1108(_engine)
        1    0.000    0.000    0.000    0.000 query.py:66(get_indexed_dims_to_lookup_query_criteria)
        1    0.000    0.000    0.000    0.000 span.py:546(__exit__)
        1    0.000    0.000    0.000    0.000 concat.py:199(<listcomp>)
        1    0.000    0.000    0.000    0.000 concat.py:278(_get_mgr_concatenation_plan)
        1    0.000    0.000    0.000    0.000 span.py:260(finish)
        2    0.000    0.000    0.000    0.000 construction.py:493(sanitize_array)
       22    0.000    0.000    0.000    0.000 numerictypes.py:356(issubdtype)
       35    0.000    0.000    0.000    0.000 ctx.py:404(__init__)
       14    0.000    0.000    0.000    0.000 attribute.py:102(dtype)
        1    0.000    0.000    0.000    0.000 tracer.py:783(trace)
        1    0.000    0.000    0.000    0.000 query.py:69(get_attrs_for_cube_query)
        1    0.000    0.000    0.000    0.000 span.py:272(_finish_ns)
        3    0.000    0.000    0.000    0.000 {built-in method builtins.any}
        1    0.000    0.000    0.000    0.000 tracer.py:750(_on_span_finish)
        1    0.000    0.000    0.000    0.000 query.py:70(<listcomp>)
        1    0.000    0.000    0.000    0.000 algorithms.py:1795(safe_sort)
        1    0.000    0.000    0.000    0.000 tracer.py:572(_start_span)
        5    0.000    0.000    0.000    0.000 multirange_indexing.py:381(<genexpr>)
       10    0.000    0.000    0.000    0.000 base.py:286(is_dtype)
        1    0.000    0.000    0.000    0.000 concat.py:638(_get_comb_axis)
        3    0.000    0.000    0.000    0.000 common.py:235(asarray_tuplesafe)
        2    0.000    0.000    0.000    0.000 managers.py:997(__init__)
        6    0.000    0.000    0.000    0.000 compute.py:334(cast)
        1    0.000    0.000    0.000    0.000 api.py:78(get_objs_combined_axis)
       83    0.000    0.000    0.000    0.000 generic.py:40(_check)
        5    0.000    0.000    0.000    0.000 array_schema.py:257(domain)
        2    0.000    0.000    0.000    0.000 managers.py:1040(_verify_integrity)
        2    0.000    0.000    0.000    0.000 {pandas._libs.lib.maybe_convert_objects}
        1    0.000    0.000    0.000    0.000 api.py:122(_get_combined_index)
        1    0.000    0.000    0.000    0.000 pandas_compat.py:943(_reconstruct_index)
        1    0.000    0.000    0.000    0.000 base.py:5464(equals)
        1    0.000    0.000    0.000    0.000 base.py:2824(hasnans)
        1    0.000    0.000    0.000    0.000 pandas_compat.py:1187(<listcomp>)
        1    0.000    0.000    0.000    0.000 multi.py:302(__new__)
   113/97    0.000    0.000    0.000    0.000 {built-in method builtins.len}
        1    0.000    0.000    0.000    0.000 base.py:7396(_maybe_cast_data_without_dtype)
       17    0.000    0.000    0.000    0.000 abc.py:117(__instancecheck__)
        1    0.000    0.000    0.000    0.000 base.py:1268(copy)
       44    0.000    0.000    0.000    0.000 numerictypes.py:282(issubclass_)
        4    0.000    0.000    0.000    0.000 {method 'attr' of 'tiledb.libtiledb.Array' objects}
       53    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:404(parent)
        1    0.000    0.000    0.000    0.000 query.py:67(<listcomp>)
        1    0.000    0.000    0.000    0.000 query.py:72(get_dims_for_cube_query)
        1    0.000    0.000    0.000    0.000 range.py:118(__new__)
        8    0.000    0.000    0.000    0.000 domain.py:93(<genexpr>)
        2    0.000    0.000    0.000    0.000 base.py:588(_dtype_to_subclass)
        1    0.000    0.000    0.000    0.000 subarray.py:20(__init__)
        1    0.000    0.000    0.000    0.000 {method 'query' of 'tiledb.libtiledb.SparseArrayImpl' objects}
        2    0.000    0.000    0.000    0.000 provider.py:136(active)
       17    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        2    0.000    0.000    0.000    0.000 construction.py:744(_try_cast)
        1    0.000    0.000    0.000    0.000 dtypes.py:544(update_dtype)
        1    0.000    0.000    0.000    0.000 take.py:57(take_nd)
        4    0.000    0.000    0.000    0.000 contextlib.py:139(__exit__)
        6    0.000    0.000    0.000    0.000 {pyarrow._compute.call_function}
        1    0.000    0.000    0.000    0.000 base.py:2811(_isnan)
        4    0.000    0.000    0.000    0.000 base.py:54(shape)
        1    0.000    0.000    0.000    0.000 missing.py:108(isna)
        3    0.000    0.000    0.000    0.000 multirange_indexing.py:169(dim_ranges_from_selection)
        1    0.000    0.000    0.000    0.000 tracer.py:855(current_span)
        3    0.000    0.000    0.000    0.000 common.py:427(is_period_dtype)
        1    0.000    0.000    0.000    0.000 missing.py:191(_isna)
       11    0.000    0.000    0.000    0.000 common.py:1591(_is_dtype_type)
        1    0.000    0.000    0.000    0.000 multirange_indexing.py:665(_update_df_from_meta)
        1    0.000    0.000    0.000    0.000 concat.py:648(_get_concat_axis)
        1    0.000    0.000    0.000    0.000 take.py:120(_take_nd_ndarray)
        1    0.000    0.000    0.000    0.000 __init__.py:299(loads)
       91    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
        1    0.000    0.000    0.000    0.000 query.py:73(<listcomp>)
        4    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.000    0.000    0.000    0.000 warnings.py:130(filterwarnings)
        3    0.000    0.000    0.000    0.000 common.py:352(is_datetime64tz_dtype)
        1    0.000    0.000    0.000    0.000 {method 'factorize' of 'pandas._libs.hashtable.StringHashTable' objects}
        4    0.000    0.000    0.000    0.000 base.py:7372(maybe_extract_name)
        1    0.000    0.000    0.000    0.000 subarray.py:53(add_ranges)
        2    0.000    0.000    0.000    0.000 frame.py:609(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:183(dumps)
        2    0.000    0.000    0.000    0.000 common.py:501(is_categorical_dtype)
        4    0.000    0.000    0.000    0.000 contextlib.py:279(helper)
      107    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
        1    0.000    0.000    0.000    0.000 base.py:1752(_validate_names)
        2    0.000    0.000    0.000    0.000 numeric.py:289(full)
        3    0.000    0.000    0.000    0.000 dtypes.py:977(is_dtype)
        4    0.000    0.000    0.000    0.000 construction.py:399(extract_array)
        6    0.000    0.000    0.000    0.000 base.py:5304(__getitem__)
        1    0.000    0.000    0.000    0.000 multi.py:794(_set_levels)
        1    0.000    0.000    0.000    0.000 missing.py:460(array_equivalent)
        3    0.000    0.000    0.000    0.000 domain.py:166(dim)
        1    0.000    0.000    0.000    0.000 decoder.py:332(decode)
        1    0.000    0.000    0.000    0.000 {pyarrow.lib.schema}
        1    0.000    0.000    0.000    0.000 encoder.py:182(encode)
        5    0.000    0.000    0.000    0.000 base.py:690(_simple_new)
        2    0.000    0.000    0.000    0.000 provider.py:96(_update_active)
        4    0.000    0.000    0.000    0.000 contextlib.py:130(__enter__)
        8    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        2    0.000    0.000    0.000    0.000 provider.py:130(activate)
       16    0.000    0.000    0.000    0.000 abc.py:121(__subclasscheck__)
        3    0.000    0.000    0.000    0.000 base.py:821(_view)
        4    0.000    0.000    0.000    0.000 common.py:162(is_object_dtype)
        3    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        2    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.ndarray' objects}
        4    0.000    0.000    0.000    0.000 version.py:503(_cmpkey)
        5    0.000    0.000    0.000    0.000 multirange_indexing.py:174(<genexpr>)
        2    0.000    0.000    0.000    0.000 algorithms.py:197(_reconstruct_data)
        3    0.000    0.000    0.000    0.000 warnings.py:181(_add_filter)
       12    0.000    0.000    0.000    0.000 base.py:56(<genexpr>)
        1    0.000    0.000    0.000    0.000 concat.py:708(_concat_indexes)
        3    0.000    0.000    0.000    0.000 typing.py:993(__instancecheck__)
        1    0.000    0.000    0.000    0.000 algorithms.py:117(_ensure_data)
        1    0.000    0.000    0.000    0.000 cast.py:1178(maybe_infer_to_datetimelike)
        8    0.000    0.000    0.000    0.000 {built-in method builtins.next}
        1    0.000    0.000    0.000    0.000 dtypes.py:208(_from_values_or_dtype)
        1    0.000    0.000    0.000    0.000 base.py:881(_engine)
        1    0.000    0.000    0.000    0.000 generic.py:5844(__finalize__)
        4    0.000    0.000    0.000    0.000 contextlib.py:102(__init__)
        3    0.000    0.000    0.000    0.000 blocks.py:2186(check_ndim)
        2    0.000    0.000    0.000    0.000 generic.py:259(__init__)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:177(cumsum)
        2    0.000    0.000    0.000    0.000 _methods.py:54(_any)
        1    0.000    0.000    0.000    0.000 trace.py:210(on_span_finish)
       45    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x55b2c2bde9a0}
        1    0.000    0.000    0.000    0.000 managers.py:172(blknos)
        1    0.000    0.000    0.000    0.000 missing.py:564(_array_equivalent_object)
        1    0.000    0.000    0.000    0.000 span.py:100(__init__)
        1    0.000    0.000    0.000    0.000 base.py:5377(append)
        2    0.000    0.000    0.000    0.000 base.py:830(_rename)
        3    0.000    0.000    0.000    0.000 dimension.py:182(dtype)
        3    0.000    0.000    0.000    0.000 common.py:1246(is_float_dtype)
       10    0.000    0.000    0.000    0.000 array_schema.py:345(has_attr)
        1    0.000    0.000    0.000    0.000 missing.py:268(_isna_array)
        3    0.000    0.000    0.000    0.000 _dtype.py:344(_name_get)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        1    0.000    0.000    0.000    0.000 encoder.py:204(iterencode)
        1    0.000    0.000    0.000    0.000 multi.py:119(_codes_to_ints)
        4    0.000    0.000    0.000    0.000 multirange_indexing.py:108(iter_ranges)
        1    0.000    0.000    0.000    0.000 multi.py:988(_set_codes)
        4    0.000    0.000    0.000    0.000 {method 'search' of 're.Pattern' objects}
        2    0.000    0.000    0.000    0.000 warnings.py:165(simplefilter)
        3    0.000    0.000    0.000    0.000 blocks.py:2091(maybe_coerce_values)
        1    0.000    0.000    0.000    0.000 pandas_compat.py:835(_get_extension_dtypes)
        3    0.000    0.000    0.000    0.000 typing.py:1154(__subclasscheck__)
        1    0.000    0.000    0.000    0.000 {method '_rebuild_blknos_and_blklocs' of 'pandas._libs.internals.BlockManager' objects}
        3    0.000    0.000    0.000    0.000 warnings.py:458(__enter__)
       16    0.000    0.000    0.000    0.000 {built-in method _abc._abc_subclasscheck}
        1    0.000    0.000    0.000    0.000 fromnumeric.py:2497(cumsum)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:177(copyto)
        8    0.000    0.000    0.000    0.000 multirange_indexing.py:62(timing)
        1    0.000    0.000    0.000    0.000 multi.py:783(levels)
        3    0.000    0.000    0.000    0.000 blocks.py:2120(get_block_type)
        3    0.000    0.000    0.000    0.000 blocks.py:2228(extract_pandas_array)
        1    0.000    0.000    0.000    0.000 trace.py:202(on_span_start)
        1    0.000    0.000    0.000    0.000 missing.py:309(_isna_string_dtype)
        8    0.000    0.000    0.000    0.000 managers.py:1042(<genexpr>)
        6    0.000    0.000    0.000    0.000 common.py:1487(is_ea_or_datetimelike_dtype)
       10    0.000    0.000    0.000    0.000 attribute.py:111(name)
        2    0.000    0.000    0.000    0.000 multi.py:815(<genexpr>)
        2    0.000    0.000    0.000    0.000 cast.py:1004(coerce_indexer_dtype)
        1    0.000    0.000    0.000    0.000 _collections_abc.py:821(get)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:51(_wrapfunc)
        2    0.000    0.000    0.000    0.000 common.py:790(is_unsigned_integer_dtype)
       14    0.000    0.000    0.000    0.000 multirange_indexing.py:237(array)
        2    0.000    0.000    0.000    0.000 provider.py:46(activate)
        1    0.000    0.000    0.000    0.000 {pandas._libs.lib.to_object_array_tuples}
        3    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 frozen.py:70(__getitem__)
        1    0.000    0.000    0.000    0.000 re.py:249(compile)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:177(concatenate)
        2    0.000    0.000    0.000    0.000 array_schema.py:153(__iter__)
        1    0.000    0.000    0.000    0.000 multi.py:788(<listcomp>)
        2    0.000    0.000    0.000    0.000 multirange_indexing.py:100(to_scalar)
        1    0.000    0.000    0.000    0.000 __init__.py:77(_get_metas_to_propagate)
        1    0.000    0.000    0.000    0.000 concat.py:476(<listcomp>)
        2    0.000    0.000    0.000    0.000 multi.py:1004(<genexpr>)
        2    0.000    0.000    0.000    0.000 common.py:736(is_signed_integer_dtype)
       10    0.000    0.000    0.000    0.000 base.py:925(__len__)
        2    0.000    0.000    0.000    0.000 domain.py:91(__iter__)
       40    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 base.py:5116(_get_engine_target)
       53    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
        5    0.000    0.000    0.000    0.000 inference.py:325(is_hashable)
        1    0.000    0.000    0.000    0.000 re.py:288(_compile)
       14    0.000    0.000    0.000    0.000 version.py:205(<genexpr>)
        8    0.000    0.000    0.000    0.000 dimension.py:191(name)
        1    0.000    0.000    0.000    0.000 pandas_compat.py:1194(_add_any_metadata)
        1    0.000    0.000    0.000    0.000 {pandas._libs.lib.infer_datetimelike_array}
        1    0.000    0.000    0.000    0.000 os.py:675(__getitem__)
        5    0.000    0.000    0.000    0.000 construction.py:461(ensure_wrapped_if_datetimelike)
        3    0.000    0.000    0.000    0.000 warnings.py:477(__exit__)
        1    0.000    0.000    0.000    0.000 {built-in method pandas._libs.missing.isnaobj}
       13    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_list_like}
        1    0.000    0.000    0.000    0.000 array_schema.py:173(sparse)
        6    0.000    0.000    0.000    0.000 common.py:151(cast_scalar_indexer)
        1    0.000    0.000    0.000    0.000 decoder.py:343(raw_decode)
        1    0.000    0.000    0.000    0.000 common.py:1725(validate_all_hashable)
        1    0.000    0.000    0.000    0.000 {pandas._libs.algos.take_1d_int64_int64}
        7    0.000    0.000    0.000    0.000 base.py:870(_reset_identity)
        1    0.000    0.000    0.000    0.000 {method 'cumsum' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
        4    0.000    0.000    0.000    0.000 {built-in method tiledb.main.use_stats}
        1    0.000    0.000    0.000    0.000 categorical.py:764(codes)
        1    0.000    0.000    0.000    0.000 cast.py:1763(construct_1d_object_array_from_listlike)
        2    0.000    0.000    0.000    0.000 typing.py:306(inner)
        3    0.000    0.000    0.000    0.000 blocks.py:236(make_block_same_class)
        1    0.000    0.000    0.000    0.000 api.py:108(_get_distinct_objs)
        2    0.000    0.000    0.000    0.000 {method 'argsort' of 'numpy.ndarray' objects}
        3    0.000    0.000    0.000    0.000 warnings.py:437(__init__)
        1    0.000    0.000    0.000    0.000 range.py:173(_simple_new)
        4    0.000    0.000    0.000    0.000 dtypes.py:488(validate_ordered)
       10    0.000    0.000    0.000    0.000 {built-in method numpy.asarray}
        2    0.000    0.000    0.000    0.000 {built-in method numpy.array}
        3    0.000    0.000    0.000    0.000 common.py:116(ensure_python_int)
        7    0.000    0.000    0.000    0.000 common.py:148(<lambda>)
        2    0.000    0.000    0.000    0.000 common.py:1433(is_extension_array_dtype)
        1    0.000    0.000    0.000    0.000 common.py:192(all_none)
        6    0.000    0.000    0.000    0.000 range.py:946(__len__)
        2    0.000    0.000    0.000    0.000 base.py:124(_reset_cache)
        3    0.000    0.000    0.000    0.000 _hooks.py:115(emit)
        4    0.000    0.000    0.000    0.000 {built-in method numpy.empty}
        2    0.000    0.000    0.000    0.000 ctx.py:495(default_ctx)
        1    0.000    0.000    0.000    0.000 range.py:887(_concat)
        1    0.000    0.000    0.000    0.000 multi.py:3934(_coerce_indexer_frozen)
        1    0.000    0.000    0.000    0.000 take.py:554(_take_preprocess_indexer_and_fill_value)
        1    0.000    0.000    0.000    0.000 api.py:104(<listcomp>)
       15    0.000    0.000    0.000    0.000 blocks.py:213(mgr_locs)
        4    0.000    0.000    0.000    0.000 domain.py:117(ndim)
        2    0.000    0.000    0.000    0.000 construction.py:676(_sanitize_ndim)
        1    0.000    0.000    0.000    0.000 frame.py:874(shape)
       13    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
        1    0.000    0.000    0.000    0.000 algorithms.py:905(_re_wrap_factorize)
        3    0.000    0.000    0.000    0.000 api.py:84(maybe_infer_ndim)
        2    0.000    0.000    0.000    0.000 generic.py:570(_get_block_manager_axis)
        4    0.000    0.000    0.000    0.000 <string>:1(<lambda>)
        1    0.000    0.000    0.000    0.000 trace.py:290(_queue_span_count_metrics)
        4    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
        3    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        2    0.000    0.000    0.000    0.000 common.py:1751(pandas_dtype)
        2    0.000    0.000    0.000    0.000 base.py:1820(_get_names)
        1    0.000    0.000    0.000    0.000 context.py:98(_with_span)
        1    0.000    0.000    0.000    0.000 pandas_compat.py:904(<listcomp>)
       12    0.000    0.000    0.000    0.000 version.py:452(_parse_letter_version)
        2    0.000    0.000    0.000    0.000 flags.py:49(__init__)
        4    0.000    0.000    0.000    0.000 concat.py:705(_combine_concat_plans)
        2    0.000    0.000    0.000    0.000 generic.py:5881(<genexpr>)
        3    0.000    0.000    0.000    0.000 concat.py:354(__init__)
        2    0.000    0.000    0.000    0.000 {method 'set' of '_contextvars.ContextVar' objects}
        1    0.000    0.000    0.000    0.000 trace.py:124(on_span_finish)
        4    0.000    0.000    0.000    0.000 attribute.py:174(isvar)
        2    0.000    0.000    0.000    0.000 domain.py:179(has_dim)
        1    0.000    0.000    0.000    0.000 base.py:2783(_is_multi)
        7    0.000    0.000    0.000    0.000 common.py:146(classes)
        2    0.000    0.000    0.000    0.000 numeric.py:1873(isscalar)
        4    0.000    0.000    0.000    0.000 attribute.py:164(isnullable)
        4    0.000    0.000    0.000    0.000 subarray.py:69(<genexpr>)
        2    0.000    0.000    0.000    0.000 array_schema.py:267(nattr)
        7    0.000    0.000    0.000    0.000 query.py:201(depluralize)
        1    0.000    0.000    0.000    0.000 multirange_indexing.py:221(__init__)
        2    0.000    0.000    0.000    0.000 common.py:1744(<genexpr>)
        1    0.000    0.000    0.000    0.000 pandas_compat.py:892(_check_data_column_metadata_consistency)
        3    0.000    0.000    0.000    0.000 multirange_indexing.py:246(return_incomplete)
        4    0.000    0.000    0.000    0.000 generic.py:550(_get_axis_number)
        1    0.000    0.000    0.000    0.000 types.py:176(__get__)
        6    0.000    0.000    0.000    0.000 blocks.py:823(shape)
        1    0.000    0.000    0.000    0.000 __init__.py:1455(debug)
        2    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_int8}
        4    0.000    0.000    0.000    0.000 common.py:156(<lambda>)
        1    0.000    0.000    0.000    0.000 algorithms.py:235(_ensure_arraylike)
        9    0.000    0.000    0.000    0.000 {built-in method _warnings._filters_mutated}
       10    0.000    0.000    0.000    0.000 typing.py:1737(cast)
        2    0.000    0.000    0.000    0.000 construction.py:713(_sanitize_str_dtypes)
       16    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 concat.py:682(<listcomp>)
        1    0.000    0.000    0.000    0.000 generic.py:564(_get_axis)
       10    0.000    0.000    0.000    0.000 base.py:5090(_values)
        8    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 pandas_compat.py:1091(_get_multiindex_codes)
        1    0.000    0.000    0.000    0.000 {pandas._libs.lib.array_equivalent_object}
        1    0.000    0.000    0.000    0.000 {method 'take' of 'numpy.ndarray' objects}
        9    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_integer}
        4    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 version.py:76(__lt__)
        1    0.000    0.000    0.000    0.000 multi.py:1112(<listcomp>)
        6    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
        3    0.000    0.000    0.000    0.000 query.py:75(_transform_cube_index_name)
        2    0.000    0.000    0.000    0.000 multi.py:1436(_get_names)
        1    0.000    0.000    0.000    0.000 categorical.py:715(categories)
        1    0.000    0.000    0.000    0.000 cast.py:527(maybe_promote)
        3    0.000    0.000    0.000    0.000 common.py:1420(is_1d_only_ea_dtype)
        1    0.000    0.000    0.000    0.000 os.py:755(encode)
        1    0.000    0.000    0.000    0.000 multirange_indexing.py:598(_iter_attr_names)
        8    0.000    0.000    0.000    0.000 version.py:518(<lambda>)
        2    0.000    0.000    0.000    0.000 base.py:555(<genexpr>)
        1    0.000    0.000    0.000    0.000 base.py:839(is_)
        1    0.000    0.000    0.000    0.000 base.py:5402(<setcomp>)
        2    0.000    0.000    0.000    0.000 common.py:319(is_datetime64_dtype)
        3    0.000    0.000    0.000    0.000 _dtype.py:24(_kind_name)
        1    0.000    0.000    0.000    0.000 typing.py:1037(__hash__)
        1    0.000    0.000    0.000    0.000 concat.py:246(_maybe_reindex_columns_na_proxy)
        1    0.000    0.000    0.000    0.000 endpoint_call_counter.py:30(on_span_finish)
        2    0.000    0.000    0.000    0.000 multi.py:551(<genexpr>)
        1    0.000    0.000    0.000    0.000 base.py:2281(_can_hold_na)
        4    0.000    0.000    0.000    0.000 common.py:151(classes_and_not_datetimelike)
        2    0.000    0.000    0.000    0.000 common.py:393(is_timedelta64_dtype)
        4    0.000    0.000    0.000    0.000 span.py:228(finished)
        1    0.000    0.000    0.000    0.000 concat.py:625(_get_result_dim)
        4    0.000    0.000    0.000    0.000 base.py:1734(name)
        1    0.000    0.000    0.000    0.000 take.py:326(_get_take_nd_function)
        1    0.000    0.000    0.000    0.000 common.py:531(convert_to_list_like)
        3    0.000    0.000    0.000    0.000 _dtype.py:330(_name_includes_bit_suffix)
        1    0.000    0.000    0.000    0.000 inference.py:188(is_array_like)
        1    0.000    0.000    0.000    0.000 flags.py:85(allows_duplicate_labels)
        2    0.000    0.000    0.000    0.000 frame.py:857(axes)
        3    0.000    0.000    0.000    0.000 generic.py:664(ndim)
        6    0.000    0.000    0.000    0.000 {built-in method pyarrow.lib.ensure_type}
        1    0.000    0.000    0.000    0.000 span.py:563(_is_top_level)
        2    0.000    0.000    0.000    0.000 __init__.py:1724(isEnabledFor)
        2    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
        6    0.000    0.000    0.000    0.000 pandas_compat.py:920(<lambda>)
        1    0.000    0.000    0.000    0.000 pandas_compat.py:1202(<listcomp>)
        1    0.000    0.000    0.000    0.000 algorithms.py:855(resolve_na_sentinel)
        5    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_bool}
        4    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        1    0.000    0.000    0.000    0.000 multirange_indexing.py:606(_iter_dim_names)
        2    0.000    0.000    0.000    0.000 range.py:896(<genexpr>)
        2    0.000    0.000    0.000    0.000 base.py:574(_ensure_array)
        2    0.000    0.000    0.000    0.000 {built-in method time.time_ns}
        5    0.000    0.000    0.000    0.000 dtypes.py:577(categories)
        4    0.000    0.000    0.000    0.000 {method 'get' of '_contextvars.ContextVar' objects}
        3    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
        6    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_float}
        1    0.000    0.000    0.000    0.000 context.py:53(__init__)
        4    0.000    0.000    0.000    0.000 version.py:491(_parse_local_version)
        1    0.000    0.000    0.000    0.000 {pandas._libs.internals.get_blkno_placements}
        2    0.000    0.000    0.000    0.000 common.py:196(<genexpr>)
        4    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_object}
        2    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_scalar}
        1    0.000    0.000    0.000    0.000 {method 'index' of 'str' objects}
        2    0.000    0.000    0.000    0.000 ctx.py:434(check_ipykernel_warn_once)
        1    0.000    0.000    0.000    0.000 managers.py:233(is_single_block)
        2    0.000    0.000    0.000    0.000 base.py:986(dtype)
        1    0.000    0.000    0.000    0.000 base.py:7277(ensure_index)
        3    0.000    0.000    0.000    0.000 dtypes.py:584(ordered)
        2    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
        3    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 managers.py:238(items)
        2    0.000    0.000    0.000    0.000 generic.py:353(flags)
        2    0.000    0.000    0.000    0.000 base.py:241(disallow_kwargs)
        2    0.000    0.000    0.000    0.000 common.py:182(<genexpr>)
        1    0.000    0.000    0.000    0.000 common.py:178(not_none)
        2    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.RLock' objects}
        1    0.000    0.000    0.000    0.000 tracer.py:1052(_is_span_internal)
        1    0.000    0.000    0.000    0.000 multi.py:949(nlevels)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.id}
        2    0.000    0.000    0.000    0.000 multi.py:984(codes)
        1    0.000    0.000    0.000    0.000 base.py:413(_engine_type)
        2    0.000    0.000    0.000    0.000 construction.py:733(_maybe_repeat)
        4    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_platform_int}
        3    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_iterator}
        2    0.000    0.000    0.000    0.000 multiarray.py:1071(copyto)
        1    0.000    0.000    0.000    0.000 span.py:523(context)
        3    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        3    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 common.py:537(is_string_or_object_np_dtype)
        1    0.000    0.000    0.000    0.000 enum.py:801(value)
        1    0.000    0.000    0.000    0.000 managers.py:188(blklocs)
        2    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 pandas_compat.py:897(<genexpr>)
        1    0.000    0.000    0.000    0.000 concat.py:701(_maybe_check_integrity)
        2    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        2    0.000    0.000    0.000    0.000 {function FrozenList.__getitem__ at 0x7f47b90fe950}
        1    0.000    0.000    0.000    0.000 pandas_compat.py:949(<dictcomp>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 frame.py:600(_constructor)
        1    0.000    0.000    0.000    0.000 generic.py:332(attrs)
        1    0.000    0.000    0.000    0.000 generic.py:5876(<genexpr>)
        1    0.000    0.000    0.000    0.000 categorical.py:475(dtype)
        2    0.000    0.000    0.000    0.000 base.py:324(ndim)
        1    0.000    0.000    0.000    0.000 trace.py:120(on_span_start)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.000    0.000 numeric.py:181(_validate_dtype)
        1    0.000    0.000    0.000    0.000 flags.py:53(allows_duplicate_labels)
        1    0.000    0.000    0.000    0.000 categorical.py:2056(_codes)
        1    0.000    0.000    0.000    0.000 multiarray.py:148(concatenate)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:2493(_cumsum_dispatcher)
        1    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 pandas_compat.py:930(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method '_ctx_' of 'tiledb.libtiledb.Array' objects}
        1    0.000    0.000    0.000    0.000 span.py:543(__enter__)
        1    0.000    0.000    0.000    0.000 endpoint_call_counter.py:26(on_span_start)
        1    0.000    0.000    0.000    0.000 multirange_indexing.py:320(_set_shape)



DEBUG    numba.core.byteflow:byteflow.py:74 bytecode dump:
>          0	NOP(arg=None, lineno=324)
           2	LOAD_GLOBAL(arg=0, lineno=324)
           4	LOAD_METHOD(arg=1, lineno=324)
           6	LOAD_GLOBAL(arg=2, lineno=324)
           8	LOAD_FAST(arg=3, lineno=324)
          10	CALL_FUNCTION(arg=1, lineno=324)
          12	LOAD_CONST(arg=1, lineno=324)
          14	BINARY_SUBTRACT(arg=None, lineno=324)
          16	CALL_METHOD(arg=1, lineno=324)
          18	GET_ITER(arg=None, lineno=324)
>         20	FOR_ITER(arg=29, lineno=324)
          22	STORE_FAST(arg=4, lineno=324)
          24	LOAD_FAST(arg=2, lineno=325)
          26	LOAD_FAST(arg=3, lineno=325)
          28	LOAD_FAST(arg=4, lineno=325)
          30	BINARY_SUBSCR(arg=None, lineno=325)
          32	LOAD_FAST(arg=3, lineno=325)
          34	LOAD_FAST(arg=4, lineno=325)
          36	LOAD_CONST(arg=1, lineno=325)
          38	BINARY_ADD(arg=None, lineno=325)
          40	BINARY_SUBSCR(arg=None, lineno=325)
          42	BUILD_SLICE(arg=2, lineno=325)
          44	BINARY_SUBSCR(arg=None, lineno=325)
          46	STORE_FAST(arg=5, lineno=325)
          48	LOAD_FAST(arg=5, lineno=326)
          50	GET_ITER(arg=None, lineno=326)
>         52	FOR_ITER(arg=12, lineno=326)
          54	STORE_FAST(arg=6, lineno=326)
          56	LOAD_FAST(arg=1, lineno=327)
          58	LOAD_FAST(arg=4, lineno=327)
          60	DUP_TOP_TWO(arg=None, lineno=327)
          62	BINARY_SUBSCR(arg=None, lineno=327)
          64	LOAD_FAST(arg=0, lineno=327)
          66	LOAD_FAST(arg=6, lineno=327)
          68	BINARY_SUBSCR(arg=None, lineno=327)
          70	INPLACE_ADD(arg=None, lineno=327)
          72	ROT_THREE(arg=None, lineno=327)
          74	STORE_SUBSCR(arg=None, lineno=327)
          76	JUMP_ABSOLUTE(arg=27, lineno=327)
>         78	JUMP_ABSOLUTE(arg=11, lineno=326)
>         80	LOAD_CONST(arg=0, lineno=324)
          82	RETURN_VALUE(arg=None, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=0, inst=NOP(arg=None, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=6, inst=LOAD_GLOBAL(arg=2, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$4load_method.1']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=8, inst=LOAD_FAST(arg=3, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$4load_method.1', '$6load_global.2']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=10, inst=CALL_FUNCTION(arg=1, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$4load_method.1', '$6load_global.2', '$linear_indices8.3']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$4load_method.1', '$10call_function.4']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=14, inst=BINARY_SUBTRACT(arg=None, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$4load_method.1', '$10call_function.4', '$const12.5']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=16, inst=CALL_METHOD(arg=1, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$4load_method.1', '$14binary_subtract.6']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=18, inst=GET_ITER(arg=None, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$16call_method.7']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[Edge(pc=20, stack=('$18get_iter.8',), blockstack=(), npush=0)]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=20 nstack_initial=1)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: ['$phi20.0']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=20, inst=FOR_ITER(arg=29, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi20.0']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[Edge(pc=80, stack=(), blockstack=(), npush=0), Edge(pc=22, stack=('$phi20.0', '$20for_iter.2'), blockstack=(), npush=0)]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=80 nstack_initial=0), State(pc_initial=22 nstack_initial=2)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=80, inst=LOAD_CONST(arg=0, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$const80.0']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=22 nstack_initial=2)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: ['$phi22.0', '$phi22.1']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=22, inst=STORE_FAST(arg=4, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$phi22.1']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=28, inst=LOAD_FAST(arg=4, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2', '$linear_indices26.3']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=30, inst=BINARY_SUBSCR(arg=None, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2', '$linear_indices26.3', '$i28.4']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=32, inst=LOAD_FAST(arg=3, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2', '$30binary_subscr.5']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=34, inst=LOAD_FAST(arg=4, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2', '$30binary_subscr.5', '$linear_indices32.6']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2', '$30binary_subscr.5', '$linear_indices32.6', '$i34.7']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=38, inst=BINARY_ADD(arg=None, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2', '$30binary_subscr.5', '$linear_indices32.6', '$i34.7', '$const36.8']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2', '$30binary_subscr.5', '$linear_indices32.6', '$38binary_add.9']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=42, inst=BUILD_SLICE(arg=2, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2', '$30binary_subscr.5', '$40binary_subscr.10']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2', '$42build_slice.12']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=46, inst=STORE_FAST(arg=5, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$44binary_subscr.13']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=48, inst=LOAD_FAST(arg=5, lineno=326)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=50, inst=GET_ITER(arg=None, lineno=326)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$index48.14']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[Edge(pc=52, stack=('$phi22.0', '$50get_iter.15'), blockstack=(), npush=0)]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=52 nstack_initial=2)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: ['$phi52.0', '$phi52.1']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=52, inst=FOR_ITER(arg=12, lineno=326)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi52.0', '$phi52.1']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[Edge(pc=78, stack=('$phi52.0',), blockstack=(), npush=0), Edge(pc=54, stack=('$phi52.0', '$phi52.1', '$52for_iter.3'), blockstack=(), npush=0)]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=78 nstack_initial=1), State(pc_initial=54 nstack_initial=3)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: ['$phi78.0']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=78, inst=JUMP_ABSOLUTE(arg=11, lineno=326)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi78.0']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[Edge(pc=20, stack=('$phi78.0',), blockstack=(), npush=0)]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=54 nstack_initial=3), State(pc_initial=20 nstack_initial=1)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: ['$phi54.0', '$phi54.1', '$phi54.2']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=54, inst=STORE_FAST(arg=6, lineno=326)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$phi54.2']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=56, inst=LOAD_FAST(arg=1, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=58, inst=LOAD_FAST(arg=4, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$summed56.3']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=60, inst=DUP_TOP_TWO(arg=None, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$summed56.3', '$i58.4']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$summed56.3', '$i58.4', '$60dup_top_two.5', '$60dup_top_two.6']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=64, inst=LOAD_FAST(arg=0, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$summed56.3', '$i58.4', '$62binary_subscr.7']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=66, inst=LOAD_FAST(arg=6, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$summed56.3', '$i58.4', '$62binary_subscr.7', '$array64.8']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$summed56.3', '$i58.4', '$62binary_subscr.7', '$array64.8', '$j66.9']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=70, inst=INPLACE_ADD(arg=None, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$summed56.3', '$i58.4', '$62binary_subscr.7', '$68binary_subscr.10']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=72, inst=ROT_THREE(arg=None, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$summed56.3', '$i58.4', '$70inplace_add.11']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=74, inst=STORE_SUBSCR(arg=None, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$70inplace_add.11', '$summed56.3', '$i58.4']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=76, inst=JUMP_ABSOLUTE(arg=27, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[Edge(pc=52, stack=('$phi54.0', '$phi54.1'), blockstack=(), npush=0)]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=20 nstack_initial=1), State(pc_initial=52 nstack_initial=2)])
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=52 nstack_initial=2)])
DEBUG    numba.core.byteflow:byteflow.py:166 -------------------------Prune PHIs-------------------------
DEBUG    numba.core.byteflow:byteflow.py:235 Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=1): {'$phi20.0'},
             State(pc_initial=22 nstack_initial=2): {'$phi22.1'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=54 nstack_initial=3): {'$phi54.2'},
             State(pc_initial=78 nstack_initial=1): set(),
             State(pc_initial=80 nstack_initial=0): set()})
DEBUG    numba.core.byteflow:byteflow.py:192 defmap: {'$phi20.0': State(pc_initial=0 nstack_initial=0),
 '$phi22.1': State(pc_initial=20 nstack_initial=1),
 '$phi52.1': State(pc_initial=22 nstack_initial=2),
 '$phi54.2': State(pc_initial=52 nstack_initial=2)}
DEBUG    numba.core.byteflow:byteflow.py:193 phismap: defaultdict(<class 'set'>,
            {'$phi20.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi78.0', State(pc_initial=78 nstack_initial=1))},
             '$phi22.0': {('$phi20.0', State(pc_initial=20 nstack_initial=1))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi52.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                          ('$phi54.0', State(pc_initial=54 nstack_initial=3))},
             '$phi52.1': {('$50get_iter.15',
                           State(pc_initial=22 nstack_initial=2)),
                          ('$phi54.1', State(pc_initial=54 nstack_initial=3))},
             '$phi54.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi54.1': {('$phi52.1', State(pc_initial=52 nstack_initial=2))},
             '$phi54.2': {('$52for_iter.3',
                           State(pc_initial=52 nstack_initial=2))},
             '$phi78.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))}})
DEBUG    numba.core.byteflow:byteflow.py:214 changing phismap: defaultdict(<class 'set'>,
            {'$phi20.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi22.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi52.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi52.1': {('$50get_iter.15',
                           State(pc_initial=22 nstack_initial=2)),
                          ('$phi52.1', State(pc_initial=52 nstack_initial=2))},
             '$phi54.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi54.1': {('$50get_iter.15',
                           State(pc_initial=22 nstack_initial=2))},
             '$phi54.2': {('$52for_iter.3',
                           State(pc_initial=52 nstack_initial=2))},
             '$phi78.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG    numba.core.byteflow:byteflow.py:214 changing phismap: defaultdict(<class 'set'>,
            {'$phi20.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi52.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50get_iter.15',
                           State(pc_initial=22 nstack_initial=2))},
             '$phi54.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi54.1': {('$50get_iter.15',
                           State(pc_initial=22 nstack_initial=2))},
             '$phi54.2': {('$52for_iter.3',
                           State(pc_initial=52 nstack_initial=2))},
             '$phi78.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG    numba.core.byteflow:byteflow.py:214 changing phismap: defaultdict(<class 'set'>,
            {'$phi20.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi52.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50get_iter.15',
                           State(pc_initial=22 nstack_initial=2))},
             '$phi54.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi54.1': {('$50get_iter.15',
                           State(pc_initial=22 nstack_initial=2))},
             '$phi54.2': {('$52for_iter.3',
                           State(pc_initial=52 nstack_initial=2))},
             '$phi78.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG    numba.core.byteflow:byteflow.py:223 keep phismap: {'$phi20.0': {('$18get_iter.8', State(pc_initial=0 nstack_initial=0))},
 '$phi22.1': {('$20for_iter.2', State(pc_initial=20 nstack_initial=1))},
 '$phi52.1': {('$50get_iter.15', State(pc_initial=22 nstack_initial=2))},
 '$phi54.2': {('$52for_iter.3', State(pc_initial=52 nstack_initial=2))}}
DEBUG    numba.core.byteflow:byteflow.py:229 new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi20.0': '$18get_iter.8'},
             State(pc_initial=20 nstack_initial=1): {'$phi22.1': '$20for_iter.2'},
             State(pc_initial=22 nstack_initial=2): {'$phi52.1': '$50get_iter.15'},
             State(pc_initial=52 nstack_initial=2): {'$phi54.2': '$52for_iter.3'}})
DEBUG    numba.core.byteflow:byteflow.py:239 ----------------------DONE Prune PHIs-----------------------
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$6load_global.2'}), (8, {'res': '$linear_indices8.3'}), (10, {'func': '$6load_global.2', 'args': ['$linear_indices8.3'], 'res': '$10call_function.4'}), (12, {'res': '$const12.5'}), (14, {'lhs': '$10call_function.4', 'rhs': '$const12.5', 'res': '$14binary_subtract.6'}), (16, {'func': '$4load_method.1', 'args': ['$14binary_subtract.6'], 'res': '$16call_method.7'}), (18, {'value': '$16call_method.7', 'res': '$18get_iter.8'})), outgoing_phis={'$phi20.0': '$18get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={20: ('$18get_iter.8',)})
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=20 nstack_initial=1):
AdaptBlockInfo(insts=((20, {'iterator': '$phi20.0', 'pair': '$20for_iter.1', 'indval': '$20for_iter.2', 'pred': '$20for_iter.3'}),), outgoing_phis={'$phi22.1': '$20for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: (), 22: ('$phi20.0', '$20for_iter.2')})
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=22 nstack_initial=2):
AdaptBlockInfo(insts=((22, {'value': '$phi22.1'}), (24, {'res': '$descendants_indexes24.2'}), (26, {'res': '$linear_indices26.3'}), (28, {'res': '$i28.4'}), (30, {'index': '$i28.4', 'target': '$linear_indices26.3', 'res': '$30binary_subscr.5'}), (32, {'res': '$linear_indices32.6'}), (34, {'res': '$i34.7'}), (36, {'res': '$const36.8'}), (38, {'lhs': '$i34.7', 'rhs': '$const36.8', 'res': '$38binary_add.9'}), (40, {'index': '$38binary_add.9', 'target': '$linear_indices32.6', 'res': '$40binary_subscr.10'}), (42, {'start': '$30binary_subscr.5', 'stop': '$40binary_subscr.10', 'step': None, 'res': '$42build_slice.12', 'slicevar': '$42build_slice.11'}), (44, {'index': '$42build_slice.12', 'target': '$descendants_indexes24.2', 'res': '$44binary_subscr.13'}), (46, {'value': '$44binary_subscr.13'}), (48, {'res': '$index48.14'}), (50, {'value': '$index48.14', 'res': '$50get_iter.15'})), outgoing_phis={'$phi52.1': '$50get_iter.15'}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$phi22.0', '$50get_iter.15')})
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'iterator': '$phi52.1', 'pair': '$52for_iter.2', 'indval': '$52for_iter.3', 'pred': '$52for_iter.4'}),), outgoing_phis={'$phi54.2': '$52for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ('$phi52.0',), 54: ('$phi52.0', '$phi52.1', '$52for_iter.3')})
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=54 nstack_initial=3):
AdaptBlockInfo(insts=((54, {'value': '$phi54.2'}), (56, {'res': '$summed56.3'}), (58, {'res': '$i58.4'}), (60, {'orig': ['$summed56.3', '$i58.4'], 'duped': ['$60dup_top_two.5', '$60dup_top_two.6']}), (62, {'index': '$60dup_top_two.6', 'target': '$60dup_top_two.5', 'res': '$62binary_subscr.7'}), (64, {'res': '$array64.8'}), (66, {'res': '$j66.9'}), (68, {'index': '$j66.9', 'target': '$array64.8', 'res': '$68binary_subscr.10'}), (70, {'lhs': '$62binary_subscr.7', 'rhs': '$68binary_subscr.10', 'res': '$70inplace_add.11'}), (74, {'target': '$summed56.3', 'index': '$i58.4', 'value': '$70inplace_add.11'}), (76, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$phi54.0', '$phi54.1')})
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=78 nstack_initial=1):
AdaptBlockInfo(insts=((78, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={20: ('$phi78.0',)})
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=80 nstack_initial=0):
AdaptBlockInfo(insts=((80, {'res': '$const80.0'}), (82, {'retval': '$const80.0', 'castval': '$82return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG    numba.core.interpreter:interpreter.py:1342 label 0:
    array = arg(0, name=array)               ['array']
    summed = arg(1, name=summed)             ['summed']
    descendants_indexes = arg(2, name=descendants_indexes) ['descendants_indexes']
    linear_indices = arg(3, name=linear_indices) ['linear_indices']
    $2load_global.0 = global(nb: <module 'numba' from '/usr/local/lib/python3.10/dist-packages/numba/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=prange) ['$2load_global.0', '$4load_method.1']
    $6load_global.2 = global(len: <built-in function len>) ['$6load_global.2']
    $10call_function.4 = call $6load_global.2(linear_indices, func=$6load_global.2, args=[Var(linear_indices, rollup.py:324)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$6load_global.2', 'linear_indices']
    $const12.5 = const(int, 1)               ['$const12.5']
    $14binary_subtract.6 = $10call_function.4 - $const12.5 ['$10call_function.4', '$14binary_subtract.6', '$const12.5']
    $16call_method.7 = call $4load_method.1($14binary_subtract.6, func=$4load_method.1, args=[Var($14binary_subtract.6, rollup.py:324)], kws=(), vararg=None, varkwarg=None, target=None) ['$14binary_subtract.6', '$16call_method.7', '$4load_method.1']
    $18get_iter.8 = getiter(value=$16call_method.7) ['$16call_method.7', '$18get_iter.8']
    $phi20.0 = $18get_iter.8                 ['$18get_iter.8', '$phi20.0']
    jump 20                                  []
label 20:
    $20for_iter.1 = iternext(value=$phi20.0) ['$20for_iter.1', '$phi20.0']
    $20for_iter.2 = pair_first(value=$20for_iter.1) ['$20for_iter.1', '$20for_iter.2']
    $20for_iter.3 = pair_second(value=$20for_iter.1) ['$20for_iter.1', '$20for_iter.3']
    $phi22.1 = $20for_iter.2                 ['$20for_iter.2', '$phi22.1']
    branch $20for_iter.3, 22, 80             ['$20for_iter.3']
label 22:
    i = $phi22.1                             ['$phi22.1', 'i']
    $30binary_subscr.5 = getitem(value=linear_indices, index=i, fn=<built-in function getitem>) ['$30binary_subscr.5', 'i', 'linear_indices']
    $const36.8 = const(int, 1)               ['$const36.8']
    $38binary_add.9 = i + $const36.8         ['$38binary_add.9', '$const36.8', 'i']
    $40binary_subscr.10 = getitem(value=linear_indices, index=$38binary_add.9, fn=<built-in function getitem>) ['$38binary_add.9', '$40binary_subscr.10', 'linear_indices']
    $42build_slice.11 = global(slice: <class 'slice'>) ['$42build_slice.11']
    $42build_slice.12 = call $42build_slice.11($30binary_subscr.5, $40binary_subscr.10, func=$42build_slice.11, args=(Var($30binary_subscr.5, rollup.py:325), Var($40binary_subscr.10, rollup.py:325)), kws=(), vararg=None, varkwarg=None, target=None) ['$30binary_subscr.5', '$40binary_subscr.10', '$42build_slice.11', '$42build_slice.12']
    index = getitem(value=descendants_indexes, index=$42build_slice.12, fn=<built-in function getitem>) ['$42build_slice.12', 'descendants_indexes', 'index']
    $50get_iter.15 = getiter(value=index)    ['$50get_iter.15', 'index']
    $phi52.1 = $50get_iter.15                ['$50get_iter.15', '$phi52.1']
    jump 52                                  []
label 52:
    $52for_iter.2 = iternext(value=$phi52.1) ['$52for_iter.2', '$phi52.1']
    $52for_iter.3 = pair_first(value=$52for_iter.2) ['$52for_iter.2', '$52for_iter.3']
    $52for_iter.4 = pair_second(value=$52for_iter.2) ['$52for_iter.2', '$52for_iter.4']
    $phi54.2 = $52for_iter.3                 ['$52for_iter.3', '$phi54.2']
    branch $52for_iter.4, 54, 78             ['$52for_iter.4']
label 54:
    j = $phi54.2                             ['$phi54.2', 'j']
    $62binary_subscr.7 = getitem(value=summed, index=i, fn=<built-in function getitem>) ['$62binary_subscr.7', 'i', 'summed']
    $68binary_subscr.10 = getitem(value=array, index=j, fn=<built-in function getitem>) ['$68binary_subscr.10', 'array', 'j']
    $70inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$62binary_subscr.7, rhs=$68binary_subscr.10, static_lhs=Undefined, static_rhs=Undefined) ['$62binary_subscr.7', '$68binary_subscr.10', '$70inplace_add.11']
    summed[i] = $70inplace_add.11            ['$70inplace_add.11', 'i', 'summed']
    jump 52                                  []
label 78:
    jump 20                                  []
label 80:
    $const80.0 = const(NoneType, None)       ['$const80.0']
    $82return_value.1 = cast(value=$const80.0) ['$82return_value.1', '$const80.0']
    return $82return_value.1                 ['$82return_value.1']

DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 0
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f4776afe560>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: array = arg(0, name=array)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: summed = arg(1, name=summed)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: descendants_indexes = arg(2, name=descendants_indexes)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: linear_indices = arg(3, name=linear_indices)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $2load_global.0 = global(nb: <module 'numba' from '/usr/local/lib/python3.10/dist-packages/numba/__init__.py'>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $6load_global.2 = global(len: <built-in function len>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $10call_function.4 = call $6load_global.2(linear_indices, func=$6load_global.2, args=[Var(linear_indices, rollup.py:324)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $const12.5 = const(int, 1)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $14binary_subtract.6 = $10call_function.4 - $const12.5
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $16call_method.7 = call $4load_method.1($14binary_subtract.6, func=$4load_method.1, args=[Var($14binary_subtract.6, rollup.py:324)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $18get_iter.8 = getiter(value=$16call_method.7)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $phi20.0 = $18get_iter.8
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 20
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 20
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f4776afe560>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $phi22.1 = $20for_iter.2
DEBUG    numba.core.ssa:ssa.py:193 on stmt: branch $20for_iter.3, 22, 80
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 22
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f4776afe560>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: i = $phi22.1
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $30binary_subscr.5 = getitem(value=linear_indices, index=i, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $const36.8 = const(int, 1)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $38binary_add.9 = i + $const36.8
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $40binary_subscr.10 = getitem(value=linear_indices, index=$38binary_add.9, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $42build_slice.11 = global(slice: <class 'slice'>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $42build_slice.12 = call $42build_slice.11($30binary_subscr.5, $40binary_subscr.10, func=$42build_slice.11, args=(Var($30binary_subscr.5, rollup.py:325), Var($40binary_subscr.10, rollup.py:325)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: index = getitem(value=descendants_indexes, index=$42build_slice.12, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $50get_iter.15 = getiter(value=index)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $phi52.1 = $50get_iter.15
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 52
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 52
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f4776afe560>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $52for_iter.2 = iternext(value=$phi52.1)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $52for_iter.3 = pair_first(value=$52for_iter.2)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $52for_iter.4 = pair_second(value=$52for_iter.2)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $phi54.2 = $52for_iter.3
DEBUG    numba.core.ssa:ssa.py:193 on stmt: branch $52for_iter.4, 54, 78
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 54
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f4776afe560>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: j = $phi54.2
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $62binary_subscr.7 = getitem(value=summed, index=i, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $68binary_subscr.10 = getitem(value=array, index=j, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $70inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$62binary_subscr.7, rhs=$68binary_subscr.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: summed[i] = $70inplace_add.11
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 52
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 78
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f4776afe560>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 20
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 80
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f4776afe560>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $const80.0 = const(NoneType, None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $82return_value.1 = cast(value=$const80.0)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: return $82return_value.1
DEBUG    numba.core.ssa:ssa.py:154 defs defaultdict(<class 'list'>,
            {'$10call_function.4': [<numba.core.ir.Assign object at 0x7f4776aff3a0>],
             '$14binary_subtract.6': [<numba.core.ir.Assign object at 0x7f4776aff6a0>],
             '$16call_method.7': [<numba.core.ir.Assign object at 0x7f4776aff880>],
             '$18get_iter.8': [<numba.core.ir.Assign object at 0x7f4776aff970>],
             '$20for_iter.1': [<numba.core.ir.Assign object at 0x7f4776affca0>],
             '$20for_iter.2': [<numba.core.ir.Assign object at 0x7f4776affdc0>],
             '$20for_iter.3': [<numba.core.ir.Assign object at 0x7f4776affee0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f4776afeda0>],
             '$30binary_subscr.5': [<numba.core.ir.Assign object at 0x7f4776c10700>],
             '$38binary_add.9': [<numba.core.ir.Assign object at 0x7f4776c10c40>],
             '$40binary_subscr.10': [<numba.core.ir.Assign object at 0x7f4776c10dc0>],
             '$42build_slice.11': [<numba.core.ir.Assign object at 0x7f4776c10f10>],
             '$42build_slice.12': [<numba.core.ir.Assign object at 0x7f4776c11030>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x7f4776afef20>],
             '$50get_iter.15': [<numba.core.ir.Assign object at 0x7f4776c11570>],
             '$52for_iter.2': [<numba.core.ir.Assign object at 0x7f4776c11660>],
             '$52for_iter.3': [<numba.core.ir.Assign object at 0x7f4776c11780>],
             '$52for_iter.4': [<numba.core.ir.Assign object at 0x7f4776c118a0>],
             '$62binary_subscr.7': [<numba.core.ir.Assign object at 0x7f4776c12140>],
             '$68binary_subscr.10': [<numba.core.ir.Assign object at 0x7f4776c12500>],
             '$6load_global.2': [<numba.core.ir.Assign object at 0x7f4776aff0a0>],
             '$70inplace_add.11': [<numba.core.ir.Assign object at 0x7f4776c12680>],
             '$82return_value.1': [<numba.core.ir.Assign object at 0x7f4776c12ad0>],
             '$const12.5': [<numba.core.ir.Assign object at 0x7f4776aff4f0>],
             '$const36.8': [<numba.core.ir.Assign object at 0x7f4776c10a90>],
             '$const80.0': [<numba.core.ir.Assign object at 0x7f4776c12950>],
             '$phi20.0': [<numba.core.ir.Assign object at 0x7f4776aff250>],
             '$phi22.1': [<numba.core.ir.Assign object at 0x7f4776affbe0>],
             '$phi52.1': [<numba.core.ir.Assign object at 0x7f4776c10310>],
             '$phi54.2': [<numba.core.ir.Assign object at 0x7f4776c113f0>],
             'array': [<numba.core.ir.Assign object at 0x7f4776afe890>],
             'descendants_indexes': [<numba.core.ir.Assign object at 0x7f4776afead0>],
             'i': [<numba.core.ir.Assign object at 0x7f4776c101f0>],
             'index': [<numba.core.ir.Assign object at 0x7f4776c111e0>],
             'j': [<numba.core.ir.Assign object at 0x7f4776c11b70>],
             'linear_indices': [<numba.core.ir.Assign object at 0x7f4776afebf0>],
             'summed': [<numba.core.ir.Assign object at 0x7f4776afe9b0>]})
DEBUG    numba.core.ssa:ssa.py:156 SSA violators set()
DEBUG    numba.core.byteflow:byteflow.py:74 bytecode dump:
>          0	NOP(arg=None, lineno=2)
           2	LOAD_GLOBAL(arg=0, lineno=2)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_CONST(arg=1, lineno=2)
           8	BINARY_SUBSCR(arg=None, lineno=2)
          10	LOAD_FAST(arg=0, lineno=2)
          12	LOAD_CONST(arg=2, lineno=2)
          14	BINARY_SUBSCR(arg=None, lineno=2)
          16	LOAD_GLOBAL(arg=1, lineno=2)
          18	LOAD_METHOD(arg=2, lineno=2)
          20	LOAD_CONST(arg=2, lineno=2)
          22	CALL_METHOD(arg=1, lineno=2)
          24	BINARY_ADD(arg=None, lineno=2)
          26	CALL_FUNCTION(arg=2, lineno=2)
          28	GET_ITER(arg=None, lineno=2)
>         30	FOR_ITER(arg=4, lineno=2)
          32	STORE_FAST(arg=5, lineno=2)
          34	LOAD_CONST(arg=1, lineno=3)
          36	STORE_FAST(arg=6, lineno=3)
          38	JUMP_ABSOLUTE(arg=16, lineno=3)
>         40	LOAD_CONST(arg=0, lineno=4)
          42	RETURN_VALUE(arg=None, lineno=4)
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=0, inst=NOP(arg=None, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$sched4.1']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$sched4.1', '$const6.2']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$8binary_subscr.3']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=14, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4', '$const12.5']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$16load_global.7']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=22, inst=CALL_METHOD(arg=1, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8', '$const20.9']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=24, inst=BINARY_ADD(arg=None, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$22call_method.10']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=26, inst=CALL_FUNCTION(arg=2, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$8binary_subscr.3', '$24binary_add.11']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=28, inst=GET_ITER(arg=None, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$26call_function.12']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[Edge(pc=30, stack=('$28get_iter.13',), blockstack=(), npush=0)]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: ['$phi30.0']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=30, inst=FOR_ITER(arg=4, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi30.0']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=40, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG    numba.core.byteflow:byteflow.py:279 stack []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=4)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$const40.0']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=32 nstack_initial=2)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: ['$phi32.0', '$phi32.1']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=32, inst=STORE_FAST(arg=5, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi32.0', '$phi32.1']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=3)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi32.0']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=36, inst=STORE_FAST(arg=6, lineno=3)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi32.0', '$const34.2']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=38, inst=JUMP_ABSOLUTE(arg=16, lineno=3)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi32.0']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[Edge(pc=30, stack=('$phi32.0',), blockstack=(), npush=0)]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG    numba.core.byteflow:byteflow.py:166 -------------------------Prune PHIs-------------------------
DEBUG    numba.core.byteflow:byteflow.py:235 Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=40 nstack_initial=0): set()})
DEBUG    numba.core.byteflow:byteflow.py:192 defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1)}
DEBUG    numba.core.byteflow:byteflow.py:193 phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG    numba.core.byteflow:byteflow.py:214 changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG    numba.core.byteflow:byteflow.py:214 changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG    numba.core.byteflow:byteflow.py:214 changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG    numba.core.byteflow:byteflow.py:223 keep phismap: {'$phi30.0': {('$28get_iter.13', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))}}
DEBUG    numba.core.byteflow:byteflow.py:229 new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.13'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'}})
DEBUG    numba.core.byteflow:byteflow.py:239 ----------------------DONE Prune PHIs-----------------------
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sched4.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$sched4.1', 'res': '$8binary_subscr.3'}), (10, {'res': '$sched10.4'}), (12, {'res': '$const12.5'}), (14, {'index': '$const12.5', 'target': '$sched10.4', 'res': '$14binary_subscr.6'}), (16, {'res': '$16load_global.7'}), (18, {'item': '$16load_global.7', 'res': '$18load_method.8'}), (20, {'res': '$const20.9'}), (22, {'func': '$18load_method.8', 'args': ['$const20.9'], 'res': '$22call_method.10'}), (24, {'lhs': '$14binary_subscr.6', 'rhs': '$22call_method.10', 'res': '$24binary_add.11'}), (26, {'func': '$2load_global.0', 'args': ['$8binary_subscr.3', '$24binary_add.11'], 'res': '$26call_function.12'}), (28, {'value': '$26call_function.12', 'res': '$28get_iter.13'})), outgoing_phis={'$phi30.0': '$28get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.13',)})
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 32: ('$phi30.0', '$30for_iter.2')})
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$const34.2'}), (36, {'value': '$const34.2'}), (38, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi32.0',)})
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$const40.0'}), (42, {'retval': '$const40.0', 'castval': '$42return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG    numba.core.interpreter:interpreter.py:1342 label 0:
    sched = arg(0, name=sched)               ['sched']
    array = arg(1, name=array)               ['array']
    descendants__indexes = arg(2, name=descendants__indexes) ['descendants__indexes']
    linear__indices = arg(3, name=linear__indices) ['linear__indices']
    summed = arg(4, name=summed)             ['summed']
    $2load_global.0 = global(range: <class 'range'>) ['$2load_global.0']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8binary_subscr.3 = getitem(value=sched, index=$const6.2, fn=<built-in function getitem>) ['$8binary_subscr.3', '$const6.2', 'sched']
    $const12.5 = const(int, 1)               ['$const12.5']
    $14binary_subscr.6 = getitem(value=sched, index=$const12.5, fn=<built-in function getitem>) ['$14binary_subscr.6', '$const12.5', 'sched']
    $16load_global.7 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>) ['$16load_global.7']
    $18load_method.8 = getattr(value=$16load_global.7, attr=uint8) ['$16load_global.7', '$18load_method.8']
    $const20.9 = const(int, 1)               ['$const20.9']
    $22call_method.10 = call $18load_method.8($const20.9, func=$18load_method.8, args=[Var($const20.9, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.8', '$22call_method.10', '$const20.9']
    $24binary_add.11 = $14binary_subscr.6 + $22call_method.10 ['$14binary_subscr.6', '$22call_method.10', '$24binary_add.11']
    $26call_function.12 = call $2load_global.0($8binary_subscr.3, $24binary_add.11, func=$2load_global.0, args=[Var($8binary_subscr.3, <string>:2), Var($24binary_add.11, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$24binary_add.11', '$26call_function.12', '$2load_global.0', '$8binary_subscr.3']
    $28get_iter.13 = getiter(value=$26call_function.12) ['$26call_function.12', '$28get_iter.13']
    $phi30.0 = $28get_iter.13                ['$28get_iter.13', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 40             ['$30for_iter.3']
label 32:
    parfor__index_31 = $phi32.1              ['$phi32.1', 'parfor__index_31']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 30                                  []
label 40:
    $const40.0 = const(NoneType, None)       ['$const40.0']
    $42return_value.1 = cast(value=$const40.0) ['$42return_value.1', '$const40.0']
    return $42return_value.1                 ['$42return_value.1']

DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 0
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f47771ff100>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: sched.47 = arg(0, name=sched)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: array = arg(1, name=array)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: descendants__indexes = arg(2, name=descendants__indexes)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: linear__indices = arg(3, name=linear__indices)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: summed = arg(4, name=summed)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $2load_global.0.48 = global(range: <class 'range'>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $const6.2.49 = const(int, 0)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $8binary_subscr.3.50 = getitem(value=sched.47, index=$const6.2.49, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $const12.5.51 = const(int, 1)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $14binary_subscr.6.52 = getitem(value=sched.47, index=$const12.5.51, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $16load_global.7.53 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $18load_method.8.54 = getattr(value=$16load_global.7.53, attr=uint8)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $const20.9.55 = const(int, 1)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $22call_method.10.56 = call $18load_method.8.54($const20.9.55, func=$18load_method.8.54, args=[Var($const20.9.55, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $24binary_add.11.57 = $14binary_subscr.6.52 + $22call_method.10.56
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $26call_function.12.58 = call $2load_global.0.48($8binary_subscr.3.50, $24binary_add.11.57, func=$2load_global.0.48, args=[Var($8binary_subscr.3.50, <string>:2), Var($24binary_add.11.57, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $28get_iter.13.59 = getiter(value=$26call_function.12.58)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $phi30.0.60 = $28get_iter.13.59
DEBUG    numba.core.ssa:ssa.py:193 on stmt: msg.24 = const(str, Sizes of $62binary_subscr.7, $68binary_subscr.10 do not match on /single-cell-data-portal/backend/common/utils/rollup.py (327))
DEBUG    numba.core.ssa:ssa.py:193 on stmt: assert.25 = global(assert_equiv: <intrinsic assert_equiv>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: msg.27 = const(str, Sizes of $62binary_subscr.7, $68binary_subscr.10 do not match on /single-cell-data-portal/backend/common/utils/rollup.py (327))
DEBUG    numba.core.ssa:ssa.py:193 on stmt: assert.28 = global(assert_equiv: <intrinsic assert_equiv>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $const36.8 = const(int, 1)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $42build_slice.11 = global(slice: <class 'slice'>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 30
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 30
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f47771ff100>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $30for_iter.1.61 = iternext(value=$phi30.0.60)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $30for_iter.2.62 = pair_first(value=$30for_iter.1.61)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $30for_iter.3.63 = pair_second(value=$30for_iter.1.61)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $phi32.1.64 = $30for_iter.2.62
DEBUG    numba.core.ssa:ssa.py:193 on stmt: branch $30for_iter.3.63, 32, 120
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 32
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f47771ff100>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: parfor__index_31 = $phi32.1.64
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 40
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 120
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f47771ff100>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $const40.0.65 = const(NoneType, None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $42return_value.1.66 = cast(value=$const40.0.65)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: return $42return_value.1.66
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 95
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f47771ff100>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 119
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 63
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f47771ff100>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $52for_iter.2 = iternext(value=$50get_iter.15)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $j.34 = pair_first(value=$52for_iter.2)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $52for_iter.4 = pair_second(value=$52for_iter.2)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: branch $52for_iter.4, 93, 95
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 93
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f47771ff100>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $62binary_subscr.7 = getitem(value=summed, index=parfor__index_31, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $62binary_subscr.7_shape.18 = getattr(value=$62binary_subscr.7, attr=shape)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $62binary_subscr.7_size0.19 = static_getitem(value=$62binary_subscr.7_shape.18, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $62binary_subscr.7_size1.20 = static_getitem(value=$62binary_subscr.7_shape.18, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $68binary_subscr.10 = getitem(value=array, index=$j.34, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $68binary_subscr.10_shape.21 = getattr(value=$68binary_subscr.10, attr=shape)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $68binary_subscr.10_size0.22 = static_getitem(value=$68binary_subscr.10_shape.21, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $68binary_subscr.10_size1.23 = static_getitem(value=$68binary_subscr.10_shape.21, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: ret.26 = call assert.25(msg.24, $62binary_subscr.7_size1.20, $68binary_subscr.10_size1.23, func=assert.25, args=[Var(msg.24, rollup.py:327), Var($62binary_subscr.7_size1.20, rollup.py:327), Var($68binary_subscr.10_size1.23, rollup.py:327)], kws={}, vararg=None, varkwarg=None, target=None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: ret.29 = call assert.28(msg.27, $62binary_subscr.7_size0.19, $68binary_subscr.10_size0.22, func=assert.28, args=[Var(msg.27, rollup.py:327), Var($62binary_subscr.7_size0.19, rollup.py:327), Var($68binary_subscr.10_size0.22, rollup.py:327)], kws={}, vararg=None, varkwarg=None, target=None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $70inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$62binary_subscr.7, rhs=$68binary_subscr.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: summed[parfor__index_31] = $70inplace_add.11
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 63
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 40
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f47771ff100>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: i = parfor__index_31
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $30binary_subscr.5 = getitem(value=linear__indices, index=parfor__index_31, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $38binary_add.9 = i + $const36.8
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $40binary_subscr.10 = getitem(value=linear__indices, index=$38binary_add.9, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $42build_slice.12 = call $42build_slice.11($30binary_subscr.5, $40binary_subscr.10, func=$42build_slice.11, args=(Var($30binary_subscr.5, rollup.py:325), Var($40binary_subscr.10, rollup.py:325)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: index = getitem(value=descendants__indexes, index=$42build_slice.12, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $50get_iter.15 = getiter(value=index)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 63
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 119
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f47771ff100>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 30
DEBUG    numba.core.ssa:ssa.py:154 defs defaultdict(<class 'list'>,
            {'$14binary_subscr.6.52': [<numba.core.ir.Assign object at 0x7f477726f550>],
             '$16load_global.7.53': [<numba.core.ir.Assign object at 0x7f477726f6a0>],
             '$18load_method.8.54': [<numba.core.ir.Assign object at 0x7f477726f820>],
             '$22call_method.10.56': [<numba.core.ir.Assign object at 0x7f477726fbb0>],
             '$24binary_add.11.57': [<numba.core.ir.Assign object at 0x7f477726fcd0>],
             '$26call_function.12.58': [<numba.core.ir.Assign object at 0x7f477726fe80>],
             '$28get_iter.13.59': [<numba.core.ir.Assign object at 0x7f477726ffa0>],
             '$2load_global.0.48': [<numba.core.ir.Assign object at 0x7f477726ece0>],
             '$30binary_subscr.5': [<numba.core.ir.Assign object at 0x7f4776c10700>],
             '$30for_iter.1.61': [<numba.core.ir.Assign object at 0x7f47771fc2b0>],
             '$30for_iter.2.62': [<numba.core.ir.Assign object at 0x7f47771fc3d0>],
             '$30for_iter.3.63': [<numba.core.ir.Assign object at 0x7f47771fc4f0>],
             '$38binary_add.9': [<numba.core.ir.Assign object at 0x7f4776c10c40>],
             '$40binary_subscr.10': [<numba.core.ir.Assign object at 0x7f4776c10dc0>],
             '$42build_slice.11': [<numba.core.ir.Assign object at 0x7f4776c10f10>],
             '$42build_slice.12': [<numba.core.ir.Assign object at 0x7f4776c11030>],
             '$42return_value.1.66': [<numba.core.ir.Assign object at 0x7f47771fce80>],
             '$50get_iter.15': [<numba.core.ir.Assign object at 0x7f4776c11570>],
             '$52for_iter.2': [<numba.core.ir.Assign object at 0x7f4776c11660>],
             '$52for_iter.4': [<numba.core.ir.Assign object at 0x7f4776c118a0>],
             '$62binary_subscr.7': [<numba.core.ir.Assign object at 0x7f4776c12140>],
             '$62binary_subscr.7_shape.18': [<numba.core.ir.Assign object at 0x7f4776f1dd20>],
             '$62binary_subscr.7_size0.19': [<numba.core.ir.Assign object at 0x7f4776f1ddb0>],
             '$62binary_subscr.7_size1.20': [<numba.core.ir.Assign object at 0x7f4776f1df60>],
             '$68binary_subscr.10': [<numba.core.ir.Assign object at 0x7f4776c12500>],
             '$68binary_subscr.10_shape.21': [<numba.core.ir.Assign object at 0x7f4776f1e1d0>],
             '$68binary_subscr.10_size0.22': [<numba.core.ir.Assign object at 0x7f4776f1e1a0>],
             '$68binary_subscr.10_size1.23': [<numba.core.ir.Assign object at 0x7f4776f1e380>],
             '$70inplace_add.11': [<numba.core.ir.Assign object at 0x7f4776c12680>],
             '$8binary_subscr.3.50': [<numba.core.ir.Assign object at 0x7f477726f130>],
             '$const12.5.51': [<numba.core.ir.Assign object at 0x7f477726f3a0>],
             '$const20.9.55': [<numba.core.ir.Assign object at 0x7f477726f9a0>],
             '$const36.8': [<numba.core.ir.Assign object at 0x7f4776c10a90>],
             '$const40.0.65': [<numba.core.ir.Assign object at 0x7f47771fcd00>],
             '$const6.2.49': [<numba.core.ir.Assign object at 0x7f477726ef80>],
             '$j.34': [<numba.core.ir.Assign object at 0x7f4776c11780>],
             '$phi30.0.60': [<numba.core.ir.Assign object at 0x7f477726ee90>],
             '$phi32.1.64': [<numba.core.ir.Assign object at 0x7f47771fc1f0>],
             'array': [<numba.core.ir.Assign object at 0x7f477726e800>],
             'assert.25': [<numba.core.ir.Assign object at 0x7f4776d596f0>],
             'assert.28': [<numba.core.ir.Assign object at 0x7f4776d59150>],
             'descendants__indexes': [<numba.core.ir.Assign object at 0x7f477726e920>],
             'i': [<numba.core.ir.Assign object at 0x7f4776c101f0>],
             'index': [<numba.core.ir.Assign object at 0x7f4776c111e0>],
             'linear__indices': [<numba.core.ir.Assign object at 0x7f477726ea40>],
             'msg.24': [<numba.core.ir.Assign object at 0x7f4776d59f00>],
             'msg.27': [<numba.core.ir.Assign object at 0x7f4776d5a1a0>],
             'parfor__index_31': [<numba.core.ir.Assign object at 0x7f47771fc7c0>],
             'ret.26': [<numba.core.ir.Assign object at 0x7f4776d59540>],
             'ret.29': [<numba.core.ir.Assign object at 0x7f4776d5a380>],
             'sched.47': [<numba.core.ir.Assign object at 0x7f477726e6e0>],
             'summed': [<numba.core.ir.Assign object at 0x7f477726eb60>]})
DEBUG    numba.core.ssa:ssa.py:156 SSA violators set()