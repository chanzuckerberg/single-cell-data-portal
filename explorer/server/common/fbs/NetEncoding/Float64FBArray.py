# automatically generated by the FlatBuffers compiler, do not modify

# namespace: NetEncoding

import flatbuffers
from flatbuffers.compat import import_numpy

np = import_numpy()


class Float64FBArray(object):
    __slots__ = ["_tab"]

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Float64FBArray()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsFloat64FBArray(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)

    # Float64FBArray
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Float64FBArray
    def Data(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(
                flatbuffers.number_types.Float64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8)
            )
        return 0

    # Float64FBArray
    def DataAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Float64Flags, o)
        return 0

    # Float64FBArray
    def DataLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # Float64FBArray
    def DataIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0


def Start(builder):
    builder.StartObject(1)


def Float64FBArrayStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)


def AddData(builder, data):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(data), 0)


def Float64FBArrayAddData(builder, data):
    """This method is deprecated. Please switch to AddData."""
    return AddData(builder, data)


def StartDataVector(builder, numElems):
    return builder.StartVector(8, numElems, 8)


def Float64FBArrayStartDataVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartDataVector(builder, numElems)


def End(builder):
    return builder.EndObject()


def Float64FBArrayEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)
