{"uid":"aeab2d826f9a72f0","name":"test_type_inference[parameters101]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"7812ba33eea48c1c3cb35b038ae3426f","time":{"start":1719270571373,"stop":1719270571374,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1719270556514,"stop":1719270556515,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1719270571371,"stop":1719270571371,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"62d4946ad3cf26a5","name":"log","source":"62d4946ad3cf26a5.txt","type":"text/plain","size":341},{"uid":"fdb2200911259bcd","name":"stderr","source":"fdb2200911259bcd.txt","type":"text/plain","size":852}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1719270571374,"stop":1719270571374,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"d9e5bb4e1d20"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0    0.0\n1    NaN\n2    2.0\ndtype: category\nCategories (2, float64): [0.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6933dd675a89aad7","status":"passed","time":{"start":1719270571362,"stop":1719270571363,"duration":1}},{"uid":"eba353051573165b","status":"passed","time":{"start":1719270571350,"stop":1719270571351,"duration":1}},{"uid":"e574c88e7e32a348","status":"passed","time":{"start":1719270571261,"stop":1719270571262,"duration":1}},{"uid":"44c447a92c1bbbc1","status":"passed","time":{"start":1719270571244,"stop":1719270571245,"duration":1}},{"uid":"6a53be7b321fff46","status":"passed","time":{"start":1719270571227,"stop":1719270571228,"duration":1}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":5},"items":[{"uid":"4628562e12741dc5","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20907//#testresult/4628562e12741dc5","status":"passed","time":{"start":1719266525503,"stop":1719266525504,"duration":1}},{"uid":"9b0867eb10aba978","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20894//#testresult/9b0867eb10aba978","status":"passed","time":{"start":1718992365949,"stop":1718992365950,"duration":1}},{"uid":"9a80943e32166445","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20889//#testresult/9a80943e32166445","status":"passed","time":{"start":1718988863123,"stop":1718988863124,"duration":1}},{"uid":"8729485b52b096b2","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20887//#testresult/8729485b52b096b2","status":"passed","time":{"start":1718925650179,"stop":1718925650180,"duration":1}}]},"tags":[]},"source":"aeab2d826f9a72f0.json","parameterValues":["{'data': 0    0.0\n1    NaN\n2    2.0\ndtype: category\nCategories (2, float64): [0.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}