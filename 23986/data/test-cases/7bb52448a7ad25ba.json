{"uid":"7bb52448a7ad25ba","name":"test_type_inference[parameters45]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"3d10d447330d03e8ea7986dcf0924706","time":{"start":1744388803981,"stop":1744388803982,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744388793598,"stop":1744388793598,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744388803981,"stop":1744388803981,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"c6ede8059397a1ed","name":"log","source":"c6ede8059397a1ed.txt","type":"text/plain","size":341},{"uid":"312d9aea7c1b5a06","name":"stdout","source":"312d9aea7c1b5a06.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1744388803982,"stop":1744388803982,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"958ffe53541f"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': <Compressed Sparse Row sparse matrix of dtype 'float64'\n\twith 0 stored elements and shape (10, 100)>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":17,"unknown":0,"total":17},"items":[{"uid":"4b0e88443db87508","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23985//#testresult/4b0e88443db87508","status":"passed","time":{"start":1744388070457,"stop":1744388070458,"duration":1}},{"uid":"3c15ce8421256eb0","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23984//#testresult/3c15ce8421256eb0","status":"passed","time":{"start":1744387757236,"stop":1744387757237,"duration":1}},{"uid":"9cc75b70e9ed33a2","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23983//#testresult/9cc75b70e9ed33a2","status":"passed","time":{"start":1744387690698,"stop":1744387690699,"duration":1}},{"uid":"350d3e98ade6f0fe","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23981//#testresult/350d3e98ade6f0fe","status":"passed","time":{"start":1744386324558,"stop":1744386324559,"duration":1}},{"uid":"dc7bc0c621543baf","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23980//#testresult/dc7bc0c621543baf","status":"passed","time":{"start":1744386162053,"stop":1744386162054,"duration":1}},{"uid":"f91cda35e2087ca","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23979//#testresult/f91cda35e2087ca","status":"passed","time":{"start":1744384705586,"stop":1744384705587,"duration":1}},{"uid":"b5df6eadb71cfc2c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23976//#testresult/b5df6eadb71cfc2c","status":"passed","time":{"start":1744383515431,"stop":1744383515432,"duration":1}},{"uid":"218782d7a6ed7b8e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23975//#testresult/218782d7a6ed7b8e","status":"passed","time":{"start":1744337376985,"stop":1744337376986,"duration":1}},{"uid":"e14c1a7bb990fbde","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23966//#testresult/e14c1a7bb990fbde","status":"passed","time":{"start":1744334800377,"stop":1744334800378,"duration":1}},{"uid":"6751d1cf7c2c00be","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23965//#testresult/6751d1cf7c2c00be","status":"passed","time":{"start":1744328197681,"stop":1744328197681,"duration":0}},{"uid":"aeb51b0609023acb","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23964//#testresult/aeb51b0609023acb","status":"passed","time":{"start":1744326572620,"stop":1744326572621,"duration":1}},{"uid":"e8286e023dfefb1","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23961//#testresult/e8286e023dfefb1","status":"passed","time":{"start":1744324473246,"stop":1744324473247,"duration":1}},{"uid":"8974686f2a19ad90","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23954//#testresult/8974686f2a19ad90","status":"passed","time":{"start":1744324189420,"stop":1744324189421,"duration":1}},{"uid":"316d818a7df25b6e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23951//#testresult/316d818a7df25b6e","status":"passed","time":{"start":1744322847502,"stop":1744322847503,"duration":1}},{"uid":"d2bbe6ff515c0894","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23950//#testresult/d2bbe6ff515c0894","status":"passed","time":{"start":1744317734457,"stop":1744317734458,"duration":1}},{"uid":"19c3f3137ed3cee7","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23949//#testresult/19c3f3137ed3cee7","status":"passed","time":{"start":1744316549276,"stop":1744316549277,"duration":1}}]},"tags":[]},"source":"7bb52448a7ad25ba.json","parameterValues":["{'data': <Compressed Sparse Row sparse matrix of dtype 'float64'\n\twith 0 stored elements and shape (10, 100)>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}