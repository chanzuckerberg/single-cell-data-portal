{"uid":"fb5fc362848ea44d","name":"test_type_inference[parameters45]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"34115b745f78ed96bae479e62d5d64ee","time":{"start":1720805225669,"stop":1720805225670,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720805168800,"stop":1720805168800,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1720805225669,"stop":1720805225669,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1720805225670,"stop":1720805225671,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"825a550b3b08"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': <10x100 sparse matrix of type '<class 'numpy.float32'>'\n\twith 0 stored elements in Compressed Sparse Row format>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': None}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":19,"unknown":0,"total":19},"items":[{"uid":"5a8bf95b07f726c5","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21401//#testresult/5a8bf95b07f726c5","status":"passed","time":{"start":1720799665866,"stop":1720799665867,"duration":1}},{"uid":"f053853495dcb287","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21400//#testresult/f053853495dcb287","status":"passed","time":{"start":1720799575898,"stop":1720799575898,"duration":0}},{"uid":"7d35aed80b91f814","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21397//#testresult/7d35aed80b91f814","status":"passed","time":{"start":1720738873465,"stop":1720738873465,"duration":0}},{"uid":"dbe75d42ac84dc07","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21399//#testresult/dbe75d42ac84dc07","status":"passed","time":{"start":1720736718665,"stop":1720736718666,"duration":1}},{"uid":"632f3c5a024e1718","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21389//#testresult/632f3c5a024e1718","status":"passed","time":{"start":1720734522554,"stop":1720734522554,"duration":0}},{"uid":"6aa7393f107f9a8","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21388//#testresult/6aa7393f107f9a8","status":"passed","time":{"start":1720731703127,"stop":1720731703127,"duration":0}},{"uid":"9ab3d10c0327f9d0","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21387//#testresult/9ab3d10c0327f9d0","status":"passed","time":{"start":1720731414348,"stop":1720731414348,"duration":0}},{"uid":"9ec79680194620a0","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21386//#testresult/9ec79680194620a0","status":"passed","time":{"start":1720720819109,"stop":1720720819109,"duration":0}},{"uid":"963280c39123da05","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21384//#testresult/963280c39123da05","status":"passed","time":{"start":1720713742558,"stop":1720713742558,"duration":0}},{"uid":"e10e6da0a252c34e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21383//#testresult/e10e6da0a252c34e","status":"passed","time":{"start":1720668473748,"stop":1720668473749,"duration":1}},{"uid":"75c0647fe113449a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21381//#testresult/75c0647fe113449a","status":"passed","time":{"start":1720667369074,"stop":1720667369074,"duration":0}},{"uid":"5650c1917c766327","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21380//#testresult/5650c1917c766327","status":"passed","time":{"start":1720663187721,"stop":1720663187721,"duration":0}},{"uid":"d81ae9316822c6a4","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21379//#testresult/d81ae9316822c6a4","status":"passed","time":{"start":1720663113617,"stop":1720663113618,"duration":1}},{"uid":"bbe1151cc0ce7a66","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21377//#testresult/bbe1151cc0ce7a66","status":"passed","time":{"start":1720662780897,"stop":1720662780898,"duration":1}},{"uid":"a58a5edea021ed56","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21376//#testresult/a58a5edea021ed56","status":"passed","time":{"start":1720657324217,"stop":1720657324218,"duration":1}},{"uid":"c47de7bd32975d91","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21375//#testresult/c47de7bd32975d91","status":"passed","time":{"start":1720656982011,"stop":1720656982012,"duration":1}},{"uid":"69270669a494efd7","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21373//#testresult/69270669a494efd7","status":"passed","time":{"start":1720656033878,"stop":1720656033878,"duration":0}},{"uid":"2c9e150cd15775d9","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21372//#testresult/2c9e150cd15775d9","status":"passed","time":{"start":1720655800922,"stop":1720655800923,"duration":1}}]},"tags":[]},"source":"fb5fc362848ea44d.json","parameterValues":["{'data': <10x100 sparse matrix of type '<class 'numpy.float32'>'\n\twith 0 stored elements in Compressed Sparse Row format>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': None}"]}