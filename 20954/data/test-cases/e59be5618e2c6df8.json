{"uid":"e59be5618e2c6df8","name":"test_type_inference[parameters23]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"1c0186b3276fb55f4c6bba001d55553b","time":{"start":1719346966508,"stop":1719346966509,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1719346951966,"stop":1719346951966,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1719346966507,"stop":1719346966507,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1719346966509,"stop":1719346966509,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"7e7640dcd685"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0        0\n1        1\n2        2\n3        3\n4        4\n      ... \n995    995\n996    996\n997    997\n998    998\n999    999\nLength: 1000, dtype: uint32, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":19,"unknown":0,"total":19},"items":[{"uid":"e5a03e301842ed51","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20952//#testresult/e5a03e301842ed51","status":"passed","time":{"start":1719346919276,"stop":1719346919277,"duration":1}},{"uid":"2d95f9658035244e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20935//#testresult/2d95f9658035244e","status":"passed","time":{"start":1719346402358,"stop":1719346402359,"duration":1}},{"uid":"cc0a7ee392ae9b9a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20932//#testresult/cc0a7ee392ae9b9a","status":"passed","time":{"start":1719346273353,"stop":1719346273354,"duration":1}},{"uid":"9f463bb3e6e66a33","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20941//#testresult/9f463bb3e6e66a33","status":"passed","time":{"start":1719346540053,"stop":1719346540054,"duration":1}},{"uid":"2e7926b0cac36e4a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20934//#testresult/2e7926b0cac36e4a","status":"passed","time":{"start":1719346394131,"stop":1719346394131,"duration":0}},{"uid":"9030699ef18c725c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20933//#testresult/9030699ef18c725c","status":"passed","time":{"start":1719346305178,"stop":1719346305179,"duration":1}},{"uid":"486c45f280d83978","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20929//#testresult/486c45f280d83978","status":"passed","time":{"start":1719346122102,"stop":1719346122103,"duration":1}},{"uid":"4526c72bf9d6d48b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20930//#testresult/4526c72bf9d6d48b","status":"passed","time":{"start":1719346138139,"stop":1719346138139,"duration":0}},{"uid":"afc294574adf6408","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20926//#testresult/afc294574adf6408","status":"passed","time":{"start":1719345895562,"stop":1719345895563,"duration":1}},{"uid":"def31bce6fe528cd","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20927//#testresult/def31bce6fe528cd","status":"passed","time":{"start":1719345908405,"stop":1719345908406,"duration":1}},{"uid":"98d37a3adf5a91e1","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20918//#testresult/98d37a3adf5a91e1","status":"passed","time":{"start":1719334939989,"stop":1719334939990,"duration":1}},{"uid":"5d4afe482aeb5422","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20919//#testresult/5d4afe482aeb5422","status":"passed","time":{"start":1719335052352,"stop":1719335052353,"duration":1}},{"uid":"c29b5ecdbe1936b3","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20911//#testresult/c29b5ecdbe1936b3","status":"passed","time":{"start":1719270612601,"stop":1719270612602,"duration":1}},{"uid":"3a7f298eb6a96c3e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20910//#testresult/3a7f298eb6a96c3e","status":"passed","time":{"start":1719270571029,"stop":1719270571029,"duration":0}},{"uid":"d49da48e97744f93","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20907//#testresult/d49da48e97744f93","status":"passed","time":{"start":1719266525152,"stop":1719266525153,"duration":1}},{"uid":"43ef0832a62c25fd","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20894//#testresult/43ef0832a62c25fd","status":"passed","time":{"start":1718992365602,"stop":1718992365603,"duration":1}},{"uid":"bbc07c53eec077a9","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20889//#testresult/bbc07c53eec077a9","status":"passed","time":{"start":1718988862776,"stop":1718988862777,"duration":1}},{"uid":"ed87b7cf0e94b09f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20887//#testresult/ed87b7cf0e94b09f","status":"passed","time":{"start":1718925649829,"stop":1718925649830,"duration":1}}]},"tags":[]},"source":"e59be5618e2c6df8.json","parameterValues":["{'data': 0        0\n1        1\n2        2\n3        3\n4        4\n      ... \n995    995\n996    996\n997    997\n998    998\n999    999\nLength: 1000, dtype: uint32, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}