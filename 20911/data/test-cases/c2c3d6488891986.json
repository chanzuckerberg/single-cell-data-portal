{"uid":"c2c3d6488891986","name":"test_type_inference[parameters48]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"55ca2d06df3963797669e9c963ac7a55","time":{"start":1719270612709,"stop":1719270612710,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1719270598031,"stop":1719270598031,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1719270612708,"stop":1719270612708,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"24178cd1561e59a6","name":"log","source":"24178cd1561e59a6.txt","type":"text/plain","size":341},{"uid":"7673c95f75966e34","name":"stderr","source":"7673c95f75966e34.txt","type":"text/plain","size":852}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1719270612710,"stop":1719270612710,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"d7bd5fe935ed"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': Float64Index([-129.0, -128.0, -127.0, -126.0, -125.0, -124.0, -123.0, -122.0,\n              -121.0, -120.0,\n              ...\n               990.0,  991.0,  992.0,  993.0,  994.0,  995.0,  996.0,  997.0,\n               998.0,  999.0],\n             dtype='float64', length=1129), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"de3dcc684f76c6a3","status":"passed","time":{"start":1719270612685,"stop":1719270612686,"duration":1}},{"uid":"3becdde11b9e236e","status":"passed","time":{"start":1719270612662,"stop":1719270612663,"duration":1}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"c47f113f9ab66e9f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20910//#testresult/c47f113f9ab66e9f","status":"passed","time":{"start":1719270571132,"stop":1719270571133,"duration":1}},{"uid":"c9457ff1cd9b335f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20907//#testresult/c9457ff1cd9b335f","status":"passed","time":{"start":1719266525257,"stop":1719266525258,"duration":1}},{"uid":"22aa4810306b7447","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20894//#testresult/22aa4810306b7447","status":"passed","time":{"start":1718992365705,"stop":1718992365706,"duration":1}},{"uid":"e9869323cbd2b83f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20889//#testresult/e9869323cbd2b83f","status":"passed","time":{"start":1718988862879,"stop":1718988862880,"duration":1}},{"uid":"4703bcb2e362568a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20887//#testresult/4703bcb2e362568a","status":"passed","time":{"start":1718925649932,"stop":1718925649933,"duration":1}}]},"tags":[]},"source":"c2c3d6488891986.json","parameterValues":["{'data': Float64Index([-129.0, -128.0, -127.0, -126.0, -125.0, -124.0, -123.0, -122.0,\n              -121.0, -120.0,\n              ...\n               990.0,  991.0,  992.0,  993.0,  994.0,  995.0,  996.0,  997.0,\n               998.0,  999.0],\n             dtype='float64', length=1129), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}