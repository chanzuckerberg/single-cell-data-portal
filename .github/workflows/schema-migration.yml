name: Trigger Schema Migration

env:
  DEPLOYMENT_STAGE: test
  # Force using BuildKit instead of normal Docker, required so that metadata
  # is written/read to allow us to use layers of previous builds as cache.
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  DOCKER_REPO: ${{ secrets.ECR_REPO }}/

permissions:
  id-token: write
  contents: read
  deployments: write

on:
  repository_dispatch:
    types: [schema-migration]

jobs:
  rebuild-processing-images:
    uses: ./.github/workflows/rebuild-processing-image.yml
    secrets:
      ECR_REPO: ${{ secrets.ECR_REPO }}
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  trigger-schema-migration:
    runs-on: ubuntu-22.04
    needs: rebuild-processing-images
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_PROD_ROLE_TO_ASSUME }}
          role-duration-seconds: 1800
      - name: install requirements
        run: |
          pip install awscli==1.29.1
      - name: Trigger Schema Migration AWS Step Function
        run: |
          aws stepfunctions start-execution --state-machine-arn ${{ secrets.SCHEMA_MIGRATION_ARN }} --input "{\"auto_publish\" : \"True\"}"
      - name: Alert in Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,eventName,workflow,job
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: always() # Pick up events even if the job fails or is canceled.
