name: Push Tests

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "main"

env:
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  DEPLOYMENT_STAGE: test
  # Force using BuildKit instead of normal Docker, required so that metadata
  # is written/read to allow us to use layers of previous builds as cache.
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  DOCKER_REPO: ${{ secrets.ECR_REPO }}/

permissions:
  id-token: write
  contents: read

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1800
      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ECR_REPO }}
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - name: check backend
        uses: pre-commit/action@v3.0.0
      - name: check frontend
        run: |
          cp frontend/src/configs/local.js frontend/src/configs/configs.js
          docker-compose run --no-deps --rm frontend make lint
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,commit,author,eventName,workflow,job,mention
          mention: "here"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: failure() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/prod')

  run-e2e-tests:
    timeout-minutes: 60
    name: e2e-tests-${{ matrix.project }}-${{ matrix.shardCurrent }}-${{ matrix.shardTotal }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        # Only run Chrome for now, since GHA only has 250 workers and will cancel jobs if it runs out
        project: [chromium]
        shardCurrent:
          [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
          ]
        shardTotal: [20]

    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: "16.14.2"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1800
      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ECR_REPO }}
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps
          cp src/configs/local.js src/configs/configs.js
          npm run dev > dev_server.log 2>&1 &

      # Run E2E tests
      - name: Run E2E tests
        env:
          CI: true
          PROJECT: ${{ matrix.project }}
          SHARD: ${{ matrix.shardCurrent }}/${{ matrix.shardTotal }}
        run: DEBUG=pw:api npm run e2e-pr

      - name: Upload FE server logs as an artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: fe-server-logs ${{ matrix.project }} ${{ matrix.shardCurrent }}-${{ matrix.shardTotal }}
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/frontend/dev_server.log
          retention-days: 30

      - name: Upload FE test results as an artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report ${{ matrix.project }} ${{ matrix.shardCurrent }}-${{ matrix.shardTotal }}
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/frontend/playwright-report
          retention-days: 14

      - name: Upload blob report to GitHub Actions Artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: all-blob-reports
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/frontend/blob-report
          retention-days: 1

      # Upload Allure results as an artifact
      - uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/frontend/allure-results
          retention-days: 20

      - name: Install happy
        uses: chanzuckerberg/github-actions/.github/actions/install-happy@install-happy-v1.4.2
        with:
          happy_version: "0.59.0"

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,commit,author,eventName,workflow,job,mention
          mention: "here"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: failure() && github.ref == 'refs/heads/main'

  wait-for-shards:
    needs: run-e2e-tests # run after shards
    runs-on: ubuntu-22.04
    #if: success() # only run when all shards have passed
    # store success output flag for ci job
    outputs:
      success: ${{ steps.setoutput.outputs.success }}
    steps:
      - id: setoutput
        run: echo "{success}={true}" >> $GITHUB_OUTPUT

  merge-playwright-reports:
    # Merge reports after playwright-tests, even if some shards have failed
    if: always()
    needs: [run-e2e-tests]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v3
        with:
          name: all-blob-reports
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/frontend/blob-reports

      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html ./blob-reports

      - name: Upload HTML report
        uses: actions/upload-artifact@v3
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/frontend/playwright-report
          retention-days: 30

  # https://github.com/myieye/web-languageforge/blob/develop/.github/workflows/e2e-tests.yml
  e2e-test:
    name: e2e-test
    if: always()
    runs-on: ubuntu-latest
    needs: [run-e2e-tests, wait-for-shards]
    steps:
      - name: Check result
        run: |
          passed="${{ needs.run-e2e-tests.result }}"
          if [[ $passed == "success" ]]; then
            echo "Shards passed"
            exit 0
          else
            echo "Shards failed"
            exit 1
          fi

  backend-unit-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1800
      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ECR_REPO }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35.8.0
        with:
          files: |
            Dockerfile*
            **/Dockerfile
            requirements*.txt
            **/requirements*.txt
      - name: Run unit tests
        run: |
          echo "DOCKER_REPO=${DOCKER_REPO}" > .env.ecr
          make local-unit-test-backend

      - name: Upload coverage results as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/.coverage*
          retention-days: 3

      - name: Upload Allure results as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/allure-results
          retention-days: 20

      - uses: 8398a7/action-slack@v3.15.0
        with:
          status: ${{ job.status }}
          fields: repo,commit,author,eventName,workflow,job,mention
          mention: "here"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: failure() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/prod')

  backend-wmg-unit-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1800
      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ECR_REPO }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35.8.0
        with:
          files: |
            Dockerfile*
            **/Dockerfile
            requirements*.txt
            **/requirements*.txt
      - name: Run unit tests
        run: |
          echo "DOCKER_REPO=${DOCKER_REPO}" > .env.ecr
          make local-unit-test-wmg-backend

      - name: Upload coverage results as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/.coverage*
          retention-days: 3

      - name: Upload Allure results as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/allure-results
          retention-days: 20

      - uses: 8398a7/action-slack@v3.15.0
        with:
          status: ${{ job.status }}
          fields: repo,commit,author,eventName,workflow,job,mention
          mention: "here"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: failure() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/prod')

  processing-unit-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1800
      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ECR_REPO }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35.8.0
        with:
          files: |
            Dockerfile*
            **/Dockerfile*
            requirements*.txt
            **/requirements*.txt
      - name: Check if containers need to be rebuilt
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "DOCKER_REPO=${DOCKER_REPO}" > .env.ecr
          make local-rebuild-processing
      - name: Run tests in docker-compose
        run: |
          echo "DOCKER_REPO=${DOCKER_REPO}" > .env.ecr
          make local-unit-test-processing

      - name: Upload coverage results as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/.coverage*
          retention-days: 3

      - name: Upload Allure results as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/allure-results
          retention-days: 20

      - uses: 8398a7/action-slack@v3.15.0
        with:
          status: ${{ job.status }}
          fields: repo,commit,author,eventName,workflow,job,mention
          mention: "here"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: failure() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/prod')

  wmg-processing-unit-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1800
      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ECR_REPO }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35.8.0
        with:
          files: |
            Dockerfile*
            **/Dockerfile*
            requirements*.txt
            **/requirements*.txt
      - name: Check if containers need to be rebuilt
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "DOCKER_REPO=${DOCKER_REPO}" > .env.ecr
          make local-rebuild-wmg-processing
      - name: Run tests in docker-compose
        run: |
          echo "DOCKER_REPO=${DOCKER_REPO}" > .env.ecr
          make local-unit-test-wmg-processing
      - name: Upload coverage results as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/.coverage*
          retention-days: 3
      - name: Upload Allure results as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/allure-results
          retention-days: 20
      - uses: 8398a7/action-slack@v3.15.0
        with:
          status: ${{ job.status }}
          fields: repo,commit,author,eventName,workflow,job,mention
          mention: "here"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: failure() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/prod')
  cellguide-pipeline-unit-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1800
      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ECR_REPO }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35.8.0
        with:
          files: |
            Dockerfile*
            **/Dockerfile*
            requirements*.txt
            **/requirements*.txt
      - name: Check if containers need to be rebuilt
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "DOCKER_REPO=${DOCKER_REPO}" > .env.ecr
          make local-rebuild-cellguide-pipeline
      - name: Run tests in docker-compose
        run: |
          echo "DOCKER_REPO=${DOCKER_REPO}" > .env.ecr
          make local-unit-test-cellguide-pipeline
      - name: Upload coverage results as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/.coverage*
          retention-days: 3
      - name: Upload Allure results as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/allure-results
          retention-days: 20
      - uses: 8398a7/action-slack@v3.15.0
        with:
          status: ${{ job.status }}
          fields: repo,commit,author,eventName,workflow,job,mention
          mention: "here"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: failure() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/prod')

  cxg-admin-unit-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1800
      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ECR_REPO }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35.8.0
        with:
          files: |
            Dockerfile*
            **/Dockerfile
            requirements*.txt
            **/requirements*.txt
      - name: Run unit tests
        run: |
          echo "DOCKER_REPO=${DOCKER_REPO}" > .env.ecr
          make local-unit-test-cxg-admin

      - name: Upload coverage results as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/.coverage*
          retention-days: 3

      - name: Upload Allure results as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/allure-results
          retention-days: 20

      - uses: 8398a7/action-slack@v3.15.0
        with:
          status: ${{ job.status }}
          fields: repo,commit,author,eventName,workflow,job,mention
          mention: "here"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: failure() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/prod')

  backend-integration-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1800
      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ECR_REPO }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35.8.0
        with:
          files: |
            Dockerfile*
            **/Dockerfile
            requirements*.txt
            **/requirements*.txt
      - name: Check if containers need to be rebuilt
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "DOCKER_REPO=${DOCKER_REPO}" > .env.ecr
          make local-rebuild-backend
      - name: Run tests against postgres instance
        run: |
          echo "DOCKER_REPO=${DOCKER_REPO}" > .env.ecr
          make local-integration-test-backend
      - name: Upload coverage results as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/.coverage*
          retention-days: 3

      - name: Upload Allure results as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: /home/runner/work/single-cell-data-portal/single-cell-data-portal/allure-results
          retention-days: 20
      - uses: 8398a7/action-slack@v3.15.0
        with:
          status: ${{ job.status }}
          fields: repo,commit,author,eventName,workflow,job,mention
          mention: "here"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: failure() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/prod')

  submit-codecoverage:
    needs:
      - backend-unit-test
      - backend-integration-test
      - backend-wmg-unit-test
      - wmg-processing-unit-test
      - processing-unit-test
    runs-on: ubuntu-22.04
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1800
      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ECR_REPO }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v3
        with:
          name: coverage
          path: .
      - name: coverage report
        run: |
          echo "DOCKER_REPO=${DOCKER_REPO}" > .env.ecr
          make coverage/report-xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,PYTHON
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  publish-test-report:
    needs:
      - backend-unit-test
      - backend-wmg-unit-test
      - backend-integration-test
      - wmg-processing-unit-test
      - processing-unit-test
      - e2e-test
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: allure-results
          path: allure-results

      # Checkout gh-pages branch and get Allure result history
      - name: Get Allure history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      # Create test results history as an Allure report
      - name: Create test results history as an Allure report
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history

      # Deploy Allure report to github pages
      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      # Output the link to the github page for this current run
      - name: Post the link to the report in summary
        run: "echo 'Test Results Dashboard (Run #${{ github.run_number }}): https://chanzuckerberg.github.io/single-cell-data-portal/${{ github.run_number }}' >> $GITHUB_STEP_SUMMARY"
