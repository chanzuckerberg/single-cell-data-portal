{"uid":"4eef8d98dde1338f","name":"test_type_inference[parameters90]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"810ef763bf1383c2f275e7b64404d990","time":{"start":1744665023255,"stop":1744665023256,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744665012625,"stop":1744665012625,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744665023254,"stop":1744665023254,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"8b17b82ef019aff8","name":"log","source":"8b17b82ef019aff8.txt","type":"text/plain","size":341},{"uid":"a7a8ed57bdc7a4a7","name":"stdout","source":"a7a8ed57bdc7a4a7.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1744665023256,"stop":1744665023256,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"46e2f84265c8"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0    0.0\n1    NaN\n2    2.0\ndtype: category\nCategories (2, float64): [0.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"56c94e6aa0312bfd","status":"passed","time":{"start":1744665023156,"stop":1744665023157,"duration":1}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":17,"unknown":0,"total":17},"items":[{"uid":"3332559057a16d6d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24047//#testresult/3332559057a16d6d","status":"passed","time":{"start":1744663560219,"stop":1744663560220,"duration":1}},{"uid":"9121f038ae8ed0a8","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24043//#testresult/9121f038ae8ed0a8","status":"passed","time":{"start":1744657958198,"stop":1744657958199,"duration":1}},{"uid":"9f38186cfdeccced","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24042//#testresult/9f38186cfdeccced","status":"passed","time":{"start":1744656707973,"stop":1744656707974,"duration":1}},{"uid":"7474c33dfe8e62e1","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24041//#testresult/7474c33dfe8e62e1","status":"passed","time":{"start":1744654734780,"stop":1744654734781,"duration":1}},{"uid":"7537d1b486d39adc","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24039//#testresult/7537d1b486d39adc","status":"passed","time":{"start":1744652737008,"stop":1744652737008,"duration":0}},{"uid":"bde495a28165209","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24038//#testresult/bde495a28165209","status":"passed","time":{"start":1744647656476,"stop":1744647656477,"duration":1}},{"uid":"964136551de03ec2","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24037//#testresult/964136551de03ec2","status":"passed","time":{"start":1744647590295,"stop":1744647590296,"duration":1}},{"uid":"203ff27a810b8387","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24036//#testresult/203ff27a810b8387","status":"passed","time":{"start":1744646979813,"stop":1744646979815,"duration":2}},{"uid":"f51682907715d434","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24034//#testresult/f51682907715d434","status":"passed","time":{"start":1744645891264,"stop":1744645891265,"duration":1}},{"uid":"462772f0f2cbd261","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24033//#testresult/462772f0f2cbd261","status":"passed","time":{"start":1744643892706,"stop":1744643892707,"duration":1}},{"uid":"e49a48d54fb19430","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24023//#testresult/e49a48d54fb19430","status":"passed","time":{"start":1744637601920,"stop":1744637601921,"duration":1}},{"uid":"1833420edba63c8f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24017//#testresult/1833420edba63c8f","status":"passed","time":{"start":1744407043839,"stop":1744407043840,"duration":1}},{"uid":"c422879fc8d2e079","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24016//#testresult/c422879fc8d2e079","status":"passed","time":{"start":1744406937405,"stop":1744406937405,"duration":0}},{"uid":"f5ffca4020bb746c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24015//#testresult/f5ffca4020bb746c","status":"passed","time":{"start":1744404330340,"stop":1744404330341,"duration":1}},{"uid":"732d94c4806bc501","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24012//#testresult/732d94c4806bc501","status":"passed","time":{"start":1744402200416,"stop":1744402200417,"duration":1}},{"uid":"65eb3db36bd94483","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24009//#testresult/65eb3db36bd94483","status":"passed","time":{"start":1744400192815,"stop":1744400192815,"duration":0}}]},"tags":[]},"source":"4eef8d98dde1338f.json","parameterValues":["{'data': 0    0.0\n1    NaN\n2    2.0\ndtype: category\nCategories (2, float64): [0.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}