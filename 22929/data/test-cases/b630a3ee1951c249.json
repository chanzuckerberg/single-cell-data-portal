{"uid":"b630a3ee1951c249","name":"test_type_inference[parameters42]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"23d33433afdae1968213e85c66998b1d","time":{"start":1738089507946,"stop":1738089507946,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1738089462708,"stop":1738089462708,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1738089507945,"stop":1738089507945,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"5e897bb09cf8468a","name":"log","source":"5e897bb09cf8468a.txt","type":"text/plain","size":341},{"uid":"a7591e56e1802b0d","name":"stdout","source":"a7591e56e1802b0d.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1738089507947,"stop":1738089507947,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"69d394f46f27"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': Index([-129.0, -128.0, -127.0, -126.0, -125.0, -124.0, -123.0, -122.0, -121.0,\n       -120.0,\n       ...\n        990.0,  991.0,  992.0,  993.0,  994.0,  995.0,  996.0,  997.0,  998.0,\n        999.0],\n      dtype='float64', length=1129), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":16,"unknown":0,"total":16},"items":[{"uid":"bb1bcf893313a153","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22879//#testresult/bb1bcf893313a153","status":"passed","time":{"start":1736891459561,"stop":1736891459562,"duration":1}},{"uid":"e3328067ad039049","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22875//#testresult/e3328067ad039049","status":"passed","time":{"start":1736889040557,"stop":1736889040558,"duration":1}},{"uid":"c934d0f7af68c36e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22872//#testresult/c934d0f7af68c36e","status":"passed","time":{"start":1736870356595,"stop":1736870356596,"duration":1}},{"uid":"7e003653a6ed2e18","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22868//#testresult/7e003653a6ed2e18","status":"passed","time":{"start":1736868709633,"stop":1736868709634,"duration":1}},{"uid":"dafe272e39244f3","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22867//#testresult/dafe272e39244f3","status":"passed","time":{"start":1736816536153,"stop":1736816536154,"duration":1}},{"uid":"cf40b3d6f5507158","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22865//#testresult/cf40b3d6f5507158","status":"passed","time":{"start":1736808847684,"stop":1736808847685,"duration":1}},{"uid":"fee552e4c6051ba","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22863//#testresult/fee552e4c6051ba","status":"passed","time":{"start":1736805444018,"stop":1736805444018,"duration":0}},{"uid":"f681e67e2fcb12db","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22856//#testresult/f681e67e2fcb12db","status":"passed","time":{"start":1736804265665,"stop":1736804265666,"duration":1}},{"uid":"f79674b8313cd937","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22821//#testresult/f79674b8313cd937","status":"passed","time":{"start":1736276917011,"stop":1736276917011,"duration":0}},{"uid":"6253dbeee8b616a2","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22812//#testresult/6253dbeee8b616a2","status":"passed","time":{"start":1736275574562,"stop":1736275574563,"duration":1}},{"uid":"ad2d576ca1f7cb40","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22811//#testresult/ad2d576ca1f7cb40","status":"passed","time":{"start":1736275280335,"stop":1736275280336,"duration":1}},{"uid":"bd6b3f4625779fcc","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22690//#testresult/bd6b3f4625779fcc","status":"passed","time":{"start":1733520590234,"stop":1733520590235,"duration":1}},{"uid":"6d2998afe5a3fc83","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22689//#testresult/6d2998afe5a3fc83","status":"passed","time":{"start":1733516736596,"stop":1733516736597,"duration":1}},{"uid":"d8161a533faefae0","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22688//#testresult/d8161a533faefae0","status":"passed","time":{"start":1733514090135,"stop":1733514090136,"duration":1}},{"uid":"ab484d86c0acc697","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22687//#testresult/ab484d86c0acc697","status":"passed","time":{"start":1733513219630,"stop":1733513219630,"duration":0}}]},"tags":[]},"source":"b630a3ee1951c249.json","parameterValues":["{'data': Index([-129.0, -128.0, -127.0, -126.0, -125.0, -124.0, -123.0, -122.0, -121.0,\n       -120.0,\n       ...\n        990.0,  991.0,  992.0,  993.0,  994.0,  995.0,  996.0,  997.0,  998.0,\n        999.0],\n      dtype='float64', length=1129), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}