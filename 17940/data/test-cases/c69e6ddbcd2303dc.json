{"uid":"c69e6ddbcd2303dc","name":"test_type_inference[parameters28]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"46f620a7fdf01be705c5fda90da11a1d","time":{"start":1702928465732,"stop":1702928465732,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1702928449901,"stop":1702928449902,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1702928465731,"stop":1702928465731,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1702928465733,"stop":1702928465733,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"3e3bb54ba1d8"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': Int64Index([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,\n            ...\n            990, 991, 992, 993, 994, 995, 996, 997, 998, 999],\n           dtype='int64', length=1000), 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6539f875ed1e5e03","status":"passed","time":{"start":1702928465694,"stop":1702928465694,"duration":0}},{"uid":"9dd461343d620e3e","status":"passed","time":{"start":1702928465652,"stop":1702928465653,"duration":1}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":9,"unknown":0,"total":9},"items":[{"uid":"eb30a77f7b57c4fe","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17939//#testresult/eb30a77f7b57c4fe","status":"passed","time":{"start":1702928455154,"stop":1702928455154,"duration":0}},{"uid":"feb812bdb5bb54c4","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17938//#testresult/feb812bdb5bb54c4","status":"passed","time":{"start":1702927926057,"stop":1702927926057,"duration":0}},{"uid":"d3d8f34cc7c4a314","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17937//#testresult/d3d8f34cc7c4a314","status":"passed","time":{"start":1702927372005,"stop":1702927372005,"duration":0}},{"uid":"a29b3733506f5b26","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17936//#testresult/a29b3733506f5b26","status":"passed","time":{"start":1702926366343,"stop":1702926366343,"duration":0}},{"uid":"55638a1c4fce990a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17935//#testresult/55638a1c4fce990a","status":"passed","time":{"start":1702925519047,"stop":1702925519047,"duration":0}},{"uid":"b0192451d545d7b3","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17934//#testresult/b0192451d545d7b3","status":"passed","time":{"start":1702925452834,"stop":1702925452834,"duration":0}},{"uid":"1afaf03810ef83ae","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17933//#testresult/1afaf03810ef83ae","status":"passed","time":{"start":1702924128006,"stop":1702924128006,"duration":0}},{"uid":"fd213c84f0cdda77","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17882//#testresult/fd213c84f0cdda77","status":"passed","time":{"start":1702513219231,"stop":1702513219231,"duration":0}}]},"tags":[]},"source":"c69e6ddbcd2303dc.json","parameterValues":["{'data': Int64Index([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,\n            ...\n            990, 991, 992, 993, 994, 995, 996, 997, 998, 999],\n           dtype='int64', length=1000), 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}