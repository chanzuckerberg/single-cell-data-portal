{"uid":"e82a58e5050f1285","name":"test_type_inference[parameters94]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"096a48773a62d8baaf02787fa77b78b1","time":{"start":1719346273667,"stop":1719346273668,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1719346258588,"stop":1719346258588,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1719346273666,"stop":1719346273666,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"6a62a7c870b357d2","name":"log","source":"6a62a7c870b357d2.txt","type":"text/plain","size":341},{"uid":"d1c9b0d0eba8a595","name":"stderr","source":"d1c9b0d0eba8a595.txt","type":"text/plain","size":852}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1719346273668,"stop":1719346273668,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"082ae0d78e84"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': [0, 1, NaN]\nCategories (2, int64): [0, 1], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b5a607e1f4062e92","status":"passed","time":{"start":1719346273647,"stop":1719346273648,"duration":1}},{"uid":"f93118bbb6003742","status":"passed","time":{"start":1719346273627,"stop":1719346273628,"duration":1}},{"uid":"b7fe4583217cb84","status":"passed","time":{"start":1719346273607,"stop":1719346273608,"duration":1}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":16,"unknown":0,"total":16},"items":[{"uid":"82afe110b355b0eb","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20941//#testresult/82afe110b355b0eb","status":"passed","time":{"start":1719346540367,"stop":1719346540368,"duration":1}},{"uid":"4c9937fc89224d1c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20934//#testresult/4c9937fc89224d1c","status":"passed","time":{"start":1719346394449,"stop":1719346394450,"duration":1}},{"uid":"b1c18d007ea2c7e7","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20933//#testresult/b1c18d007ea2c7e7","status":"passed","time":{"start":1719346305491,"stop":1719346305492,"duration":1}},{"uid":"6ecca625c36b25b4","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20929//#testresult/6ecca625c36b25b4","status":"passed","time":{"start":1719346122414,"stop":1719346122415,"duration":1}},{"uid":"def7a5f6e9d9510","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20930//#testresult/def7a5f6e9d9510","status":"passed","time":{"start":1719346138447,"stop":1719346138448,"duration":1}},{"uid":"db09080c8f003e8a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20926//#testresult/db09080c8f003e8a","status":"passed","time":{"start":1719345895876,"stop":1719345895877,"duration":1}},{"uid":"8e03d4ad80b91b0c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20927//#testresult/8e03d4ad80b91b0c","status":"passed","time":{"start":1719345908728,"stop":1719345908729,"duration":1}},{"uid":"d6494a873df96c33","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20918//#testresult/d6494a873df96c33","status":"passed","time":{"start":1719334940333,"stop":1719334940334,"duration":1}},{"uid":"d6c073f3713d09d6","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20919//#testresult/d6c073f3713d09d6","status":"passed","time":{"start":1719335052686,"stop":1719335052688,"duration":2}},{"uid":"a18dbe9a3ecb405d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20911//#testresult/a18dbe9a3ecb405d","status":"passed","time":{"start":1719270612920,"stop":1719270612921,"duration":1}},{"uid":"61d261e0e7aa9327","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20910//#testresult/61d261e0e7aa9327","status":"passed","time":{"start":1719270571335,"stop":1719270571336,"duration":1}},{"uid":"eeb48317bd719cc0","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20907//#testresult/eeb48317bd719cc0","status":"passed","time":{"start":1719266525465,"stop":1719266525466,"duration":1}},{"uid":"a10c35d501e6e6b6","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20894//#testresult/a10c35d501e6e6b6","status":"passed","time":{"start":1718992365911,"stop":1718992365912,"duration":1}},{"uid":"a041f43093483de1","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20889//#testresult/a041f43093483de1","status":"passed","time":{"start":1718988863086,"stop":1718988863087,"duration":1}},{"uid":"4e506d9a07fcc841","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20887//#testresult/4e506d9a07fcc841","status":"passed","time":{"start":1718925650141,"stop":1718925650142,"duration":1}}]},"tags":[]},"source":"e82a58e5050f1285.json","parameterValues":["{'data': [0, 1, NaN]\nCategories (2, int64): [0, 1], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}