{"uid":"6095c1276f703eb6","name":"test_type_inference[parameters72]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"722cf44eb06b0df13e88a6d9c070f977","time":{"start":1736804265788,"stop":1736804265789,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1736804219583,"stop":1736804219583,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1736804265787,"stop":1736804265787,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"9fd08302bea93009","name":"log","source":"9fd08302bea93009.txt","type":"text/plain","size":341},{"uid":"a460e3bcd8a91d2","name":"stdout","source":"a460e3bcd8a91d2.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1736804265790,"stop":1736804265790,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"79d559c9f804"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, int8): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"45975f1b6027ccc0","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22821//#testresult/45975f1b6027ccc0","status":"passed","time":{"start":1736276917137,"stop":1736276917138,"duration":1}},{"uid":"5d56b0c924cbaecb","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22812//#testresult/5d56b0c924cbaecb","status":"passed","time":{"start":1736275574682,"stop":1736275574683,"duration":1}},{"uid":"332e2809ab8ae86d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22811//#testresult/332e2809ab8ae86d","status":"passed","time":{"start":1736275280457,"stop":1736275280458,"duration":1}},{"uid":"328fe33ae7cbe2f0","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22690//#testresult/328fe33ae7cbe2f0","status":"passed","time":{"start":1733520590370,"stop":1733520590371,"duration":1}},{"uid":"e34556dcee78fffa","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22689//#testresult/e34556dcee78fffa","status":"passed","time":{"start":1733516736718,"stop":1733516736719,"duration":1}},{"uid":"7addaef7e77aae73","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22688//#testresult/7addaef7e77aae73","status":"passed","time":{"start":1733514090257,"stop":1733514090258,"duration":1}},{"uid":"7e697f024cc4ae8a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22687//#testresult/7e697f024cc4ae8a","status":"passed","time":{"start":1733513219750,"stop":1733513219751,"duration":1}}]},"tags":[]},"source":"6095c1276f703eb6.json","parameterValues":["{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, int8): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}