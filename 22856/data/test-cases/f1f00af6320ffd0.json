{"uid":"f1f00af6320ffd0","name":"test_type_inference[parameters74]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"ba9a69cef7b63efa0faae3aff0afb245","time":{"start":1736804265798,"stop":1736804265799,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1736804219583,"stop":1736804219583,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1736804265797,"stop":1736804265797,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"b52e23abe0d3dc36","name":"log","source":"b52e23abe0d3dc36.txt","type":"text/plain","size":341},{"uid":"1edd9a1af4317591","name":"stdout","source":"1edd9a1af4317591.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1736804265800,"stop":1736804265800,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"79d559c9f804"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, uint8): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"e9a7886480c24a9b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22821//#testresult/e9a7886480c24a9b","status":"passed","time":{"start":1736276917147,"stop":1736276917148,"duration":1}},{"uid":"39ba2b697972b9a7","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22812//#testresult/39ba2b697972b9a7","status":"passed","time":{"start":1736275574692,"stop":1736275574693,"duration":1}},{"uid":"fb22bd4e6b307c21","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22811//#testresult/fb22bd4e6b307c21","status":"passed","time":{"start":1736275280467,"stop":1736275280468,"duration":1}},{"uid":"1ebb13de4ab781fb","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22690//#testresult/1ebb13de4ab781fb","status":"passed","time":{"start":1733520590381,"stop":1733520590382,"duration":1}},{"uid":"ffc37c55d90e191d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22689//#testresult/ffc37c55d90e191d","status":"passed","time":{"start":1733516736728,"stop":1733516736729,"duration":1}},{"uid":"e1f58532892cd5ea","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22688//#testresult/e1f58532892cd5ea","status":"passed","time":{"start":1733514090267,"stop":1733514090268,"duration":1}},{"uid":"d0cdfde766ee56ca","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22687//#testresult/d0cdfde766ee56ca","status":"passed","time":{"start":1733513219760,"stop":1733513219761,"duration":1}}]},"tags":[]},"source":"f1f00af6320ffd0.json","parameterValues":["{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, uint8): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}