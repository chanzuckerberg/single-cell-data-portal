{"uid":"d48cdaa4e79eb8cf","name":"test_type_inference[parameters69]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"371ab4604c8a9d123ca891b354dcfb4a","time":{"start":1736804265772,"stop":1736804265773,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1736804219583,"stop":1736804219583,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1736804265771,"stop":1736804265771,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"57341e0907173604","name":"log","source":"57341e0907173604.txt","type":"text/plain","size":341},{"uid":"51941e9db5ababb7","name":"stdout","source":"51941e9db5ababb7.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1736804265773,"stop":1736804265773,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"79d559c9f804"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0    0.0\n1    1.0\n2    2.0\ndtype: category\nCategories (3, float64): [0.0, 1.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"e240b87a8237e613","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22821//#testresult/e240b87a8237e613","status":"passed","time":{"start":1736276917120,"stop":1736276917121,"duration":1}},{"uid":"7b8efadeca80500a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22812//#testresult/7b8efadeca80500a","status":"passed","time":{"start":1736275574666,"stop":1736275574667,"duration":1}},{"uid":"4e764df01a0ad721","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22811//#testresult/4e764df01a0ad721","status":"passed","time":{"start":1736275280442,"stop":1736275280443,"duration":1}},{"uid":"bbdc10ed729494e5","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22690//#testresult/bbdc10ed729494e5","status":"passed","time":{"start":1733520590351,"stop":1733520590353,"duration":2}},{"uid":"9c3b4756acdc16e1","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22689//#testresult/9c3b4756acdc16e1","status":"passed","time":{"start":1733516736702,"stop":1733516736703,"duration":1}},{"uid":"fbd4d58803b1e253","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22688//#testresult/fbd4d58803b1e253","status":"passed","time":{"start":1733514090241,"stop":1733514090242,"duration":1}},{"uid":"4f551348828e5a47","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22687//#testresult/4f551348828e5a47","status":"passed","time":{"start":1733513219734,"stop":1733513219735,"duration":1}}]},"tags":[]},"source":"d48cdaa4e79eb8cf.json","parameterValues":["{'data': 0    0.0\n1    1.0\n2    2.0\ndtype: category\nCategories (3, float64): [0.0, 1.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}