{"uid":"2bd920b0f2819e7f","name":"test_type_inference[parameters71]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"6e1a8ce775aac3cbfaa7265e05c4e162","time":{"start":1736804265783,"stop":1736804265784,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1736804219583,"stop":1736804219583,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1736804265782,"stop":1736804265782,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"b287f5907fd1c3dd","name":"log","source":"b287f5907fd1c3dd.txt","type":"text/plain","size":341},{"uid":"e1182402addeccdf","name":"stdout","source":"e1182402addeccdf.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1736804265784,"stop":1736804265784,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"79d559c9f804"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': [0.0, 1.0, 2.0]\nCategories (3, float64): [0.0, 1.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"a1d584985c311c94","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22821//#testresult/a1d584985c311c94","status":"passed","time":{"start":1736276917131,"stop":1736276917132,"duration":1}},{"uid":"b031844e255275cb","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22812//#testresult/b031844e255275cb","status":"passed","time":{"start":1736275574677,"stop":1736275574678,"duration":1}},{"uid":"cc7e1c8a9d854d38","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22811//#testresult/cc7e1c8a9d854d38","status":"passed","time":{"start":1736275280452,"stop":1736275280453,"duration":1}},{"uid":"489e7e2c3a465d6d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22690//#testresult/489e7e2c3a465d6d","status":"passed","time":{"start":1733520590364,"stop":1733520590365,"duration":1}},{"uid":"d839d6c70921b6a5","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22689//#testresult/d839d6c70921b6a5","status":"passed","time":{"start":1733516736712,"stop":1733516736713,"duration":1}},{"uid":"2633ce8f8f4aa2bc","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22688//#testresult/2633ce8f8f4aa2bc","status":"passed","time":{"start":1733514090252,"stop":1733514090252,"duration":0}},{"uid":"d74375b4c42c7864","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22687//#testresult/d74375b4c42c7864","status":"passed","time":{"start":1733513219745,"stop":1733513219746,"duration":1}}]},"tags":[]},"source":"2bd920b0f2819e7f.json","parameterValues":["{'data': [0.0, 1.0, 2.0]\nCategories (3, float64): [0.0, 1.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}