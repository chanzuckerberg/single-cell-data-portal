{"uid":"78cd91df4a4bfd4c","name":"test_type_inference[parameters40]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"3fcde8d3c40af199fd3ce750fc514354","time":{"start":1736804265655,"stop":1736804265656,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1736804219583,"stop":1736804219583,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1736804265655,"stop":1736804265655,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"f8d6435ad8931a9c","name":"log","source":"f8d6435ad8931a9c.txt","type":"text/plain","size":341},{"uid":"fd69d7f2ba28581e","name":"stdout","source":"fd69d7f2ba28581e.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1736804265657,"stop":1736804265657,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"79d559c9f804"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': array([-128., -127., -126., ...,  997.,  998.,  999.]), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"5b31347414711cfe","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22821//#testresult/5b31347414711cfe","status":"passed","time":{"start":1736276917000,"stop":1736276917001,"duration":1}},{"uid":"59407952ba84aec8","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22812//#testresult/59407952ba84aec8","status":"passed","time":{"start":1736275574552,"stop":1736275574553,"duration":1}},{"uid":"f9f2e5288757e6cf","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22811//#testresult/f9f2e5288757e6cf","status":"passed","time":{"start":1736275280325,"stop":1736275280326,"duration":1}},{"uid":"6aed141cd4ae57b5","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22690//#testresult/6aed141cd4ae57b5","status":"passed","time":{"start":1733520590223,"stop":1733520590224,"duration":1}},{"uid":"4ad00427dfb800b1","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22689//#testresult/4ad00427dfb800b1","status":"passed","time":{"start":1733516736586,"stop":1733516736587,"duration":1}},{"uid":"9ae08088da9e4b3f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22688//#testresult/9ae08088da9e4b3f","status":"passed","time":{"start":1733514090126,"stop":1733514090126,"duration":0}},{"uid":"7bc1e88f7ced4cd0","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22687//#testresult/7bc1e88f7ced4cd0","status":"passed","time":{"start":1733513219620,"stop":1733513219621,"duration":1}}]},"tags":[]},"source":"78cd91df4a4bfd4c.json","parameterValues":["{'data': array([-128., -127., -126., ...,  997.,  998.,  999.]), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}