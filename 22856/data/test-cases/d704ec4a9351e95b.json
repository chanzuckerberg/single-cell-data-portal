{"uid":"d704ec4a9351e95b","name":"test_type_inference[parameters45]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"3d10d447330d03e8ea7986dcf0924706","time":{"start":1736804265678,"stop":1736804265678,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1736804219583,"stop":1736804219583,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1736804265677,"stop":1736804265677,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"e00423afdb9125e5","name":"log","source":"e00423afdb9125e5.txt","type":"text/plain","size":341},{"uid":"a1f269415142dfcb","name":"stdout","source":"a1f269415142dfcb.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1736804265679,"stop":1736804265679,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"79d559c9f804"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': <Compressed Sparse Row sparse matrix of dtype 'float64'\n\twith 0 stored elements and shape (10, 100)>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"337ce6a485f10207","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22821//#testresult/337ce6a485f10207","status":"passed","time":{"start":1736276917023,"stop":1736276917024,"duration":1}},{"uid":"43be9c336fe78476","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22812//#testresult/43be9c336fe78476","status":"passed","time":{"start":1736275574574,"stop":1736275574575,"duration":1}},{"uid":"996987519814a9cc","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22811//#testresult/996987519814a9cc","status":"passed","time":{"start":1736275280348,"stop":1736275280348,"duration":0}},{"uid":"bbe3c7a46851c235","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22690//#testresult/bbe3c7a46851c235","status":"passed","time":{"start":1733520590247,"stop":1733520590248,"duration":1}},{"uid":"3cfbfabee67328ef","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22689//#testresult/3cfbfabee67328ef","status":"passed","time":{"start":1733516736608,"stop":1733516736609,"duration":1}},{"uid":"8810822db01a3359","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22688//#testresult/8810822db01a3359","status":"passed","time":{"start":1733514090148,"stop":1733514090148,"duration":0}},{"uid":"1d426a6a304c03b2","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22687//#testresult/1d426a6a304c03b2","status":"passed","time":{"start":1733513219642,"stop":1733513219642,"duration":0}}]},"tags":[]},"source":"d704ec4a9351e95b.json","parameterValues":["{'data': <Compressed Sparse Row sparse matrix of dtype 'float64'\n\twith 0 stored elements and shape (10, 100)>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}