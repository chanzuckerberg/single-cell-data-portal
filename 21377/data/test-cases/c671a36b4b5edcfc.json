{"uid":"c671a36b4b5edcfc","name":"test_type_inference[parameters48]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"dfd40ade9090659943c4d8e3c73f6130","time":{"start":1720662780910,"stop":1720662780911,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720662720208,"stop":1720662720209,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1720662780909,"stop":1720662780909,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"45c1b47e84a88ae7","name":"log","source":"45c1b47e84a88ae7.txt","type":"text/plain","size":341},{"uid":"e134d06749581eec","name":"stdout","source":"e134d06749581eec.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1720662780911,"stop":1720662780911,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"040c07994cc7"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': Float64Index([-129.0, -128.0, -127.0, -126.0, -125.0, -124.0, -123.0, -122.0,\n              -121.0, -120.0,\n              ...\n               990.0,  991.0,  992.0,  993.0,  994.0,  995.0,  996.0,  997.0,\n               998.0,  999.0],\n             dtype='float64', length=1129), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8c58b2b2963445d7","status":"passed","time":{"start":1720662780887,"stop":1720662780887,"duration":0}},{"uid":"b215a97127449c2f","status":"passed","time":{"start":1720662780864,"stop":1720662780865,"duration":1}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":5},"items":[{"uid":"16c7d281d79bc52b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21376//#testresult/16c7d281d79bc52b","status":"passed","time":{"start":1720657324230,"stop":1720657324231,"duration":1}},{"uid":"49da0c06b4577bb9","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21375//#testresult/49da0c06b4577bb9","status":"passed","time":{"start":1720656982025,"stop":1720656982025,"duration":0}},{"uid":"47b4bd7df0db936f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21373//#testresult/47b4bd7df0db936f","status":"passed","time":{"start":1720656033891,"stop":1720656033892,"duration":1}},{"uid":"67c542d92f185e9a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21372//#testresult/67c542d92f185e9a","status":"passed","time":{"start":1720655800935,"stop":1720655800936,"duration":1}}]},"tags":[]},"source":"c671a36b4b5edcfc.json","parameterValues":["{'data': Float64Index([-129.0, -128.0, -127.0, -126.0, -125.0, -124.0, -123.0, -122.0,\n              -121.0, -120.0,\n              ...\n               990.0,  991.0,  992.0,  993.0,  994.0,  995.0,  996.0,  997.0,\n               998.0,  999.0],\n             dtype='float64', length=1129), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}