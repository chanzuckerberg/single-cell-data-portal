{"uid":"3ca9eb8a36faa9e1","name":"test_type_inference[parameters78]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"392c2ef9e9e315d134a2fafbd7bca1e9","time":{"start":1719335052597,"stop":1719335052599,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1719335037026,"stop":1719335037026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1719335052596,"stop":1719335052596,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"6e810093744b348b","name":"log","source":"6e810093744b348b.txt","type":"text/plain","size":341},{"uid":"9717aaf6acf5dfc1","name":"stderr","source":"9717aaf6acf5dfc1.txt","type":"text/plain","size":852}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1719335052599,"stop":1719335052599,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"007575652fd3"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0    0.0\n1    1.0\n2    2.0\ndtype: category\nCategories (3, float64): [0.0, 1.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"86b273bc06f0d5bd","status":"passed","time":{"start":1719335052578,"stop":1719335052579,"duration":1}},{"uid":"e0f0d5fe5365c7e2","status":"passed","time":{"start":1719335052559,"stop":1719335052560,"duration":1}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":7},"items":[{"uid":"b936c933b7a10d34","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20911//#testresult/b936c933b7a10d34","status":"passed","time":{"start":1719270612838,"stop":1719270612839,"duration":1}},{"uid":"756335a4a84f77a2","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20910//#testresult/756335a4a84f77a2","status":"passed","time":{"start":1719270571255,"stop":1719270571256,"duration":1}},{"uid":"e6b2a84487730e59","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20907//#testresult/e6b2a84487730e59","status":"passed","time":{"start":1719266525384,"stop":1719266525385,"duration":1}},{"uid":"44bd8b315053dcdc","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20894//#testresult/44bd8b315053dcdc","status":"passed","time":{"start":1718992365830,"stop":1718992365831,"duration":1}},{"uid":"edba995364f7eac0","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20889//#testresult/edba995364f7eac0","status":"passed","time":{"start":1718988863005,"stop":1718988863006,"duration":1}},{"uid":"178d2f41d1fab7c1","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20887//#testresult/178d2f41d1fab7c1","status":"passed","time":{"start":1718925650057,"stop":1718925650058,"duration":1}}]},"tags":[]},"source":"3ca9eb8a36faa9e1.json","parameterValues":["{'data': 0    0.0\n1    1.0\n2    2.0\ndtype: category\nCategories (3, float64): [0.0, 1.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}