{"uid":"46fcb5c7ca9d9425","name":"test_type_inference[parameters102]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"bd6bb36a062eca934b7d44be79609512","time":{"start":1719335052735,"stop":1719335052736,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1719335037026,"stop":1719335037026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1719335052733,"stop":1719335052733,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"d2d38a98841daeb1","name":"log","source":"d2d38a98841daeb1.txt","type":"text/plain","size":341},{"uid":"49a51ea897972121","name":"stderr","source":"49a51ea897972121.txt","type":"text/plain","size":852}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1719335052736,"stop":1719335052736,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"007575652fd3"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': [0.0, 1.0, NaN]\nCategories (2, float64): [0.0, 1.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1c6ba823a6e7f2dd","status":"passed","time":{"start":1719335052723,"stop":1719335052724,"duration":1}},{"uid":"13bc15c5628c6fc0","status":"passed","time":{"start":1719335052710,"stop":1719335052711,"duration":1}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":7},"items":[{"uid":"a0e16eebeb6980ae","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20911//#testresult/a0e16eebeb6980ae","status":"passed","time":{"start":1719270612963,"stop":1719270612964,"duration":1}},{"uid":"6a4ccf209f152b1e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20910//#testresult/6a4ccf209f152b1e","status":"passed","time":{"start":1719270571378,"stop":1719270571379,"duration":1}},{"uid":"45e61aabf5920735","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20907//#testresult/45e61aabf5920735","status":"passed","time":{"start":1719266525509,"stop":1719266525510,"duration":1}},{"uid":"993e94ea1988ef28","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20894//#testresult/993e94ea1988ef28","status":"passed","time":{"start":1718992365955,"stop":1718992365956,"duration":1}},{"uid":"e6e4af6be6e4e916","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20889//#testresult/e6e4af6be6e4e916","status":"passed","time":{"start":1718988863129,"stop":1718988863130,"duration":1}},{"uid":"41ea9cee51e3c13c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20887//#testresult/41ea9cee51e3c13c","status":"passed","time":{"start":1718925650185,"stop":1718925650186,"duration":1}}]},"tags":[]},"source":"46fcb5c7ca9d9425.json","parameterValues":["{'data': [0.0, 1.0, NaN]\nCategories (2, float64): [0.0, 1.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}