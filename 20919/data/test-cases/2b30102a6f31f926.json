{"uid":"2b30102a6f31f926","name":"test_type_inference[parameters21]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"2717a53020ec301ee147455ed0d4373e","time":{"start":1719335052340,"stop":1719335052340,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1719335037026,"stop":1719335037026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1719335052339,"stop":1719335052339,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1719335052340,"stop":1719335052340,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"007575652fd3"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': <Compressed Sparse Row sparse matrix of dtype 'int32'\n\twith 0 stored elements and shape (10, 100)>, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":4},"items":[{"uid":"83a0135909ba8684","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20911//#testresult/83a0135909ba8684","status":"passed","time":{"start":1719270612589,"stop":1719270612589,"duration":0}},{"uid":"b96313b109d85217","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20910//#testresult/b96313b109d85217","status":"passed","time":{"start":1719270571017,"stop":1719270571017,"duration":0}},{"uid":"d6f64a5d3529800e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20907//#testresult/d6f64a5d3529800e","status":"passed","time":{"start":1719266525140,"stop":1719266525141,"duration":1}}]},"tags":[]},"source":"2b30102a6f31f926.json","parameterValues":["{'data': <Compressed Sparse Row sparse matrix of dtype 'int32'\n\twith 0 stored elements and shape (10, 100)>, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}