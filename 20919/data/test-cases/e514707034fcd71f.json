{"uid":"e514707034fcd71f","name":"test_type_inference[parameters47]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"df8a459018d7ca6e8481573698565125","time":{"start":1719335052458,"stop":1719335052459,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1719335037026,"stop":1719335037026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1719335052456,"stop":1719335052456,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"fc373cc5bfc3adb0","name":"log","source":"fc373cc5bfc3adb0.txt","type":"text/plain","size":341},{"uid":"a4b3c378122d9a97","name":"stderr","source":"a4b3c378122d9a97.txt","type":"text/plain","size":852}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1719335052459,"stop":1719335052459,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"007575652fd3"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0      -128.0\n1      -127.0\n2      -126.0\n3      -125.0\n4      -124.0\n        ...  \n1123    995.0\n1124    996.0\n1125    997.0\n1126    998.0\n1127    999.0\nLength: 1128, dtype: float64, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":7},"items":[{"uid":"1f10bd4ebb9935b9","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20911//#testresult/1f10bd4ebb9935b9","status":"passed","time":{"start":1719270612704,"stop":1719270612705,"duration":1}},{"uid":"26257e9ffc416142","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20910//#testresult/26257e9ffc416142","status":"passed","time":{"start":1719270571127,"stop":1719270571128,"duration":1}},{"uid":"4ca3f751c056903a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20907//#testresult/4ca3f751c056903a","status":"passed","time":{"start":1719266525252,"stop":1719266525253,"duration":1}},{"uid":"cd8c5d60db9abb54","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20894//#testresult/cd8c5d60db9abb54","status":"passed","time":{"start":1718992365700,"stop":1718992365701,"duration":1}},{"uid":"3f11684de2f62731","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20889//#testresult/3f11684de2f62731","status":"passed","time":{"start":1718988862875,"stop":1718988862875,"duration":0}},{"uid":"6b287eeb970bdff1","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20887//#testresult/6b287eeb970bdff1","status":"passed","time":{"start":1718925649927,"stop":1718925649928,"duration":1}}]},"tags":[]},"source":"e514707034fcd71f.json","parameterValues":["{'data': 0      -128.0\n1      -127.0\n2      -126.0\n3      -125.0\n4      -124.0\n        ...  \n1123    995.0\n1124    996.0\n1125    997.0\n1126    998.0\n1127    999.0\nLength: 1128, dtype: float64, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}