{"uid":"7dbbac6bd7367643","name":"test_type_inference[parameters45]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"3d10d447330d03e8ea7986dcf0924706","time":{"start":1744404330137,"stop":1744404330137,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744404319569,"stop":1744404319569,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744404330136,"stop":1744404330136,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"c5885914b2e7323f","name":"log","source":"c5885914b2e7323f.txt","type":"text/plain","size":341},{"uid":"f13c3bd47d4b05b0","name":"stdout","source":"f13c3bd47d4b05b0.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1744404330138,"stop":1744404330138,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"313fe7888594"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': <Compressed Sparse Row sparse matrix of dtype 'float64'\n\twith 0 stored elements and shape (10, 100)>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":3},"items":[{"uid":"47a38d4a845014cb","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24012//#testresult/47a38d4a845014cb","status":"passed","time":{"start":1744402200214,"stop":1744402200214,"duration":0}},{"uid":"94ecf449d81e9868","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24009//#testresult/94ecf449d81e9868","status":"passed","time":{"start":1744400192612,"stop":1744400192613,"duration":1}}]},"tags":[]},"source":"7dbbac6bd7367643.json","parameterValues":["{'data': <Compressed Sparse Row sparse matrix of dtype 'float64'\n\twith 0 stored elements and shape (10, 100)>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}