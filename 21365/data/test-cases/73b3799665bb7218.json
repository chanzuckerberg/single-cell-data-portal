{"uid":"73b3799665bb7218","name":"test_type_inference[parameters19]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"6dfaec1d71c9e081c79922e8237993cb","time":{"start":1720651445723,"stop":1720651445724,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720651386045,"stop":1720651386045,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"caplog","time":{"start":1720651445722,"stop":1720651445722,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"afterStages":[{"name":"caplog::0","time":{"start":1720651445724,"stop":1720651445724,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"a8c7502adc05"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0        0\n1        1\n2        2\n3        3\n4        4\n      ... \n995    995\n996    996\n997    997\n998    998\n999    999\nLength: 1000, dtype: int32, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"a7d34d4ba2fee4a1","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21361//#testresult/a7d34d4ba2fee4a1","status":"passed","time":{"start":1720648366782,"stop":1720648366782,"duration":0}},{"uid":"6f5749a53b7e3768","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21352//#testresult/6f5749a53b7e3768","status":"passed","time":{"start":1720647469481,"stop":1720647469481,"duration":0}},{"uid":"be5b9d2cff1c0a53","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21351//#testresult/be5b9d2cff1c0a53","status":"passed","time":{"start":1720647304523,"stop":1720647304524,"duration":1}},{"uid":"a9bcea858085deb0","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21350//#testresult/a9bcea858085deb0","status":"passed","time":{"start":1720646951764,"stop":1720646951764,"duration":0}},{"uid":"61dea60da8c3c755","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21348//#testresult/61dea60da8c3c755","status":"passed","time":{"start":1720646550142,"stop":1720646550142,"duration":0}},{"uid":"d3bba729ad24ce75","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21341//#testresult/d3bba729ad24ce75","status":"passed","time":{"start":1720640018257,"stop":1720640018258,"duration":1}},{"uid":"fef535f4a945a1ca","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21340//#testresult/fef535f4a945a1ca","status":"passed","time":{"start":1720638027616,"stop":1720638027617,"duration":1}},{"uid":"e236b741b7e56ff1","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21339//#testresult/e236b741b7e56ff1","status":"passed","time":{"start":1720637367673,"stop":1720637367674,"duration":1}},{"uid":"6fc0b5d5efd0846b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21338//#testresult/6fc0b5d5efd0846b","status":"passed","time":{"start":1720637236398,"stop":1720637236399,"duration":1}}]},"tags":[]},"source":"73b3799665bb7218.json","parameterValues":["{'data': 0        0\n1        1\n2        2\n3        3\n4        4\n      ... \n995    995\n996    996\n997    997\n998    998\n999    999\nLength: 1000, dtype: int32, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}