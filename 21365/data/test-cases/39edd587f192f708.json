{"uid":"39edd587f192f708","name":"test_type_inference[parameters21]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"79f34165ef4843922d0499993d007cef","time":{"start":1720651445730,"stop":1720651445731,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720651386045,"stop":1720651386045,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"caplog","time":{"start":1720651445730,"stop":1720651445730,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"afterStages":[{"name":"caplog::0","time":{"start":1720651445731,"stop":1720651445731,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"a8c7502adc05"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': <10x100 sparse matrix of type '<class 'numpy.int32'>'\n\twith 0 stored elements in Compressed Sparse Row format>, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"c21943e5df03c527","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21361//#testresult/c21943e5df03c527","status":"passed","time":{"start":1720648366789,"stop":1720648366790,"duration":1}},{"uid":"297c55dc2bf34e0e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21352//#testresult/297c55dc2bf34e0e","status":"passed","time":{"start":1720647469488,"stop":1720647469488,"duration":0}},{"uid":"827f0a8b7f6b67ce","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21351//#testresult/827f0a8b7f6b67ce","status":"passed","time":{"start":1720647304531,"stop":1720647304531,"duration":0}},{"uid":"53b9ffa0439d1f9f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21350//#testresult/53b9ffa0439d1f9f","status":"passed","time":{"start":1720646951771,"stop":1720646951771,"duration":0}},{"uid":"f002d9cc619d22ce","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21348//#testresult/f002d9cc619d22ce","status":"passed","time":{"start":1720646550149,"stop":1720646550149,"duration":0}},{"uid":"93000cce7c32cf2a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21341//#testresult/93000cce7c32cf2a","status":"passed","time":{"start":1720640018264,"stop":1720640018265,"duration":1}},{"uid":"2a4a3aec651c1aee","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21340//#testresult/2a4a3aec651c1aee","status":"passed","time":{"start":1720638027623,"stop":1720638027624,"duration":1}},{"uid":"898aafa4ff2d2c96","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21339//#testresult/898aafa4ff2d2c96","status":"passed","time":{"start":1720637367681,"stop":1720637367681,"duration":0}},{"uid":"892027e3a905574e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21338//#testresult/892027e3a905574e","status":"passed","time":{"start":1720637236405,"stop":1720637236406,"duration":1}}]},"tags":[]},"source":"39edd587f192f708.json","parameterValues":["{'data': <10x100 sparse matrix of type '<class 'numpy.int32'>'\n\twith 0 stored elements in Compressed Sparse Row format>, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}