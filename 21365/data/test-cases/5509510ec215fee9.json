{"uid":"5509510ec215fee9","name":"test_type_inference[parameters29]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"3dbfb580324b181a5e4edb9a3609b8df","time":{"start":1720651445768,"stop":1720651445769,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720651386045,"stop":1720651386045,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"caplog","time":{"start":1720651445768,"stop":1720651445768,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"afterStages":[{"name":"caplog::0","time":{"start":1720651445769,"stop":1720651445769,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"a8c7502adc05"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': <10x100 sparse matrix of type '<class 'numpy.int64'>'\n\twith 0 stored elements in Compressed Sparse Row format>, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"ed9dbda2acf97ff1","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21361//#testresult/ed9dbda2acf97ff1","status":"passed","time":{"start":1720648366827,"stop":1720648366828,"duration":1}},{"uid":"ff2777e97831ef41","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21352//#testresult/ff2777e97831ef41","status":"passed","time":{"start":1720647469526,"stop":1720647469527,"duration":1}},{"uid":"67a3bdc23f2f556f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21351//#testresult/67a3bdc23f2f556f","status":"passed","time":{"start":1720647304569,"stop":1720647304569,"duration":0}},{"uid":"47be550b89f28863","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21350//#testresult/47be550b89f28863","status":"passed","time":{"start":1720646951808,"stop":1720646951809,"duration":1}},{"uid":"12d6b1d6aa5ba37d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21348//#testresult/12d6b1d6aa5ba37d","status":"passed","time":{"start":1720646550187,"stop":1720646550187,"duration":0}},{"uid":"2e5e94d765fd880e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21341//#testresult/2e5e94d765fd880e","status":"passed","time":{"start":1720640018303,"stop":1720640018303,"duration":0}},{"uid":"94b89dc4fbba0024","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21340//#testresult/94b89dc4fbba0024","status":"passed","time":{"start":1720638027663,"stop":1720638027663,"duration":0}},{"uid":"722bc0bfaa744320","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21339//#testresult/722bc0bfaa744320","status":"passed","time":{"start":1720637367719,"stop":1720637367719,"duration":0}},{"uid":"800b38bbc9aa7296","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21338//#testresult/800b38bbc9aa7296","status":"passed","time":{"start":1720637236443,"stop":1720637236444,"duration":1}}]},"tags":[]},"source":"5509510ec215fee9.json","parameterValues":["{'data': <10x100 sparse matrix of type '<class 'numpy.int64'>'\n\twith 0 stored elements in Compressed Sparse Row format>, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}