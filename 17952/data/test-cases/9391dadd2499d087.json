{"uid":"9391dadd2499d087","name":"test_type_inference[parameters9]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"91a0c27d484ca26f823edd37a9d38ae8","time":{"start":1702935291342,"stop":1702935291342,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1702935277070,"stop":1702935277071,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1702935291341,"stop":1702935291342,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1702935291343,"stop":1702935291343,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"fca9afe5f917"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': <10x100 sparse matrix of type '<class 'numpy.uint8'>'\n\twith 0 stored elements in Compressed Sparse Row format>, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":19,"unknown":0,"total":19},"items":[{"uid":"d10724b5fb75afe9","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17950//#testresult/d10724b5fb75afe9","status":"passed","time":{"start":1702934564169,"stop":1702934564170,"duration":1}},{"uid":"a39cc7bc80b8ec72","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17949//#testresult/a39cc7bc80b8ec72","status":"passed","time":{"start":1702934418415,"stop":1702934418415,"duration":0}},{"uid":"edb4d54386f96d6","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17948//#testresult/edb4d54386f96d6","status":"passed","time":{"start":1702933816767,"stop":1702933816768,"duration":1}},{"uid":"788c01ac98c94b7b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17947//#testresult/788c01ac98c94b7b","status":"passed","time":{"start":1702933176278,"stop":1702933176278,"duration":0}},{"uid":"1e35e9a20c21a10f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17946//#testresult/1e35e9a20c21a10f","status":"passed","time":{"start":1702931716987,"stop":1702931716987,"duration":0}},{"uid":"42d8afd77844649b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17944//#testresult/42d8afd77844649b","status":"passed","time":{"start":1702931120071,"stop":1702931120071,"duration":0}},{"uid":"a4c356bbab88849a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17943//#testresult/a4c356bbab88849a","status":"passed","time":{"start":1702931103557,"stop":1702931103557,"duration":0}},{"uid":"40db1afd8126862a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17942//#testresult/40db1afd8126862a","status":"passed","time":{"start":1702930348305,"stop":1702930348305,"duration":0}},{"uid":"cb70d9cd6529f8dc","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17941//#testresult/cb70d9cd6529f8dc","status":"passed","time":{"start":1702928944309,"stop":1702928944310,"duration":1}},{"uid":"ddbd8936e2544764","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17940//#testresult/ddbd8936e2544764","status":"passed","time":{"start":1702928465637,"stop":1702928465638,"duration":1}},{"uid":"3cf522e1c89bef13","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17939//#testresult/3cf522e1c89bef13","status":"passed","time":{"start":1702928455060,"stop":1702928455060,"duration":0}},{"uid":"729b4b11f612e892","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17938//#testresult/729b4b11f612e892","status":"passed","time":{"start":1702927925963,"stop":1702927925964,"duration":1}},{"uid":"f442ff0351c5cc95","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17937//#testresult/f442ff0351c5cc95","status":"passed","time":{"start":1702927371907,"stop":1702927371907,"duration":0}},{"uid":"5793edfe1c7d8961","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17936//#testresult/5793edfe1c7d8961","status":"passed","time":{"start":1702926366246,"stop":1702926366247,"duration":1}},{"uid":"5f872dfaeba5e444","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17935//#testresult/5f872dfaeba5e444","status":"passed","time":{"start":1702925518953,"stop":1702925518954,"duration":1}},{"uid":"f173e20263b30e99","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17934//#testresult/f173e20263b30e99","status":"passed","time":{"start":1702925452740,"stop":1702925452740,"duration":0}},{"uid":"a860c96ae437211e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17933//#testresult/a860c96ae437211e","status":"passed","time":{"start":1702924127911,"stop":1702924127912,"duration":1}},{"uid":"55e3e768705e63f3","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17882//#testresult/55e3e768705e63f3","status":"passed","time":{"start":1702513219141,"stop":1702513219142,"duration":1}}]},"tags":[]},"source":"9391dadd2499d087.json","parameterValues":["{'data': <10x100 sparse matrix of type '<class 'numpy.uint8'>'\n\twith 0 stored elements in Compressed Sparse Row format>, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}