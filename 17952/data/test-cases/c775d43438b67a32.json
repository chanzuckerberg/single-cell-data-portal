{"uid":"c775d43438b67a32","name":"test_type_inference[parameters29]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"be600f75fdf7027fe8fffa382f2a86d6","time":{"start":1702935291439,"stop":1702935291439,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1702935277070,"stop":1702935277071,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1702935291438,"stop":1702935291438,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1702935291439,"stop":1702935291439,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"fca9afe5f917"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': <10x100 sparse matrix of type '<class 'numpy.int64'>'\n\twith 0 stored elements in Compressed Sparse Row format>, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":19,"unknown":0,"total":19},"items":[{"uid":"8b80d625adfc0925","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17950//#testresult/8b80d625adfc0925","status":"passed","time":{"start":1702934564266,"stop":1702934564267,"duration":1}},{"uid":"e1e132da95c624a4","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17949//#testresult/e1e132da95c624a4","status":"passed","time":{"start":1702934418512,"stop":1702934418513,"duration":1}},{"uid":"9c9faa66b8fc1d60","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17948//#testresult/9c9faa66b8fc1d60","status":"passed","time":{"start":1702933816864,"stop":1702933816864,"duration":0}},{"uid":"b642b5972fc581ee","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17947//#testresult/b642b5972fc581ee","status":"passed","time":{"start":1702933176377,"stop":1702933176377,"duration":0}},{"uid":"7c2d2fd90e82a80d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17946//#testresult/7c2d2fd90e82a80d","status":"passed","time":{"start":1702931717084,"stop":1702931717084,"duration":0}},{"uid":"6b89dd034977a0c4","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17944//#testresult/6b89dd034977a0c4","status":"passed","time":{"start":1702931120170,"stop":1702931120170,"duration":0}},{"uid":"9a96cbb42f5d746e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17943//#testresult/9a96cbb42f5d746e","status":"passed","time":{"start":1702931103657,"stop":1702931103657,"duration":0}},{"uid":"b33f386a64fbfb6b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17942//#testresult/b33f386a64fbfb6b","status":"passed","time":{"start":1702930348406,"stop":1702930348407,"duration":1}},{"uid":"218c2468850d7a8","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17941//#testresult/218c2468850d7a8","status":"passed","time":{"start":1702928944409,"stop":1702928944410,"duration":1}},{"uid":"948f19dd50bdc8f8","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17940//#testresult/948f19dd50bdc8f8","status":"passed","time":{"start":1702928465735,"stop":1702928465736,"duration":1}},{"uid":"ef7960647e2fabf7","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17939//#testresult/ef7960647e2fabf7","status":"passed","time":{"start":1702928455157,"stop":1702928455157,"duration":0}},{"uid":"e07eb12371b9d8c4","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17938//#testresult/e07eb12371b9d8c4","status":"passed","time":{"start":1702927926060,"stop":1702927926061,"duration":1}},{"uid":"7d33d75cae1c4f6e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17937//#testresult/7d33d75cae1c4f6e","status":"passed","time":{"start":1702927372008,"stop":1702927372009,"duration":1}},{"uid":"236e0bb2cb0b4c99","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17936//#testresult/236e0bb2cb0b4c99","status":"passed","time":{"start":1702926366346,"stop":1702926366346,"duration":0}},{"uid":"2892f4c73192a8bd","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17935//#testresult/2892f4c73192a8bd","status":"passed","time":{"start":1702925519050,"stop":1702925519050,"duration":0}},{"uid":"ac6d0a091c3e7303","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17934//#testresult/ac6d0a091c3e7303","status":"passed","time":{"start":1702925452837,"stop":1702925452837,"duration":0}},{"uid":"ff9d2830572fff62","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17933//#testresult/ff9d2830572fff62","status":"passed","time":{"start":1702924128009,"stop":1702924128010,"duration":1}},{"uid":"541a3af84913494b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17882//#testresult/541a3af84913494b","status":"passed","time":{"start":1702513219234,"stop":1702513219235,"duration":1}}]},"tags":[]},"source":"c775d43438b67a32.json","parameterValues":["{'data': <10x100 sparse matrix of type '<class 'numpy.int64'>'\n\twith 0 stored elements in Compressed Sparse Row format>, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}