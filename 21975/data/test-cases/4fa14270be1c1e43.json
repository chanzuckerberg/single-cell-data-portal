{"uid":"4fa14270be1c1e43","name":"test_type_inference[parameters39]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"16e5017f65306b44b448943cbe14cfd6","time":{"start":1726169838406,"stop":1726169838407,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1726169790052,"stop":1726169790052,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1726169838406,"stop":1726169838406,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1726169838407,"stop":1726169838407,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"e34d7d4deb9d"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': <Compressed Sparse Row sparse matrix of dtype 'float32'\n\twith 0 stored elements and shape (10, 100)>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': None}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":19,"unknown":0,"total":19},"items":[{"uid":"e6e5da7f8717a078","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21968//#testresult/e6e5da7f8717a078","status":"passed","time":{"start":1726167554357,"stop":1726167554357,"duration":0}},{"uid":"7eaecde2f2063591","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21965//#testresult/7eaecde2f2063591","status":"passed","time":{"start":1726167312663,"stop":1726167312663,"duration":0}},{"uid":"d585bb37a53cac33","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21964//#testresult/d585bb37a53cac33","status":"passed","time":{"start":1726155622737,"stop":1726155622737,"duration":0}},{"uid":"c07c160f85f96807","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21959//#testresult/c07c160f85f96807","status":"passed","time":{"start":1726151975723,"stop":1726151975723,"duration":0}},{"uid":"fba5ac121dcd735e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21936//#testresult/fba5ac121dcd735e","status":"passed","time":{"start":1725551353371,"stop":1725551353371,"duration":0}},{"uid":"e12d20ae385dc7b1","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21927//#testresult/e12d20ae385dc7b1","status":"passed","time":{"start":1725474430730,"stop":1725474430730,"duration":0}},{"uid":"98649479b09a2d1a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21926//#testresult/98649479b09a2d1a","status":"passed","time":{"start":1725473428755,"stop":1725473428756,"duration":1}},{"uid":"5831ccec5d2d1b28","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21906//#testresult/5831ccec5d2d1b28","status":"passed","time":{"start":1724961106703,"stop":1724961106703,"duration":0}},{"uid":"163c1a45dfe299c4","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21905//#testresult/163c1a45dfe299c4","status":"passed","time":{"start":1724897025704,"stop":1724897025704,"duration":0}},{"uid":"1758455caca74ba7","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21904//#testresult/1758455caca74ba7","status":"passed","time":{"start":1724893182276,"stop":1724893182276,"duration":0}},{"uid":"10db3f49a66b6b88","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21903//#testresult/10db3f49a66b6b88","status":"passed","time":{"start":1724891533625,"stop":1724891533625,"duration":0}},{"uid":"4163739730c4ebea","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21898//#testresult/4163739730c4ebea","status":"passed","time":{"start":1724878457724,"stop":1724878457725,"duration":1}},{"uid":"71c8361fe9fbbcec","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21890//#testresult/71c8361fe9fbbcec","status":"passed","time":{"start":1724781301887,"stop":1724781301887,"duration":0}},{"uid":"ad6e88176d4541b6","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21879//#testresult/ad6e88176d4541b6","status":"passed","time":{"start":1724687441429,"stop":1724687441429,"duration":0}},{"uid":"2d5a863f1d8edd6b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21867//#testresult/2d5a863f1d8edd6b","status":"passed","time":{"start":1724352832038,"stop":1724352832039,"duration":1}},{"uid":"75b3e9aaa00ba66f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21860//#testresult/75b3e9aaa00ba66f","status":"passed","time":{"start":1724286703384,"stop":1724286703384,"duration":0}},{"uid":"b7b5b170a2f4aa6","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21859//#testresult/b7b5b170a2f4aa6","status":"passed","time":{"start":1724285181837,"stop":1724285181838,"duration":1}},{"uid":"910ffebcb96368a2","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21857//#testresult/910ffebcb96368a2","status":"passed","time":{"start":1724281806629,"stop":1724281806629,"duration":0}}]},"tags":[]},"source":"4fa14270be1c1e43.json","parameterValues":["{'data': <Compressed Sparse Row sparse matrix of dtype 'float32'\n\twith 0 stored elements and shape (10, 100)>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': None}"]}