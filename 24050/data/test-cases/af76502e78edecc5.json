{"uid":"af76502e78edecc5","name":"test_type_inference[parameters8]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"4994ee59fa5fad6f40ab516b9729d63f","time":{"start":1744670143950,"stop":1744670143950,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744670133838,"stop":1744670133838,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744670143949,"stop":1744670143949,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1744670143951,"stop":1744670143951,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"7e1f32e2b4fe"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': Index([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,\n       ...\n       222, 223, 224, 225, 226, 227, 228, 229, 230, 231],\n      dtype='uint8', length=1000), 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":19,"unknown":0,"total":19},"items":[{"uid":"3089a2fd41d9779b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24049//#testresult/3089a2fd41d9779b","status":"passed","time":{"start":1744669032144,"stop":1744669032144,"duration":0}},{"uid":"98085b6400cfebb8","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24048//#testresult/98085b6400cfebb8","status":"passed","time":{"start":1744665022892,"stop":1744665022893,"duration":1}},{"uid":"c8c7f9a2adb3e8c3","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24047//#testresult/c8c7f9a2adb3e8c3","status":"passed","time":{"start":1744663559831,"stop":1744663559831,"duration":0}},{"uid":"542387e5445eebb4","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24043//#testresult/542387e5445eebb4","status":"passed","time":{"start":1744657957834,"stop":1744657957834,"duration":0}},{"uid":"92b0d50e14b7f042","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24042//#testresult/92b0d50e14b7f042","status":"passed","time":{"start":1744656707608,"stop":1744656707608,"duration":0}},{"uid":"d3ca70d467a8c6ef","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24041//#testresult/d3ca70d467a8c6ef","status":"passed","time":{"start":1744654734406,"stop":1744654734407,"duration":1}},{"uid":"f2f8fde28f59f4e7","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24039//#testresult/f2f8fde28f59f4e7","status":"passed","time":{"start":1744652736639,"stop":1744652736639,"duration":0}},{"uid":"ae0234735dd383b0","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24038//#testresult/ae0234735dd383b0","status":"passed","time":{"start":1744647656116,"stop":1744647656117,"duration":1}},{"uid":"11ddded35d04454","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24037//#testresult/11ddded35d04454","status":"passed","time":{"start":1744647589902,"stop":1744647589903,"duration":1}},{"uid":"dd2fc0e0e91a5b92","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24036//#testresult/dd2fc0e0e91a5b92","status":"passed","time":{"start":1744646979431,"stop":1744646979432,"duration":1}},{"uid":"a2acca621025a3bb","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24034//#testresult/a2acca621025a3bb","status":"passed","time":{"start":1744645890900,"stop":1744645890900,"duration":0}},{"uid":"89f83fde5d99ee28","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24033//#testresult/89f83fde5d99ee28","status":"passed","time":{"start":1744643892330,"stop":1744643892331,"duration":1}},{"uid":"ea99a5f07cfdffea","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24023//#testresult/ea99a5f07cfdffea","status":"passed","time":{"start":1744637601546,"stop":1744637601547,"duration":1}},{"uid":"273ea2fa98445150","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24017//#testresult/273ea2fa98445150","status":"passed","time":{"start":1744407043478,"stop":1744407043478,"duration":0}},{"uid":"abaea951ab3c15a9","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24016//#testresult/abaea951ab3c15a9","status":"passed","time":{"start":1744406937036,"stop":1744406937037,"duration":1}},{"uid":"f8aa22e57072d762","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24015//#testresult/f8aa22e57072d762","status":"passed","time":{"start":1744404329962,"stop":1744404329963,"duration":1}},{"uid":"76deb123fd7f5450","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24012//#testresult/76deb123fd7f5450","status":"passed","time":{"start":1744402200046,"stop":1744402200046,"duration":0}},{"uid":"4384df7546d3f91d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24009//#testresult/4384df7546d3f91d","status":"passed","time":{"start":1744400192445,"stop":1744400192445,"duration":0}}]},"tags":[]},"source":"af76502e78edecc5.json","parameterValues":["{'data': Index([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,\n       ...\n       222, 223, 224, 225, 226, 227, 228, 229, 230, 231],\n      dtype='uint8', length=1000), 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}