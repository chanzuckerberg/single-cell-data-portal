{"uid":"e427ab1f4045841e","name":"test_type_inference[parameters45]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"9c8c6ce2e491df8e01c209f2d3e410f9","time":{"start":1718925649919,"stop":1718925649920,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1718925635225,"stop":1718925635225,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1718925649919,"stop":1718925649919,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1718925649920,"stop":1718925649920,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"1149b89c9b0d"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': <10x100 sparse matrix of type '<class 'numpy.float32'>'\n\twith 0 stored elements in Compressed Sparse Row format>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': None}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"e427ab1f4045841e.json","parameterValues":["{'data': <10x100 sparse matrix of type '<class 'numpy.float32'>'\n\twith 0 stored elements in Compressed Sparse Row format>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': None}"]}