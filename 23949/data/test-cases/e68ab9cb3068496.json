{"uid":"e68ab9cb3068496","name":"test_type_inference[parameters17]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"1e2b5a7418233228801be484d6af71f8","time":{"start":1744316549152,"stop":1744316549152,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744316539097,"stop":1744316539098,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744316549152,"stop":1744316549152,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1744316549153,"stop":1744316549153,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"73dfda44a693"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': <Compressed Sparse Row sparse matrix of dtype 'uint16'\n\twith 0 stored elements and shape (10, 100)>, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"e68ab9cb3068496.json","parameterValues":["{'data': <Compressed Sparse Row sparse matrix of dtype 'uint16'\n\twith 0 stored elements and shape (10, 100)>, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}