{"uid":"bb52d1da4de3808b","name":"test_type_inference[parameters39]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"467181e15ed93dabdcf09638bc2581ba","time":{"start":1719346305247,"stop":1719346305247,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1719346290729,"stop":1719346290729,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1719346305246,"stop":1719346305246,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1719346305247,"stop":1719346305248,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"fc696d0dc1fa"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': <Compressed Sparse Row sparse matrix of dtype 'float16'\n\twith 0 stored elements and shape (10, 100)>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': None}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"b67ca2fd23d1c3ad","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20929//#testresult/b67ca2fd23d1c3ad","status":"passed","time":{"start":1719346122171,"stop":1719346122172,"duration":1}},{"uid":"2d560dbcb026f474","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20930//#testresult/2d560dbcb026f474","status":"passed","time":{"start":1719346138207,"stop":1719346138207,"duration":0}},{"uid":"4ed8ac15f2704894","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20926//#testresult/4ed8ac15f2704894","status":"passed","time":{"start":1719345895632,"stop":1719345895632,"duration":0}},{"uid":"db2f594a6574160d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20927//#testresult/db2f594a6574160d","status":"passed","time":{"start":1719345908478,"stop":1719345908478,"duration":0}},{"uid":"2e5945879c723f53","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20918//#testresult/2e5945879c723f53","status":"passed","time":{"start":1719334940064,"stop":1719334940065,"duration":1}},{"uid":"6d0363c155037a8","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20919//#testresult/6d0363c155037a8","status":"passed","time":{"start":1719335052426,"stop":1719335052426,"duration":0}},{"uid":"a3642a254ca86dc3","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20911//#testresult/a3642a254ca86dc3","status":"passed","time":{"start":1719270612673,"stop":1719270612674,"duration":1}},{"uid":"8253dfc2324f08f3","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20910//#testresult/8253dfc2324f08f3","status":"passed","time":{"start":1719270571097,"stop":1719270571097,"duration":0}},{"uid":"bc785251c3a414e0","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20907//#testresult/bc785251c3a414e0","status":"passed","time":{"start":1719266525221,"stop":1719266525222,"duration":1}}]},"tags":[]},"source":"bb52d1da4de3808b.json","parameterValues":["{'data': <Compressed Sparse Row sparse matrix of dtype 'float16'\n\twith 0 stored elements and shape (10, 100)>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': None}"]}