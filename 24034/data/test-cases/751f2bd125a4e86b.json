{"uid":"751f2bd125a4e86b","name":"test_type_inference[parameters74]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"ba9a69cef7b63efa0faae3aff0afb245","time":{"start":1744645891185,"stop":1744645891186,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744645880550,"stop":1744645880550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744645891184,"stop":1744645891184,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"e5b33be50869dfd5","name":"log","source":"e5b33be50869dfd5.txt","type":"text/plain","size":341},{"uid":"e701ed47d39ebea5","name":"stdout","source":"e701ed47d39ebea5.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1744645891186,"stop":1744645891186,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"5a4b6a9ff1ae"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, uint8): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"c70a5dcb0578fbd3","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24033//#testresult/c70a5dcb0578fbd3","status":"passed","time":{"start":1744643892625,"stop":1744643892626,"duration":1}},{"uid":"fcc9e62196ff8019","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24023//#testresult/fcc9e62196ff8019","status":"passed","time":{"start":1744637601841,"stop":1744637601842,"duration":1}},{"uid":"78c951f67b9bad6c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24017//#testresult/78c951f67b9bad6c","status":"passed","time":{"start":1744407043761,"stop":1744407043762,"duration":1}},{"uid":"f052565f20a35aa9","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24016//#testresult/f052565f20a35aa9","status":"passed","time":{"start":1744406937325,"stop":1744406937326,"duration":1}},{"uid":"664826e01ca1486e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24015//#testresult/664826e01ca1486e","status":"passed","time":{"start":1744404330259,"stop":1744404330260,"duration":1}},{"uid":"9510c572dd458b90","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24012//#testresult/9510c572dd458b90","status":"passed","time":{"start":1744402200335,"stop":1744402200336,"duration":1}},{"uid":"724aadb39dc951f6","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24009//#testresult/724aadb39dc951f6","status":"passed","time":{"start":1744400192734,"stop":1744400192735,"duration":1}}]},"tags":[]},"source":"751f2bd125a4e86b.json","parameterValues":["{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, uint8): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}