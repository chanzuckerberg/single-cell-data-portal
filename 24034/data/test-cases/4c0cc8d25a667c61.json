{"uid":"4c0cc8d25a667c61","name":"test_type_inference[parameters44]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"28cb2d379c094bce98d650d3df930ca6","time":{"start":1744645891061,"stop":1744645891062,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744645880550,"stop":1744645880550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744645891061,"stop":1744645891061,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"a6b91bb9c63b29a1","name":"log","source":"a6b91bb9c63b29a1.txt","type":"text/plain","size":341},{"uid":"abcc1d2d138508d8","name":"stdout","source":"abcc1d2d138508d8.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1744645891062,"stop":1744645891062,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"5a4b6a9ff1ae"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': array([-1.79769313e+308,  0.00000000e+000,  1.79769313e+308]), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"cc2b7adfa0bae0b9","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24033//#testresult/cc2b7adfa0bae0b9","status":"passed","time":{"start":1744643892497,"stop":1744643892498,"duration":1}},{"uid":"b4716a9640d85a6","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24023//#testresult/b4716a9640d85a6","status":"passed","time":{"start":1744637601714,"stop":1744637601715,"duration":1}},{"uid":"ee3547f064c1a8d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24017//#testresult/ee3547f064c1a8d","status":"passed","time":{"start":1744407043638,"stop":1744407043639,"duration":1}},{"uid":"7108dc12c09ef0ea","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24016//#testresult/7108dc12c09ef0ea","status":"passed","time":{"start":1744406937200,"stop":1744406937201,"duration":1}},{"uid":"ece2eb24a186575e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24015//#testresult/ece2eb24a186575e","status":"passed","time":{"start":1744404330133,"stop":1744404330133,"duration":0}},{"uid":"f336af385fef0fb","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24012//#testresult/f336af385fef0fb","status":"passed","time":{"start":1744402200210,"stop":1744402200210,"duration":0}},{"uid":"ab2b9058c020afed","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24009//#testresult/ab2b9058c020afed","status":"passed","time":{"start":1744400192608,"stop":1744400192609,"duration":1}}]},"tags":[]},"source":"4c0cc8d25a667c61.json","parameterValues":["{'data': array([-1.79769313e+308,  0.00000000e+000,  1.79769313e+308]), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}