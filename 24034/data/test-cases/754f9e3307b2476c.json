{"uid":"754f9e3307b2476c","name":"test_type_inference[parameters43]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"14a0d19db807bd3d81ac0df45ee9c826","time":{"start":1744645891057,"stop":1744645891058,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744645880550,"stop":1744645880550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744645891056,"stop":1744645891056,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"de8b5bcedd3a3c65","name":"log","source":"de8b5bcedd3a3c65.txt","type":"text/plain","size":341},{"uid":"bbc8a682e63f3576","name":"stdout","source":"bbc8a682e63f3576.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1744645891058,"stop":1744645891058,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"5a4b6a9ff1ae"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': array([ nan, -inf,  -1.,  -0.,   0.,   0.,   1.,  inf,  nan]), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"a98e05cd9fe4cf79","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24033//#testresult/a98e05cd9fe4cf79","status":"passed","time":{"start":1744643892493,"stop":1744643892494,"duration":1}},{"uid":"71a8c364c424a664","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24023//#testresult/71a8c364c424a664","status":"passed","time":{"start":1744637601710,"stop":1744637601711,"duration":1}},{"uid":"733529483f9ee9de","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24017//#testresult/733529483f9ee9de","status":"passed","time":{"start":1744407043634,"stop":1744407043635,"duration":1}},{"uid":"cf9144a506a7fb1b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24016//#testresult/cf9144a506a7fb1b","status":"passed","time":{"start":1744406937196,"stop":1744406937197,"duration":1}},{"uid":"ec405e4e46c0065f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24015//#testresult/ec405e4e46c0065f","status":"passed","time":{"start":1744404330128,"stop":1744404330129,"duration":1}},{"uid":"528bdbe946dbc865","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24012//#testresult/528bdbe946dbc865","status":"passed","time":{"start":1744402200205,"stop":1744402200206,"duration":1}},{"uid":"bb9f0f51671ff297","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24009//#testresult/bb9f0f51671ff297","status":"passed","time":{"start":1744400192604,"stop":1744400192605,"duration":1}}]},"tags":[]},"source":"754f9e3307b2476c.json","parameterValues":["{'data': array([ nan, -inf,  -1.,  -0.,   0.,   0.,   1.,  inf,  nan]), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}