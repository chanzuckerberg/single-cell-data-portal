{"uid":"16900b91b1c43858","name":"test_type_inference[parameters72]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"722cf44eb06b0df13e88a6d9c070f977","time":{"start":1744645891175,"stop":1744645891176,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744645880550,"stop":1744645880550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744645891174,"stop":1744645891174,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"f127da023342cb26","name":"log","source":"f127da023342cb26.txt","type":"text/plain","size":341},{"uid":"d38db59d813565a8","name":"stdout","source":"d38db59d813565a8.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1744645891176,"stop":1744645891176,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"5a4b6a9ff1ae"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, int8): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"e4232297dfe2a2cb","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24033//#testresult/e4232297dfe2a2cb","status":"passed","time":{"start":1744643892614,"stop":1744643892615,"duration":1}},{"uid":"3c2fd969efcaa4ac","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24023//#testresult/3c2fd969efcaa4ac","status":"passed","time":{"start":1744637601831,"stop":1744637601832,"duration":1}},{"uid":"e8fd42fc2d39f808","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24017//#testresult/e8fd42fc2d39f808","status":"passed","time":{"start":1744407043751,"stop":1744407043752,"duration":1}},{"uid":"2c1e6604ba0bb51","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24016//#testresult/2c1e6604ba0bb51","status":"passed","time":{"start":1744406937315,"stop":1744406937316,"duration":1}},{"uid":"3e2509139f5a5bfe","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24015//#testresult/3e2509139f5a5bfe","status":"passed","time":{"start":1744404330249,"stop":1744404330250,"duration":1}},{"uid":"280769137f5aa3e9","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24012//#testresult/280769137f5aa3e9","status":"passed","time":{"start":1744402200325,"stop":1744402200326,"duration":1}},{"uid":"3884adbc686521f3","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24009//#testresult/3884adbc686521f3","status":"passed","time":{"start":1744400192724,"stop":1744400192725,"duration":1}}]},"tags":[]},"source":"16900b91b1c43858.json","parameterValues":["{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, int8): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}