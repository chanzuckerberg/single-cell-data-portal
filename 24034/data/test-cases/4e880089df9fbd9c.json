{"uid":"4e880089df9fbd9c","name":"test_type_inference[parameters86]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"d41385f440d575b7c1a2ec762d3f3b29","time":{"start":1744645891245,"stop":1744645891246,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744645880550,"stop":1744645880550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744645891244,"stop":1744645891244,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"825e271dbf567526","name":"log","source":"825e271dbf567526.txt","type":"text/plain","size":341},{"uid":"bb649201b7a1eb4c","name":"stdout","source":"bb649201b7a1eb4c.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1744645891246,"stop":1744645891246,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"5a4b6a9ff1ae"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, uint64): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"bd593cde00db1e6b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24033//#testresult/bd593cde00db1e6b","status":"passed","time":{"start":1744643892686,"stop":1744643892687,"duration":1}},{"uid":"394395b3201eb3d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24023//#testresult/394395b3201eb3d","status":"passed","time":{"start":1744637601901,"stop":1744637601902,"duration":1}},{"uid":"af6a02bbda067338","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24017//#testresult/af6a02bbda067338","status":"passed","time":{"start":1744407043820,"stop":1744407043821,"duration":1}},{"uid":"b55c6ac69a5788cb","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24016//#testresult/b55c6ac69a5788cb","status":"passed","time":{"start":1744406937385,"stop":1744406937386,"duration":1}},{"uid":"5e32c235962aad04","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24015//#testresult/5e32c235962aad04","status":"passed","time":{"start":1744404330320,"stop":1744404330321,"duration":1}},{"uid":"ce35cc5c00880489","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24012//#testresult/ce35cc5c00880489","status":"passed","time":{"start":1744402200396,"stop":1744402200397,"duration":1}},{"uid":"fdfb9203c71bc5fa","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24009//#testresult/fdfb9203c71bc5fa","status":"passed","time":{"start":1744400192795,"stop":1744400192796,"duration":1}}]},"tags":[]},"source":"4e880089df9fbd9c.json","parameterValues":["{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, uint64): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}