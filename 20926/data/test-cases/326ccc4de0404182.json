{"uid":"326ccc4de0404182","name":"test_type_inference[parameters34]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"a65664aeb5832b6e0d1a07f4b4d06e74","time":{"start":1719345895612,"stop":1719345895612,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1719345880689,"stop":1719345880689,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1719345895611,"stop":1719345895611,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1719345895613,"stop":1719345895613,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"9f2386ffc0f9"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': array([-128., -127., -126., ...,  997.,  998.,  999.], dtype=float16), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': None}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"af63af1adfcc3c20","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20927//#testresult/af63af1adfcc3c20","status":"passed","time":{"start":1719345908457,"stop":1719345908457,"duration":0}},{"uid":"cdaa9bddb5430fc2","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20918//#testresult/cdaa9bddb5430fc2","status":"passed","time":{"start":1719334940042,"stop":1719334940042,"duration":0}},{"uid":"bf982b3ebe5d973b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20919//#testresult/bf982b3ebe5d973b","status":"passed","time":{"start":1719335052405,"stop":1719335052405,"duration":0}},{"uid":"384f733f6f92964","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20911//#testresult/384f733f6f92964","status":"passed","time":{"start":1719270612653,"stop":1719270612653,"duration":0}},{"uid":"c1faf954188df612","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20910//#testresult/c1faf954188df612","status":"passed","time":{"start":1719270571077,"stop":1719270571077,"duration":0}},{"uid":"5c7edc4bdcbedd76","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20907//#testresult/5c7edc4bdcbedd76","status":"passed","time":{"start":1719266525201,"stop":1719266525202,"duration":1}},{"uid":"209b1fd563ed3836","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20894//#testresult/209b1fd563ed3836","status":"passed","time":{"start":1718992365651,"stop":1718992365651,"duration":0}},{"uid":"15f2f7c429ddf8aa","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20889//#testresult/15f2f7c429ddf8aa","status":"passed","time":{"start":1718988862825,"stop":1718988862825,"duration":0}},{"uid":"532df2439e5aa546","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20887//#testresult/532df2439e5aa546","status":"passed","time":{"start":1718925649878,"stop":1718925649878,"duration":0}}]},"tags":[]},"source":"326ccc4de0404182.json","parameterValues":["{'data': array([-128., -127., -126., ...,  997.,  998.,  999.], dtype=float16), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': None}"]}