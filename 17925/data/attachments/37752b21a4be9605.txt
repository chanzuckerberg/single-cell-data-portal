DEBUG    numba.core.byteflow:byteflow.py:74 bytecode dump:
>          0	NOP(arg=None, lineno=324)
           2	LOAD_GLOBAL(arg=0, lineno=324)
           4	LOAD_METHOD(arg=1, lineno=324)
           6	LOAD_GLOBAL(arg=2, lineno=324)
           8	LOAD_FAST(arg=3, lineno=324)
          10	CALL_FUNCTION(arg=1, lineno=324)
          12	LOAD_CONST(arg=1, lineno=324)
          14	BINARY_SUBTRACT(arg=None, lineno=324)
          16	CALL_METHOD(arg=1, lineno=324)
          18	GET_ITER(arg=None, lineno=324)
>         20	FOR_ITER(arg=29, lineno=324)
          22	STORE_FAST(arg=4, lineno=324)
          24	LOAD_FAST(arg=2, lineno=325)
          26	LOAD_FAST(arg=3, lineno=325)
          28	LOAD_FAST(arg=4, lineno=325)
          30	BINARY_SUBSCR(arg=None, lineno=325)
          32	LOAD_FAST(arg=3, lineno=325)
          34	LOAD_FAST(arg=4, lineno=325)
          36	LOAD_CONST(arg=1, lineno=325)
          38	BINARY_ADD(arg=None, lineno=325)
          40	BINARY_SUBSCR(arg=None, lineno=325)
          42	BUILD_SLICE(arg=2, lineno=325)
          44	BINARY_SUBSCR(arg=None, lineno=325)
          46	STORE_FAST(arg=5, lineno=325)
          48	LOAD_FAST(arg=5, lineno=326)
          50	GET_ITER(arg=None, lineno=326)
>         52	FOR_ITER(arg=12, lineno=326)
          54	STORE_FAST(arg=6, lineno=326)
          56	LOAD_FAST(arg=1, lineno=327)
          58	LOAD_FAST(arg=4, lineno=327)
          60	DUP_TOP_TWO(arg=None, lineno=327)
          62	BINARY_SUBSCR(arg=None, lineno=327)
          64	LOAD_FAST(arg=0, lineno=327)
          66	LOAD_FAST(arg=6, lineno=327)
          68	BINARY_SUBSCR(arg=None, lineno=327)
          70	INPLACE_ADD(arg=None, lineno=327)
          72	ROT_THREE(arg=None, lineno=327)
          74	STORE_SUBSCR(arg=None, lineno=327)
          76	JUMP_ABSOLUTE(arg=27, lineno=327)
>         78	JUMP_ABSOLUTE(arg=11, lineno=326)
>         80	LOAD_CONST(arg=0, lineno=324)
          82	RETURN_VALUE(arg=None, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=0, inst=NOP(arg=None, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=6, inst=LOAD_GLOBAL(arg=2, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$4load_method.1']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=8, inst=LOAD_FAST(arg=3, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$4load_method.1', '$6load_global.2']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=10, inst=CALL_FUNCTION(arg=1, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$4load_method.1', '$6load_global.2', '$linear_indices8.3']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$4load_method.1', '$10call_function.4']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=14, inst=BINARY_SUBTRACT(arg=None, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$4load_method.1', '$10call_function.4', '$const12.5']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=16, inst=CALL_METHOD(arg=1, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$4load_method.1', '$14binary_subtract.6']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=18, inst=GET_ITER(arg=None, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$16call_method.7']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[Edge(pc=20, stack=('$18get_iter.8',), blockstack=(), npush=0)]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=20 nstack_initial=1)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: ['$phi20.0']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=20, inst=FOR_ITER(arg=29, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi20.0']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[Edge(pc=80, stack=(), blockstack=(), npush=0), Edge(pc=22, stack=('$phi20.0', '$20for_iter.2'), blockstack=(), npush=0)]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=80 nstack_initial=0), State(pc_initial=22 nstack_initial=2)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=80, inst=LOAD_CONST(arg=0, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$const80.0']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=22 nstack_initial=2)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: ['$phi22.0', '$phi22.1']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=22, inst=STORE_FAST(arg=4, lineno=324)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$phi22.1']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=28, inst=LOAD_FAST(arg=4, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2', '$linear_indices26.3']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=30, inst=BINARY_SUBSCR(arg=None, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2', '$linear_indices26.3', '$i28.4']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=32, inst=LOAD_FAST(arg=3, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2', '$30binary_subscr.5']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=34, inst=LOAD_FAST(arg=4, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2', '$30binary_subscr.5', '$linear_indices32.6']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2', '$30binary_subscr.5', '$linear_indices32.6', '$i34.7']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=38, inst=BINARY_ADD(arg=None, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2', '$30binary_subscr.5', '$linear_indices32.6', '$i34.7', '$const36.8']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2', '$30binary_subscr.5', '$linear_indices32.6', '$38binary_add.9']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=42, inst=BUILD_SLICE(arg=2, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2', '$30binary_subscr.5', '$40binary_subscr.10']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$descendants_indexes24.2', '$42build_slice.12']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=46, inst=STORE_FAST(arg=5, lineno=325)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$44binary_subscr.13']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=48, inst=LOAD_FAST(arg=5, lineno=326)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=50, inst=GET_ITER(arg=None, lineno=326)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi22.0', '$index48.14']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[Edge(pc=52, stack=('$phi22.0', '$50get_iter.15'), blockstack=(), npush=0)]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=52 nstack_initial=2)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: ['$phi52.0', '$phi52.1']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=52, inst=FOR_ITER(arg=12, lineno=326)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi52.0', '$phi52.1']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[Edge(pc=78, stack=('$phi52.0',), blockstack=(), npush=0), Edge(pc=54, stack=('$phi52.0', '$phi52.1', '$52for_iter.3'), blockstack=(), npush=0)]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=78 nstack_initial=1), State(pc_initial=54 nstack_initial=3)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: ['$phi78.0']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=78, inst=JUMP_ABSOLUTE(arg=11, lineno=326)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi78.0']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[Edge(pc=20, stack=('$phi78.0',), blockstack=(), npush=0)]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=54 nstack_initial=3), State(pc_initial=20 nstack_initial=1)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: ['$phi54.0', '$phi54.1', '$phi54.2']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=54, inst=STORE_FAST(arg=6, lineno=326)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$phi54.2']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=56, inst=LOAD_FAST(arg=1, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=58, inst=LOAD_FAST(arg=4, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$summed56.3']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=60, inst=DUP_TOP_TWO(arg=None, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$summed56.3', '$i58.4']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$summed56.3', '$i58.4', '$60dup_top_two.5', '$60dup_top_two.6']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=64, inst=LOAD_FAST(arg=0, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$summed56.3', '$i58.4', '$62binary_subscr.7']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=66, inst=LOAD_FAST(arg=6, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$summed56.3', '$i58.4', '$62binary_subscr.7', '$array64.8']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$summed56.3', '$i58.4', '$62binary_subscr.7', '$array64.8', '$j66.9']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=70, inst=INPLACE_ADD(arg=None, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$summed56.3', '$i58.4', '$62binary_subscr.7', '$68binary_subscr.10']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=72, inst=ROT_THREE(arg=None, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$summed56.3', '$i58.4', '$70inplace_add.11']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=74, inst=STORE_SUBSCR(arg=None, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1', '$70inplace_add.11', '$summed56.3', '$i58.4']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=76, inst=JUMP_ABSOLUTE(arg=27, lineno=327)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi54.0', '$phi54.1']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[Edge(pc=52, stack=('$phi54.0', '$phi54.1'), blockstack=(), npush=0)]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=20 nstack_initial=1), State(pc_initial=52 nstack_initial=2)])
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=52 nstack_initial=2)])
DEBUG    numba.core.byteflow:byteflow.py:166 -------------------------Prune PHIs-------------------------
DEBUG    numba.core.byteflow:byteflow.py:235 Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=1): {'$phi20.0'},
             State(pc_initial=22 nstack_initial=2): {'$phi22.1'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=54 nstack_initial=3): {'$phi54.2'},
             State(pc_initial=78 nstack_initial=1): set(),
             State(pc_initial=80 nstack_initial=0): set()})
DEBUG    numba.core.byteflow:byteflow.py:192 defmap: {'$phi20.0': State(pc_initial=0 nstack_initial=0),
 '$phi22.1': State(pc_initial=20 nstack_initial=1),
 '$phi52.1': State(pc_initial=22 nstack_initial=2),
 '$phi54.2': State(pc_initial=52 nstack_initial=2)}
DEBUG    numba.core.byteflow:byteflow.py:193 phismap: defaultdict(<class 'set'>,
            {'$phi20.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi78.0', State(pc_initial=78 nstack_initial=1))},
             '$phi22.0': {('$phi20.0', State(pc_initial=20 nstack_initial=1))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi52.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                          ('$phi54.0', State(pc_initial=54 nstack_initial=3))},
             '$phi52.1': {('$50get_iter.15',
                           State(pc_initial=22 nstack_initial=2)),
                          ('$phi54.1', State(pc_initial=54 nstack_initial=3))},
             '$phi54.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi54.1': {('$phi52.1', State(pc_initial=52 nstack_initial=2))},
             '$phi54.2': {('$52for_iter.3',
                           State(pc_initial=52 nstack_initial=2))},
             '$phi78.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))}})
DEBUG    numba.core.byteflow:byteflow.py:214 changing phismap: defaultdict(<class 'set'>,
            {'$phi20.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi22.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi52.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi52.1': {('$50get_iter.15',
                           State(pc_initial=22 nstack_initial=2)),
                          ('$phi52.1', State(pc_initial=52 nstack_initial=2))},
             '$phi54.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi54.1': {('$50get_iter.15',
                           State(pc_initial=22 nstack_initial=2))},
             '$phi54.2': {('$52for_iter.3',
                           State(pc_initial=52 nstack_initial=2))},
             '$phi78.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG    numba.core.byteflow:byteflow.py:214 changing phismap: defaultdict(<class 'set'>,
            {'$phi20.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi52.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50get_iter.15',
                           State(pc_initial=22 nstack_initial=2))},
             '$phi54.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi54.1': {('$50get_iter.15',
                           State(pc_initial=22 nstack_initial=2))},
             '$phi54.2': {('$52for_iter.3',
                           State(pc_initial=52 nstack_initial=2))},
             '$phi78.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG    numba.core.byteflow:byteflow.py:214 changing phismap: defaultdict(<class 'set'>,
            {'$phi20.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi52.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50get_iter.15',
                           State(pc_initial=22 nstack_initial=2))},
             '$phi54.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi54.1': {('$50get_iter.15',
                           State(pc_initial=22 nstack_initial=2))},
             '$phi54.2': {('$52for_iter.3',
                           State(pc_initial=52 nstack_initial=2))},
             '$phi78.0': {('$18get_iter.8',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG    numba.core.byteflow:byteflow.py:223 keep phismap: {'$phi20.0': {('$18get_iter.8', State(pc_initial=0 nstack_initial=0))},
 '$phi22.1': {('$20for_iter.2', State(pc_initial=20 nstack_initial=1))},
 '$phi52.1': {('$50get_iter.15', State(pc_initial=22 nstack_initial=2))},
 '$phi54.2': {('$52for_iter.3', State(pc_initial=52 nstack_initial=2))}}
DEBUG    numba.core.byteflow:byteflow.py:229 new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi20.0': '$18get_iter.8'},
             State(pc_initial=20 nstack_initial=1): {'$phi22.1': '$20for_iter.2'},
             State(pc_initial=22 nstack_initial=2): {'$phi52.1': '$50get_iter.15'},
             State(pc_initial=52 nstack_initial=2): {'$phi54.2': '$52for_iter.3'}})
DEBUG    numba.core.byteflow:byteflow.py:239 ----------------------DONE Prune PHIs-----------------------
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$6load_global.2'}), (8, {'res': '$linear_indices8.3'}), (10, {'func': '$6load_global.2', 'args': ['$linear_indices8.3'], 'res': '$10call_function.4'}), (12, {'res': '$const12.5'}), (14, {'lhs': '$10call_function.4', 'rhs': '$const12.5', 'res': '$14binary_subtract.6'}), (16, {'func': '$4load_method.1', 'args': ['$14binary_subtract.6'], 'res': '$16call_method.7'}), (18, {'value': '$16call_method.7', 'res': '$18get_iter.8'})), outgoing_phis={'$phi20.0': '$18get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={20: ('$18get_iter.8',)})
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=20 nstack_initial=1):
AdaptBlockInfo(insts=((20, {'iterator': '$phi20.0', 'pair': '$20for_iter.1', 'indval': '$20for_iter.2', 'pred': '$20for_iter.3'}),), outgoing_phis={'$phi22.1': '$20for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: (), 22: ('$phi20.0', '$20for_iter.2')})
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=22 nstack_initial=2):
AdaptBlockInfo(insts=((22, {'value': '$phi22.1'}), (24, {'res': '$descendants_indexes24.2'}), (26, {'res': '$linear_indices26.3'}), (28, {'res': '$i28.4'}), (30, {'index': '$i28.4', 'target': '$linear_indices26.3', 'res': '$30binary_subscr.5'}), (32, {'res': '$linear_indices32.6'}), (34, {'res': '$i34.7'}), (36, {'res': '$const36.8'}), (38, {'lhs': '$i34.7', 'rhs': '$const36.8', 'res': '$38binary_add.9'}), (40, {'index': '$38binary_add.9', 'target': '$linear_indices32.6', 'res': '$40binary_subscr.10'}), (42, {'start': '$30binary_subscr.5', 'stop': '$40binary_subscr.10', 'step': None, 'res': '$42build_slice.12', 'slicevar': '$42build_slice.11'}), (44, {'index': '$42build_slice.12', 'target': '$descendants_indexes24.2', 'res': '$44binary_subscr.13'}), (46, {'value': '$44binary_subscr.13'}), (48, {'res': '$index48.14'}), (50, {'value': '$index48.14', 'res': '$50get_iter.15'})), outgoing_phis={'$phi52.1': '$50get_iter.15'}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$phi22.0', '$50get_iter.15')})
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'iterator': '$phi52.1', 'pair': '$52for_iter.2', 'indval': '$52for_iter.3', 'pred': '$52for_iter.4'}),), outgoing_phis={'$phi54.2': '$52for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ('$phi52.0',), 54: ('$phi52.0', '$phi52.1', '$52for_iter.3')})
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=54 nstack_initial=3):
AdaptBlockInfo(insts=((54, {'value': '$phi54.2'}), (56, {'res': '$summed56.3'}), (58, {'res': '$i58.4'}), (60, {'orig': ['$summed56.3', '$i58.4'], 'duped': ['$60dup_top_two.5', '$60dup_top_two.6']}), (62, {'index': '$60dup_top_two.6', 'target': '$60dup_top_two.5', 'res': '$62binary_subscr.7'}), (64, {'res': '$array64.8'}), (66, {'res': '$j66.9'}), (68, {'index': '$j66.9', 'target': '$array64.8', 'res': '$68binary_subscr.10'}), (70, {'lhs': '$62binary_subscr.7', 'rhs': '$68binary_subscr.10', 'res': '$70inplace_add.11'}), (74, {'target': '$summed56.3', 'index': '$i58.4', 'value': '$70inplace_add.11'}), (76, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$phi54.0', '$phi54.1')})
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=78 nstack_initial=1):
AdaptBlockInfo(insts=((78, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={20: ('$phi78.0',)})
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=80 nstack_initial=0):
AdaptBlockInfo(insts=((80, {'res': '$const80.0'}), (82, {'retval': '$const80.0', 'castval': '$82return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG    numba.core.interpreter:interpreter.py:1342 label 0:
    array = arg(0, name=array)               ['array']
    summed = arg(1, name=summed)             ['summed']
    descendants_indexes = arg(2, name=descendants_indexes) ['descendants_indexes']
    linear_indices = arg(3, name=linear_indices) ['linear_indices']
    $2load_global.0 = global(nb: <module 'numba' from '/usr/local/lib/python3.10/dist-packages/numba/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=prange) ['$2load_global.0', '$4load_method.1']
    $6load_global.2 = global(len: <built-in function len>) ['$6load_global.2']
    $10call_function.4 = call $6load_global.2(linear_indices, func=$6load_global.2, args=[Var(linear_indices, rollup.py:324)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$6load_global.2', 'linear_indices']
    $const12.5 = const(int, 1)               ['$const12.5']
    $14binary_subtract.6 = $10call_function.4 - $const12.5 ['$10call_function.4', '$14binary_subtract.6', '$const12.5']
    $16call_method.7 = call $4load_method.1($14binary_subtract.6, func=$4load_method.1, args=[Var($14binary_subtract.6, rollup.py:324)], kws=(), vararg=None, varkwarg=None, target=None) ['$14binary_subtract.6', '$16call_method.7', '$4load_method.1']
    $18get_iter.8 = getiter(value=$16call_method.7) ['$16call_method.7', '$18get_iter.8']
    $phi20.0 = $18get_iter.8                 ['$18get_iter.8', '$phi20.0']
    jump 20                                  []
label 20:
    $20for_iter.1 = iternext(value=$phi20.0) ['$20for_iter.1', '$phi20.0']
    $20for_iter.2 = pair_first(value=$20for_iter.1) ['$20for_iter.1', '$20for_iter.2']
    $20for_iter.3 = pair_second(value=$20for_iter.1) ['$20for_iter.1', '$20for_iter.3']
    $phi22.1 = $20for_iter.2                 ['$20for_iter.2', '$phi22.1']
    branch $20for_iter.3, 22, 80             ['$20for_iter.3']
label 22:
    i = $phi22.1                             ['$phi22.1', 'i']
    $30binary_subscr.5 = getitem(value=linear_indices, index=i, fn=<built-in function getitem>) ['$30binary_subscr.5', 'i', 'linear_indices']
    $const36.8 = const(int, 1)               ['$const36.8']
    $38binary_add.9 = i + $const36.8         ['$38binary_add.9', '$const36.8', 'i']
    $40binary_subscr.10 = getitem(value=linear_indices, index=$38binary_add.9, fn=<built-in function getitem>) ['$38binary_add.9', '$40binary_subscr.10', 'linear_indices']
    $42build_slice.11 = global(slice: <class 'slice'>) ['$42build_slice.11']
    $42build_slice.12 = call $42build_slice.11($30binary_subscr.5, $40binary_subscr.10, func=$42build_slice.11, args=(Var($30binary_subscr.5, rollup.py:325), Var($40binary_subscr.10, rollup.py:325)), kws=(), vararg=None, varkwarg=None, target=None) ['$30binary_subscr.5', '$40binary_subscr.10', '$42build_slice.11', '$42build_slice.12']
    index = getitem(value=descendants_indexes, index=$42build_slice.12, fn=<built-in function getitem>) ['$42build_slice.12', 'descendants_indexes', 'index']
    $50get_iter.15 = getiter(value=index)    ['$50get_iter.15', 'index']
    $phi52.1 = $50get_iter.15                ['$50get_iter.15', '$phi52.1']
    jump 52                                  []
label 52:
    $52for_iter.2 = iternext(value=$phi52.1) ['$52for_iter.2', '$phi52.1']
    $52for_iter.3 = pair_first(value=$52for_iter.2) ['$52for_iter.2', '$52for_iter.3']
    $52for_iter.4 = pair_second(value=$52for_iter.2) ['$52for_iter.2', '$52for_iter.4']
    $phi54.2 = $52for_iter.3                 ['$52for_iter.3', '$phi54.2']
    branch $52for_iter.4, 54, 78             ['$52for_iter.4']
label 54:
    j = $phi54.2                             ['$phi54.2', 'j']
    $62binary_subscr.7 = getitem(value=summed, index=i, fn=<built-in function getitem>) ['$62binary_subscr.7', 'i', 'summed']
    $68binary_subscr.10 = getitem(value=array, index=j, fn=<built-in function getitem>) ['$68binary_subscr.10', 'array', 'j']
    $70inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$62binary_subscr.7, rhs=$68binary_subscr.10, static_lhs=Undefined, static_rhs=Undefined) ['$62binary_subscr.7', '$68binary_subscr.10', '$70inplace_add.11']
    summed[i] = $70inplace_add.11            ['$70inplace_add.11', 'i', 'summed']
    jump 52                                  []
label 78:
    jump 20                                  []
label 80:
    $const80.0 = const(NoneType, None)       ['$const80.0']
    $82return_value.1 = cast(value=$const80.0) ['$82return_value.1', '$const80.0']
    return $82return_value.1                 ['$82return_value.1']

DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 0
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c4cbb2c50>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: array = arg(0, name=array)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: summed = arg(1, name=summed)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: descendants_indexes = arg(2, name=descendants_indexes)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: linear_indices = arg(3, name=linear_indices)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $2load_global.0 = global(nb: <module 'numba' from '/usr/local/lib/python3.10/dist-packages/numba/__init__.py'>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $6load_global.2 = global(len: <built-in function len>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $10call_function.4 = call $6load_global.2(linear_indices, func=$6load_global.2, args=[Var(linear_indices, rollup.py:324)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $const12.5 = const(int, 1)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $14binary_subtract.6 = $10call_function.4 - $const12.5
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $16call_method.7 = call $4load_method.1($14binary_subtract.6, func=$4load_method.1, args=[Var($14binary_subtract.6, rollup.py:324)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $18get_iter.8 = getiter(value=$16call_method.7)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $phi20.0 = $18get_iter.8
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 20
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 20
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c4cbb2c50>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $phi22.1 = $20for_iter.2
DEBUG    numba.core.ssa:ssa.py:193 on stmt: branch $20for_iter.3, 22, 80
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 22
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c4cbb2c50>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: i = $phi22.1
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $30binary_subscr.5 = getitem(value=linear_indices, index=i, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $const36.8 = const(int, 1)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $38binary_add.9 = i + $const36.8
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $40binary_subscr.10 = getitem(value=linear_indices, index=$38binary_add.9, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $42build_slice.11 = global(slice: <class 'slice'>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $42build_slice.12 = call $42build_slice.11($30binary_subscr.5, $40binary_subscr.10, func=$42build_slice.11, args=(Var($30binary_subscr.5, rollup.py:325), Var($40binary_subscr.10, rollup.py:325)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: index = getitem(value=descendants_indexes, index=$42build_slice.12, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $50get_iter.15 = getiter(value=index)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $phi52.1 = $50get_iter.15
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 52
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 52
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c4cbb2c50>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $52for_iter.2 = iternext(value=$phi52.1)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $52for_iter.3 = pair_first(value=$52for_iter.2)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $52for_iter.4 = pair_second(value=$52for_iter.2)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $phi54.2 = $52for_iter.3
DEBUG    numba.core.ssa:ssa.py:193 on stmt: branch $52for_iter.4, 54, 78
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 54
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c4cbb2c50>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: j = $phi54.2
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $62binary_subscr.7 = getitem(value=summed, index=i, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $68binary_subscr.10 = getitem(value=array, index=j, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $70inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$62binary_subscr.7, rhs=$68binary_subscr.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: summed[i] = $70inplace_add.11
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 52
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 78
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c4cbb2c50>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 20
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 80
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c4cbb2c50>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $const80.0 = const(NoneType, None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $82return_value.1 = cast(value=$const80.0)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: return $82return_value.1
DEBUG    numba.core.ssa:ssa.py:154 defs defaultdict(<class 'list'>,
            {'$10call_function.4': [<numba.core.ir.Assign object at 0x7f6c4cbb30a0>],
             '$14binary_subtract.6': [<numba.core.ir.Assign object at 0x7f6c4cbb3370>],
             '$16call_method.7': [<numba.core.ir.Assign object at 0x7f6c4cbb3550>],
             '$18get_iter.8': [<numba.core.ir.Assign object at 0x7f6c4cbb3640>],
             '$20for_iter.1': [<numba.core.ir.Assign object at 0x7f6c4cbb3970>],
             '$20for_iter.2': [<numba.core.ir.Assign object at 0x7f6c4cbb3a90>],
             '$20for_iter.3': [<numba.core.ir.Assign object at 0x7f6c4cbb3bb0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6c4cbb1180>],
             '$30binary_subscr.5': [<numba.core.ir.Assign object at 0x7f6c4cb9c3d0>],
             '$38binary_add.9': [<numba.core.ir.Assign object at 0x7f6c4cb9c910>],
             '$40binary_subscr.10': [<numba.core.ir.Assign object at 0x7f6c4cb9ca90>],
             '$42build_slice.11': [<numba.core.ir.Assign object at 0x7f6c4cb9cbe0>],
             '$42build_slice.12': [<numba.core.ir.Assign object at 0x7f6c4cb9cd00>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x7f6c4cbb1000>],
             '$50get_iter.15': [<numba.core.ir.Assign object at 0x7f6c4cb9d240>],
             '$52for_iter.2': [<numba.core.ir.Assign object at 0x7f6c4cb9d330>],
             '$52for_iter.3': [<numba.core.ir.Assign object at 0x7f6c4cb9d450>],
             '$52for_iter.4': [<numba.core.ir.Assign object at 0x7f6c4cb9d570>],
             '$62binary_subscr.7': [<numba.core.ir.Assign object at 0x7f6c4cb9de10>],
             '$68binary_subscr.10': [<numba.core.ir.Assign object at 0x7f6c4cb9e1d0>],
             '$6load_global.2': [<numba.core.ir.Assign object at 0x7f6c4cbb0e80>],
             '$70inplace_add.11': [<numba.core.ir.Assign object at 0x7f6c4cb9e350>],
             '$82return_value.1': [<numba.core.ir.Assign object at 0x7f6c4cb9e7a0>],
             '$const12.5': [<numba.core.ir.Assign object at 0x7f6c4cbb31c0>],
             '$const36.8': [<numba.core.ir.Assign object at 0x7f6c4cb9c760>],
             '$const80.0': [<numba.core.ir.Assign object at 0x7f6c4cb9e620>],
             '$phi20.0': [<numba.core.ir.Assign object at 0x7f6c4cbb02e0>],
             '$phi22.1': [<numba.core.ir.Assign object at 0x7f6c4cbb38b0>],
             '$phi52.1': [<numba.core.ir.Assign object at 0x7f6c4cbb3820>],
             '$phi54.2': [<numba.core.ir.Assign object at 0x7f6c4cb9d0c0>],
             'array': [<numba.core.ir.Assign object at 0x7f6c4cbb2f80>],
             'descendants_indexes': [<numba.core.ir.Assign object at 0x7f6c4cb51db0>],
             'i': [<numba.core.ir.Assign object at 0x7f6c4cbb3e80>],
             'index': [<numba.core.ir.Assign object at 0x7f6c4cb9ceb0>],
             'j': [<numba.core.ir.Assign object at 0x7f6c4cb9d840>],
             'linear_indices': [<numba.core.ir.Assign object at 0x7f6c4cb51f60>],
             'summed': [<numba.core.ir.Assign object at 0x7f6c4ba2d960>]})
DEBUG    numba.core.ssa:ssa.py:156 SSA violators set()
DEBUG    numba.core.byteflow:byteflow.py:74 bytecode dump:
>          0	NOP(arg=None, lineno=2)
           2	LOAD_GLOBAL(arg=0, lineno=2)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_CONST(arg=1, lineno=2)
           8	BINARY_SUBSCR(arg=None, lineno=2)
          10	LOAD_FAST(arg=0, lineno=2)
          12	LOAD_CONST(arg=2, lineno=2)
          14	BINARY_SUBSCR(arg=None, lineno=2)
          16	LOAD_GLOBAL(arg=1, lineno=2)
          18	LOAD_METHOD(arg=2, lineno=2)
          20	LOAD_CONST(arg=2, lineno=2)
          22	CALL_METHOD(arg=1, lineno=2)
          24	BINARY_ADD(arg=None, lineno=2)
          26	CALL_FUNCTION(arg=2, lineno=2)
          28	GET_ITER(arg=None, lineno=2)
>         30	FOR_ITER(arg=4, lineno=2)
          32	STORE_FAST(arg=5, lineno=2)
          34	LOAD_CONST(arg=1, lineno=3)
          36	STORE_FAST(arg=6, lineno=3)
          38	JUMP_ABSOLUTE(arg=16, lineno=3)
>         40	LOAD_CONST(arg=0, lineno=4)
          42	RETURN_VALUE(arg=None, lineno=4)
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=0, inst=NOP(arg=None, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$sched4.1']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$sched4.1', '$const6.2']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$8binary_subscr.3']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=14, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4', '$const12.5']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$16load_global.7']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=22, inst=CALL_METHOD(arg=1, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8', '$const20.9']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=24, inst=BINARY_ADD(arg=None, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$22call_method.10']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=26, inst=CALL_FUNCTION(arg=2, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$2load_global.0', '$8binary_subscr.3', '$24binary_add.11']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=28, inst=GET_ITER(arg=None, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$26call_function.12']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[Edge(pc=30, stack=('$28get_iter.13',), blockstack=(), npush=0)]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: ['$phi30.0']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=30, inst=FOR_ITER(arg=4, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi30.0']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=40, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG    numba.core.byteflow:byteflow.py:279 stack []
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=4)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$const40.0']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=32 nstack_initial=2)])
DEBUG    numba.core.byteflow:byteflow.py:103 stack: ['$phi32.0', '$phi32.1']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=32, inst=STORE_FAST(arg=5, lineno=2)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi32.0', '$phi32.1']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=3)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi32.0']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=36, inst=STORE_FAST(arg=6, lineno=3)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi32.0', '$const34.2']
DEBUG    numba.core.byteflow:byteflow.py:278 dispatch pc=38, inst=JUMP_ABSOLUTE(arg=16, lineno=3)
DEBUG    numba.core.byteflow:byteflow.py:279 stack ['$phi32.0']
DEBUG    numba.core.byteflow:byteflow.py:138 end state. edges=[Edge(pc=30, stack=('$phi32.0',), blockstack=(), npush=0)]
DEBUG    numba.core.byteflow:byteflow.py:100 pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG    numba.core.byteflow:byteflow.py:166 -------------------------Prune PHIs-------------------------
DEBUG    numba.core.byteflow:byteflow.py:235 Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=40 nstack_initial=0): set()})
DEBUG    numba.core.byteflow:byteflow.py:192 defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1)}
DEBUG    numba.core.byteflow:byteflow.py:193 phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG    numba.core.byteflow:byteflow.py:214 changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG    numba.core.byteflow:byteflow.py:214 changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG    numba.core.byteflow:byteflow.py:214 changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG    numba.core.byteflow:byteflow.py:223 keep phismap: {'$phi30.0': {('$28get_iter.13', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))}}
DEBUG    numba.core.byteflow:byteflow.py:229 new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.13'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'}})
DEBUG    numba.core.byteflow:byteflow.py:239 ----------------------DONE Prune PHIs-----------------------
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sched4.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$sched4.1', 'res': '$8binary_subscr.3'}), (10, {'res': '$sched10.4'}), (12, {'res': '$const12.5'}), (14, {'index': '$const12.5', 'target': '$sched10.4', 'res': '$14binary_subscr.6'}), (16, {'res': '$16load_global.7'}), (18, {'item': '$16load_global.7', 'res': '$18load_method.8'}), (20, {'res': '$const20.9'}), (22, {'func': '$18load_method.8', 'args': ['$const20.9'], 'res': '$22call_method.10'}), (24, {'lhs': '$14binary_subscr.6', 'rhs': '$22call_method.10', 'res': '$24binary_add.11'}), (26, {'func': '$2load_global.0', 'args': ['$8binary_subscr.3', '$24binary_add.11'], 'res': '$26call_function.12'}), (28, {'value': '$26call_function.12', 'res': '$28get_iter.13'})), outgoing_phis={'$phi30.0': '$28get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.13',)})
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 32: ('$phi30.0', '$30for_iter.2')})
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$const34.2'}), (36, {'value': '$const34.2'}), (38, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi32.0',)})
DEBUG    numba.core.byteflow:byteflow.py:150 block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$const40.0'}), (42, {'retval': '$const40.0', 'castval': '$42return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG    numba.core.interpreter:interpreter.py:1342 label 0:
    sched = arg(0, name=sched)               ['sched']
    array = arg(1, name=array)               ['array']
    descendants__indexes = arg(2, name=descendants__indexes) ['descendants__indexes']
    linear__indices = arg(3, name=linear__indices) ['linear__indices']
    summed = arg(4, name=summed)             ['summed']
    $2load_global.0 = global(range: <class 'range'>) ['$2load_global.0']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8binary_subscr.3 = getitem(value=sched, index=$const6.2, fn=<built-in function getitem>) ['$8binary_subscr.3', '$const6.2', 'sched']
    $const12.5 = const(int, 1)               ['$const12.5']
    $14binary_subscr.6 = getitem(value=sched, index=$const12.5, fn=<built-in function getitem>) ['$14binary_subscr.6', '$const12.5', 'sched']
    $16load_global.7 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>) ['$16load_global.7']
    $18load_method.8 = getattr(value=$16load_global.7, attr=uint8) ['$16load_global.7', '$18load_method.8']
    $const20.9 = const(int, 1)               ['$const20.9']
    $22call_method.10 = call $18load_method.8($const20.9, func=$18load_method.8, args=[Var($const20.9, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.8', '$22call_method.10', '$const20.9']
    $24binary_add.11 = $14binary_subscr.6 + $22call_method.10 ['$14binary_subscr.6', '$22call_method.10', '$24binary_add.11']
    $26call_function.12 = call $2load_global.0($8binary_subscr.3, $24binary_add.11, func=$2load_global.0, args=[Var($8binary_subscr.3, <string>:2), Var($24binary_add.11, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$24binary_add.11', '$26call_function.12', '$2load_global.0', '$8binary_subscr.3']
    $28get_iter.13 = getiter(value=$26call_function.12) ['$26call_function.12', '$28get_iter.13']
    $phi30.0 = $28get_iter.13                ['$28get_iter.13', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 40             ['$30for_iter.3']
label 32:
    parfor__index_174 = $phi32.1             ['$phi32.1', 'parfor__index_174']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 30                                  []
label 40:
    $const40.0 = const(NoneType, None)       ['$const40.0']
    $42return_value.1 = cast(value=$const40.0) ['$42return_value.1', '$const40.0']
    return $42return_value.1                 ['$42return_value.1']

DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 0
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c4d66b640>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: sched.190 = arg(0, name=sched)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: array = arg(1, name=array)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: descendants__indexes = arg(2, name=descendants__indexes)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: linear__indices = arg(3, name=linear__indices)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: summed = arg(4, name=summed)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $2load_global.0.191 = global(range: <class 'range'>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $const6.2.192 = const(int, 0)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $8binary_subscr.3.193 = getitem(value=sched.190, index=$const6.2.192, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $const12.5.194 = const(int, 1)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $14binary_subscr.6.195 = getitem(value=sched.190, index=$const12.5.194, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $16load_global.7.196 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $18load_method.8.197 = getattr(value=$16load_global.7.196, attr=uint8)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $const20.9.198 = const(int, 1)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $22call_method.10.199 = call $18load_method.8.197($const20.9.198, func=$18load_method.8.197, args=[Var($const20.9.198, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $24binary_add.11.200 = $14binary_subscr.6.195 + $22call_method.10.199
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $26call_function.12.201 = call $2load_global.0.191($8binary_subscr.3.193, $24binary_add.11.200, func=$2load_global.0.191, args=[Var($8binary_subscr.3.193, <string>:2), Var($24binary_add.11.200, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $28get_iter.13.202 = getiter(value=$26call_function.12.201)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $phi30.0.203 = $28get_iter.13.202
DEBUG    numba.core.ssa:ssa.py:193 on stmt: msg.164 = const(str, Sizes of $62binary_subscr.7, $68binary_subscr.10 do not match on /single-cell-data-portal/backend/common/utils/rollup.py (327))
DEBUG    numba.core.ssa:ssa.py:193 on stmt: assert.165 = global(assert_equiv: <intrinsic assert_equiv>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: msg.167 = const(str, Sizes of $62binary_subscr.7, $68binary_subscr.10 do not match on /single-cell-data-portal/backend/common/utils/rollup.py (327))
DEBUG    numba.core.ssa:ssa.py:193 on stmt: assert.168 = global(assert_equiv: <intrinsic assert_equiv>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: msg.170 = const(str, Sizes of $62binary_subscr.7, $68binary_subscr.10 do not match on /single-cell-data-portal/backend/common/utils/rollup.py (327))
DEBUG    numba.core.ssa:ssa.py:193 on stmt: assert.171 = global(assert_equiv: <intrinsic assert_equiv>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $const36.8 = const(int, 1)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $42build_slice.11 = global(slice: <class 'slice'>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 30
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 30
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c4d66b640>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $30for_iter.1.204 = iternext(value=$phi30.0.203)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $30for_iter.2.205 = pair_first(value=$30for_iter.1.204)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $30for_iter.3.206 = pair_second(value=$30for_iter.1.204)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $phi32.1.207 = $30for_iter.2.205
DEBUG    numba.core.ssa:ssa.py:193 on stmt: branch $30for_iter.3.206, 32, 120
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 32
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c4d66b640>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: parfor__index_174 = $phi32.1.207
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 40
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 120
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c4d66b640>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $const40.0.208 = const(NoneType, None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $42return_value.1.209 = cast(value=$const40.0.208)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: return $42return_value.1.209
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 95
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c4d66b640>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 119
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 63
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c4d66b640>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $52for_iter.2 = iternext(value=$50get_iter.15)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $j.177 = pair_first(value=$52for_iter.2)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $52for_iter.4 = pair_second(value=$52for_iter.2)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: branch $52for_iter.4, 93, 95
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 93
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c4d66b640>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $62binary_subscr.7 = getitem(value=summed, index=parfor__index_174, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $62binary_subscr.7_shape.156 = getattr(value=$62binary_subscr.7, attr=shape)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $62binary_subscr.7_size0.157 = static_getitem(value=$62binary_subscr.7_shape.156, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $62binary_subscr.7_size1.158 = static_getitem(value=$62binary_subscr.7_shape.156, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $62binary_subscr.7_size2.159 = static_getitem(value=$62binary_subscr.7_shape.156, index=2, index_var=None, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $68binary_subscr.10 = getitem(value=array, index=$j.177, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $68binary_subscr.10_shape.160 = getattr(value=$68binary_subscr.10, attr=shape)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $68binary_subscr.10_size0.161 = static_getitem(value=$68binary_subscr.10_shape.160, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $68binary_subscr.10_size1.162 = static_getitem(value=$68binary_subscr.10_shape.160, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $68binary_subscr.10_size2.163 = static_getitem(value=$68binary_subscr.10_shape.160, index=2, index_var=None, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: ret.166 = call assert.165(msg.164, $62binary_subscr.7_size2.159, $68binary_subscr.10_size2.163, func=assert.165, args=[Var(msg.164, rollup.py:327), Var($62binary_subscr.7_size2.159, rollup.py:327), Var($68binary_subscr.10_size2.163, rollup.py:327)], kws={}, vararg=None, varkwarg=None, target=None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: ret.169 = call assert.168(msg.167, $62binary_subscr.7_size1.158, $68binary_subscr.10_size1.162, func=assert.168, args=[Var(msg.167, rollup.py:327), Var($62binary_subscr.7_size1.158, rollup.py:327), Var($68binary_subscr.10_size1.162, rollup.py:327)], kws={}, vararg=None, varkwarg=None, target=None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: ret.172 = call assert.171(msg.170, $62binary_subscr.7_size0.157, $68binary_subscr.10_size0.161, func=assert.171, args=[Var(msg.170, rollup.py:327), Var($62binary_subscr.7_size0.157, rollup.py:327), Var($68binary_subscr.10_size0.161, rollup.py:327)], kws={}, vararg=None, varkwarg=None, target=None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $70inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$62binary_subscr.7, rhs=$68binary_subscr.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: summed[parfor__index_174] = $70inplace_add.11
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 63
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 40
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c4d66b640>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: i = parfor__index_174
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $30binary_subscr.5 = getitem(value=linear__indices, index=parfor__index_174, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $38binary_add.9 = i + $const36.8
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $40binary_subscr.10 = getitem(value=linear__indices, index=$38binary_add.9, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $42build_slice.12 = call $42build_slice.11($30binary_subscr.5, $40binary_subscr.10, func=$42build_slice.11, args=(Var($30binary_subscr.5, rollup.py:325), Var($40binary_subscr.10, rollup.py:325)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: index = getitem(value=descendants__indexes, index=$42build_slice.12, fn=<built-in function getitem>)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: $50get_iter.15 = getiter(value=index)
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 63
DEBUG    numba.core.ssa:ssa.py:162 ==== SSA block analysis pass on 119
DEBUG    numba.core.ssa:ssa.py:191 Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c4d66b640>
DEBUG    numba.core.ssa:ssa.py:193 on stmt: jump 30
DEBUG    numba.core.ssa:ssa.py:154 defs defaultdict(<class 'list'>,
            {'$14binary_subscr.6.195': [<numba.core.ir.Assign object at 0x7f6c4d668400>],
             '$16load_global.7.196': [<numba.core.ir.Assign object at 0x7f6c4d668550>],
             '$18load_method.8.197': [<numba.core.ir.Assign object at 0x7f6c4d6686d0>],
             '$22call_method.10.199': [<numba.core.ir.Assign object at 0x7f6c4d668a60>],
             '$24binary_add.11.200': [<numba.core.ir.Assign object at 0x7f6c4d668b80>],
             '$26call_function.12.201': [<numba.core.ir.Assign object at 0x7f6c4d668d30>],
             '$28get_iter.13.202': [<numba.core.ir.Assign object at 0x7f6c4d668e50>],
             '$2load_global.0.191': [<numba.core.ir.Assign object at 0x7f6c4d623b50>],
             '$30binary_subscr.5': [<numba.core.ir.Assign object at 0x7f6c4cb9c3d0>],
             '$30for_iter.1.204': [<numba.core.ir.Assign object at 0x7f6c4d669120>],
             '$30for_iter.2.205': [<numba.core.ir.Assign object at 0x7f6c4d669240>],
             '$30for_iter.3.206': [<numba.core.ir.Assign object at 0x7f6c4d669360>],
             '$38binary_add.9': [<numba.core.ir.Assign object at 0x7f6c4cb9c910>],
             '$40binary_subscr.10': [<numba.core.ir.Assign object at 0x7f6c4cb9ca90>],
             '$42build_slice.11': [<numba.core.ir.Assign object at 0x7f6c4cb9cbe0>],
             '$42build_slice.12': [<numba.core.ir.Assign object at 0x7f6c4cb9cd00>],
             '$42return_value.1.209': [<numba.core.ir.Assign object at 0x7f6c4d669cf0>],
             '$50get_iter.15': [<numba.core.ir.Assign object at 0x7f6c4cb9d240>],
             '$52for_iter.2': [<numba.core.ir.Assign object at 0x7f6c4cb9d330>],
             '$52for_iter.4': [<numba.core.ir.Assign object at 0x7f6c4cb9d570>],
             '$62binary_subscr.7': [<numba.core.ir.Assign object at 0x7f6c4cb9de10>],
             '$62binary_subscr.7_shape.156': [<numba.core.ir.Assign object at 0x7f6c4d640070>],
             '$62binary_subscr.7_size0.157': [<numba.core.ir.Assign object at 0x7f6c4d640100>],
             '$62binary_subscr.7_size1.158': [<numba.core.ir.Assign object at 0x7f6c4d6402b0>],
             '$62binary_subscr.7_size2.159': [<numba.core.ir.Assign object at 0x7f6c4d640430>],
             '$68binary_subscr.10': [<numba.core.ir.Assign object at 0x7f6c4cb9e1d0>],
             '$68binary_subscr.10_shape.160': [<numba.core.ir.Assign object at 0x7f6c4d6406a0>],
             '$68binary_subscr.10_size0.161': [<numba.core.ir.Assign object at 0x7f6c4d640700>],
             '$68binary_subscr.10_size1.162': [<numba.core.ir.Assign object at 0x7f6c4d640850>],
             '$68binary_subscr.10_size2.163': [<numba.core.ir.Assign object at 0x7f6c4d6409d0>],
             '$70inplace_add.11': [<numba.core.ir.Assign object at 0x7f6c4cb9e350>],
             '$8binary_subscr.3.193': [<numba.core.ir.Assign object at 0x7f6c4d623fa0>],
             '$const12.5.194': [<numba.core.ir.Assign object at 0x7f6c4d668250>],
             '$const20.9.198': [<numba.core.ir.Assign object at 0x7f6c4d668850>],
             '$const36.8': [<numba.core.ir.Assign object at 0x7f6c4cb9c760>],
             '$const40.0.208': [<numba.core.ir.Assign object at 0x7f6c4d669b70>],
             '$const6.2.192': [<numba.core.ir.Assign object at 0x7f6c4d623df0>],
             '$j.177': [<numba.core.ir.Assign object at 0x7f6c4cb9d450>],
             '$phi30.0.203': [<numba.core.ir.Assign object at 0x7f6c4d623d00>],
             '$phi32.1.207': [<numba.core.ir.Assign object at 0x7f6c4d669060>],
             'array': [<numba.core.ir.Assign object at 0x7f6c4d623670>],
             'assert.165': [<numba.core.ir.Assign object at 0x7f6c4d640f70>],
             'assert.168': [<numba.core.ir.Assign object at 0x7f6c4cb7f6a0>],
             'assert.171': [<numba.core.ir.Assign object at 0x7f6c4cb7ee00>],
             'descendants__indexes': [<numba.core.ir.Assign object at 0x7f6c4d623790>],
             'i': [<numba.core.ir.Assign object at 0x7f6c4cbb3e80>],
             'index': [<numba.core.ir.Assign object at 0x7f6c4cb9ceb0>],
             'linear__indices': [<numba.core.ir.Assign object at 0x7f6c4d6238b0>],
             'msg.164': [<numba.core.ir.Assign object at 0x7f6c4d640f40>],
             'msg.167': [<numba.core.ir.Assign object at 0x7f6c4cb7f550>],
             'msg.170': [<numba.core.ir.Assign object at 0x7f6c4cb7ecb0>],
             'parfor__index_174': [<numba.core.ir.Assign object at 0x7f6c4d669630>],
             'ret.166': [<numba.core.ir.Assign object at 0x7f6c4d640fd0>],
             'ret.169': [<numba.core.ir.Assign object at 0x7f6c4cb7f5e0>],
             'ret.172': [<numba.core.ir.Assign object at 0x7f6c4cb7ec80>],
             'sched.190': [<numba.core.ir.Assign object at 0x7f6c4d623550>],
             'summed': [<numba.core.ir.Assign object at 0x7f6c4d6239d0>]})
DEBUG    numba.core.ssa:ssa.py:156 SSA violators set()