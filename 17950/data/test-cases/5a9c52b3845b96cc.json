{"uid":"5a9c52b3845b96cc","name":"test_type_inference[parameters41]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"ffc02ebcf10ae1694e36f70c11fd745a","time":{"start":1702934564315,"stop":1702934564316,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1702934549573,"stop":1702934549573,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1702934564314,"stop":1702934564314,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1702934564316,"stop":1702934564316,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"89ca9a9b3434"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0      -128.0\n1      -127.0\n2      -126.0\n3      -125.0\n4      -124.0\n        ...  \n1123    995.0\n1124    996.0\n1125    997.0\n1126    998.0\n1127    999.0\nLength: 1128, dtype: float32, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': None}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":18,"unknown":0,"total":18},"items":[{"uid":"ded5e2a4ec39ad45","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17949//#testresult/ded5e2a4ec39ad45","status":"passed","time":{"start":1702934418562,"stop":1702934418562,"duration":0}},{"uid":"f5182e93c916242b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17948//#testresult/f5182e93c916242b","status":"passed","time":{"start":1702933816913,"stop":1702933816913,"duration":0}},{"uid":"3ec9ddf2888609ac","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17947//#testresult/3ec9ddf2888609ac","status":"passed","time":{"start":1702933176427,"stop":1702933176427,"duration":0}},{"uid":"7df3216718e6c9a5","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17946//#testresult/7df3216718e6c9a5","status":"passed","time":{"start":1702931717133,"stop":1702931717133,"duration":0}},{"uid":"88548ab0211b8948","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17944//#testresult/88548ab0211b8948","status":"passed","time":{"start":1702931120218,"stop":1702931120219,"duration":1}},{"uid":"2f0b5265b4b7a60","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17943//#testresult/2f0b5265b4b7a60","status":"passed","time":{"start":1702931103707,"stop":1702931103707,"duration":0}},{"uid":"2a6ca0fc62f4f9a7","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17942//#testresult/2a6ca0fc62f4f9a7","status":"passed","time":{"start":1702930348456,"stop":1702930348456,"duration":0}},{"uid":"4c5770718053f706","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17941//#testresult/4c5770718053f706","status":"passed","time":{"start":1702928944467,"stop":1702928944467,"duration":0}},{"uid":"c3288dbdbb677019","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17940//#testresult/c3288dbdbb677019","status":"passed","time":{"start":1702928465785,"stop":1702928465785,"duration":0}},{"uid":"ddcef473ad13cae9","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17939//#testresult/ddcef473ad13cae9","status":"passed","time":{"start":1702928455205,"stop":1702928455206,"duration":1}},{"uid":"783e9dfba81536ae","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17938//#testresult/783e9dfba81536ae","status":"passed","time":{"start":1702927926109,"stop":1702927926110,"duration":1}},{"uid":"2c9a99e7a15ccf91","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17937//#testresult/2c9a99e7a15ccf91","status":"passed","time":{"start":1702927372059,"stop":1702927372060,"duration":1}},{"uid":"dbb77a1bf0ee1716","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17936//#testresult/dbb77a1bf0ee1716","status":"passed","time":{"start":1702926366394,"stop":1702926366395,"duration":1}},{"uid":"94050c02c12ae270","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17935//#testresult/94050c02c12ae270","status":"passed","time":{"start":1702925519099,"stop":1702925519099,"duration":0}},{"uid":"a3b9c7f6451da17c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17934//#testresult/a3b9c7f6451da17c","status":"passed","time":{"start":1702925452886,"stop":1702925452887,"duration":1}},{"uid":"3d7a06d6d26affdf","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17933//#testresult/3d7a06d6d26affdf","status":"passed","time":{"start":1702924128058,"stop":1702924128059,"duration":1}},{"uid":"32f21233fe01ec40","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17882//#testresult/32f21233fe01ec40","status":"passed","time":{"start":1702513219284,"stop":1702513219284,"duration":0}}]},"tags":[]},"source":"5a9c52b3845b96cc.json","parameterValues":["{'data': 0      -128.0\n1      -127.0\n2      -126.0\n3      -125.0\n4      -124.0\n        ...  \n1123    995.0\n1124    996.0\n1125    997.0\n1126    998.0\n1127    999.0\nLength: 1128, dtype: float32, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': None}"]}