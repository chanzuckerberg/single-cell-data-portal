{"uid":"5e926a7ea51a57a2","name":"test_type_inference[parameters71]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"6e1a8ce775aac3cbfaa7265e05c4e162","time":{"start":1744334800482,"stop":1744334800483,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744334790187,"stop":1744334790187,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744334800481,"stop":1744334800481,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"22e90878dc11d4c6","name":"log","source":"22e90878dc11d4c6.txt","type":"text/plain","size":341},{"uid":"bb5ea49e944ff200","name":"stdout","source":"bb5ea49e944ff200.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1744334800483,"stop":1744334800483,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"8ea8a4f4bd97"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': [0.0, 1.0, 2.0]\nCategories (3, float64): [0.0, 1.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"e8075b54c6b59ae3","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23965//#testresult/e8075b54c6b59ae3","status":"passed","time":{"start":1744328197785,"stop":1744328197786,"duration":1}},{"uid":"d74df9b3a215037c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23964//#testresult/d74df9b3a215037c","status":"passed","time":{"start":1744326572725,"stop":1744326572726,"duration":1}},{"uid":"bce0757c60b4bd2e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23961//#testresult/bce0757c60b4bd2e","status":"passed","time":{"start":1744324473352,"stop":1744324473353,"duration":1}},{"uid":"307587d52e60a579","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23954//#testresult/307587d52e60a579","status":"passed","time":{"start":1744324189527,"stop":1744324189528,"duration":1}},{"uid":"41153c5ca16568c4","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23951//#testresult/41153c5ca16568c4","status":"passed","time":{"start":1744322847611,"stop":1744322847612,"duration":1}},{"uid":"fe06f9b853a3b707","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23950//#testresult/fe06f9b853a3b707","status":"passed","time":{"start":1744317734561,"stop":1744317734562,"duration":1}},{"uid":"46e942e40b96abb3","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23949//#testresult/46e942e40b96abb3","status":"passed","time":{"start":1744316549381,"stop":1744316549382,"duration":1}}]},"tags":[]},"source":"5e926a7ea51a57a2.json","parameterValues":["{'data': [0.0, 1.0, 2.0]\nCategories (3, float64): [0.0, 1.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}