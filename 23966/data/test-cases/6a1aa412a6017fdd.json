{"uid":"6a1aa412a6017fdd","name":"test_type_inference[parameters82]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"eee034a321c3b0a84cfd6822f1545eb5","time":{"start":1744334800537,"stop":1744334800538,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744334790187,"stop":1744334790187,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744334800536,"stop":1744334800536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"ac12f1d3f53afbab","name":"log","source":"ac12f1d3f53afbab.txt","type":"text/plain","size":341},{"uid":"fb43eedb7255516","name":"stdout","source":"fb43eedb7255516.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1744334800538,"stop":1744334800538,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"8ea8a4f4bd97"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, uint32): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"d4b8db5c87d4a623","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23965//#testresult/d4b8db5c87d4a623","status":"passed","time":{"start":1744328197840,"stop":1744328197841,"duration":1}},{"uid":"6beaaa2f7cebc91c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23964//#testresult/6beaaa2f7cebc91c","status":"passed","time":{"start":1744326572780,"stop":1744326572781,"duration":1}},{"uid":"ffd5635aa9b286d2","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23961//#testresult/ffd5635aa9b286d2","status":"passed","time":{"start":1744324473407,"stop":1744324473408,"duration":1}},{"uid":"8cd7c48eafb08d6a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23954//#testresult/8cd7c48eafb08d6a","status":"passed","time":{"start":1744324189583,"stop":1744324189584,"duration":1}},{"uid":"71d45e6e189fdf3e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23951//#testresult/71d45e6e189fdf3e","status":"passed","time":{"start":1744322847667,"stop":1744322847668,"duration":1}},{"uid":"6dbd39a78581b593","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23950//#testresult/6dbd39a78581b593","status":"passed","time":{"start":1744317734616,"stop":1744317734617,"duration":1}},{"uid":"84bd84ac8ad2ea95","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23949//#testresult/84bd84ac8ad2ea95","status":"passed","time":{"start":1744316549436,"stop":1744316549437,"duration":1}}]},"tags":[]},"source":"6a1aa412a6017fdd.json","parameterValues":["{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, uint32): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}