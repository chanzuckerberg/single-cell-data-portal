{"uid":"7e81d593aa5ce22","name":"test_type_inference[parameters69]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"371ab4604c8a9d123ca891b354dcfb4a","time":{"start":1744334800471,"stop":1744334800472,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744334790187,"stop":1744334790187,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744334800470,"stop":1744334800470,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"f6159ad5425b8c87","name":"log","source":"f6159ad5425b8c87.txt","type":"text/plain","size":341},{"uid":"5b7e35c46918ac3b","name":"stdout","source":"5b7e35c46918ac3b.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1744334800472,"stop":1744334800472,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"8ea8a4f4bd97"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0    0.0\n1    1.0\n2    2.0\ndtype: category\nCategories (3, float64): [0.0, 1.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"1143c3a67ae074c2","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23965//#testresult/1143c3a67ae074c2","status":"passed","time":{"start":1744328197775,"stop":1744328197776,"duration":1}},{"uid":"ece5cfbe552fafa2","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23964//#testresult/ece5cfbe552fafa2","status":"passed","time":{"start":1744326572714,"stop":1744326572715,"duration":1}},{"uid":"b556df2e14e3a2af","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23961//#testresult/b556df2e14e3a2af","status":"passed","time":{"start":1744324473341,"stop":1744324473342,"duration":1}},{"uid":"1962171c250d7b0a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23954//#testresult/1962171c250d7b0a","status":"passed","time":{"start":1744324189516,"stop":1744324189517,"duration":1}},{"uid":"4efb3675ae57b15f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23951//#testresult/4efb3675ae57b15f","status":"passed","time":{"start":1744322847601,"stop":1744322847602,"duration":1}},{"uid":"59c6bc55c39ac747","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23950//#testresult/59c6bc55c39ac747","status":"passed","time":{"start":1744317734551,"stop":1744317734552,"duration":1}},{"uid":"9b747c5e2f8a8de9","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23949//#testresult/9b747c5e2f8a8de9","status":"passed","time":{"start":1744316549370,"stop":1744316549371,"duration":1}}]},"tags":[]},"source":"7e81d593aa5ce22.json","parameterValues":["{'data': 0    0.0\n1    1.0\n2    2.0\ndtype: category\nCategories (3, float64): [0.0, 1.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}