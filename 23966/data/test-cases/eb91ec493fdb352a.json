{"uid":"eb91ec493fdb352a","name":"test_type_inference[parameters78]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"da7b3d13ff5252b5b1026466cf6d1f83","time":{"start":1744334800517,"stop":1744334800518,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744334790187,"stop":1744334790187,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744334800516,"stop":1744334800516,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"4bf3711469cb8e8f","name":"log","source":"4bf3711469cb8e8f.txt","type":"text/plain","size":341},{"uid":"75d56fdc311cc024","name":"stdout","source":"75d56fdc311cc024.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1744334800518,"stop":1744334800518,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"8ea8a4f4bd97"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, uint16): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"206906c87a82f6f5","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23965//#testresult/206906c87a82f6f5","status":"passed","time":{"start":1744328197820,"stop":1744328197821,"duration":1}},{"uid":"537bea7a4134fabf","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23964//#testresult/537bea7a4134fabf","status":"passed","time":{"start":1744326572760,"stop":1744326572761,"duration":1}},{"uid":"2e37c5f8ddf8a87","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23961//#testresult/2e37c5f8ddf8a87","status":"passed","time":{"start":1744324473387,"stop":1744324473388,"duration":1}},{"uid":"1e76d5266c4bc9ac","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23954//#testresult/1e76d5266c4bc9ac","status":"passed","time":{"start":1744324189563,"stop":1744324189564,"duration":1}},{"uid":"346e925a1ccca58e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23951//#testresult/346e925a1ccca58e","status":"passed","time":{"start":1744322847647,"stop":1744322847648,"duration":1}},{"uid":"48676bb45c3025fa","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23950//#testresult/48676bb45c3025fa","status":"passed","time":{"start":1744317734596,"stop":1744317734597,"duration":1}},{"uid":"c1c4ac7efeca2005","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23949//#testresult/c1c4ac7efeca2005","status":"passed","time":{"start":1744316549416,"stop":1744316549417,"duration":1}}]},"tags":[]},"source":"eb91ec493fdb352a.json","parameterValues":["{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, uint16): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}