{"uid":"8a2c8f30335b7d73","name":"test_type_inference[parameters84]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"da8351962f0650f8a2b4e7596a3354aa","time":{"start":1744334800548,"stop":1744334800550,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744334790187,"stop":1744334790187,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744334800547,"stop":1744334800547,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"f169eee0b34663da","name":"log","source":"f169eee0b34663da.txt","type":"text/plain","size":341},{"uid":"61f62df9a5f907be","name":"stdout","source":"61f62df9a5f907be.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1744334800550,"stop":1744334800550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"8ea8a4f4bd97"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, int64): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"758005acf5fa00","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23965//#testresult/758005acf5fa00","status":"passed","time":{"start":1744328197850,"stop":1744328197851,"duration":1}},{"uid":"c0f3cba83f5bc890","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23964//#testresult/c0f3cba83f5bc890","status":"passed","time":{"start":1744326572790,"stop":1744326572791,"duration":1}},{"uid":"1a73719d3a7d2b1","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23961//#testresult/1a73719d3a7d2b1","status":"passed","time":{"start":1744324473417,"stop":1744324473418,"duration":1}},{"uid":"17d543f64406a644","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23954//#testresult/17d543f64406a644","status":"passed","time":{"start":1744324189593,"stop":1744324189594,"duration":1}},{"uid":"56ac37f129b39c2f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23951//#testresult/56ac37f129b39c2f","status":"passed","time":{"start":1744322847677,"stop":1744322847678,"duration":1}},{"uid":"6289afe1963f8a7c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23950//#testresult/6289afe1963f8a7c","status":"passed","time":{"start":1744317734626,"stop":1744317734627,"duration":1}},{"uid":"ddf530982f67fb66","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/23949//#testresult/ddf530982f67fb66","status":"passed","time":{"start":1744316549446,"stop":1744316549447,"duration":1}}]},"tags":[]},"source":"8a2c8f30335b7d73.json","parameterValues":["{'data': 0      0\n1    NaN\n2      2\ndtype: category\nCategories (2, int64): [0, 2], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}