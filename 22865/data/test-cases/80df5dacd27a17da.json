{"uid":"80df5dacd27a17da","name":"test_type_inference[parameters60]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"3dcf70ed6977c3e4fb187a1b06a58aa3","time":{"start":1736808847751,"stop":1736808847751,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1736808813282,"stop":1736808813282,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1736808847750,"stop":1736808847750,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1736808847752,"stop":1736808847752,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"33dd0fa37eb7"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0    0\n1    1\n2    2\ndtype: category\nCategories (3, int16): [0, 1, 2], 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'categorical'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"666d412ce40d383c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22863//#testresult/666d412ce40d383c","status":"passed","time":{"start":1736805444085,"stop":1736805444085,"duration":0}},{"uid":"d3f912712db5d5c3","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22856//#testresult/d3f912712db5d5c3","status":"passed","time":{"start":1736804265733,"stop":1736804265734,"duration":1}},{"uid":"b48aec25ba563335","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22821//#testresult/b48aec25ba563335","status":"passed","time":{"start":1736276917080,"stop":1736276917080,"duration":0}},{"uid":"6a8d25d28e615f67","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22812//#testresult/6a8d25d28e615f67","status":"passed","time":{"start":1736275574629,"stop":1736275574629,"duration":0}},{"uid":"ae1112f707f1bc7b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22811//#testresult/ae1112f707f1bc7b","status":"passed","time":{"start":1736275280403,"stop":1736275280404,"duration":1}},{"uid":"d6d2b67209e6b6c3","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22690//#testresult/d6d2b67209e6b6c3","status":"passed","time":{"start":1733520590307,"stop":1733520590307,"duration":0}},{"uid":"9770cf008d7dbcb0","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22689//#testresult/9770cf008d7dbcb0","status":"passed","time":{"start":1733516736664,"stop":1733516736664,"duration":0}},{"uid":"c58ff5b41c0d8462","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22688//#testresult/c58ff5b41c0d8462","status":"passed","time":{"start":1733514090203,"stop":1733514090203,"duration":0}},{"uid":"c6d6645f60b7062c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22687//#testresult/c6d6645f60b7062c","status":"passed","time":{"start":1733513219696,"stop":1733513219697,"duration":1}}]},"tags":[]},"source":"80df5dacd27a17da.json","parameterValues":["{'data': 0    0\n1    1\n2    2\ndtype: category\nCategories (3, int16): [0, 1, 2], 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'categorical'}}"]}