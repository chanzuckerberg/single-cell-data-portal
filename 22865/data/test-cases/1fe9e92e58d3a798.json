{"uid":"1fe9e92e58d3a798","name":"test_type_inference[parameters59]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"135d65deb17d6e970ad741675c243bd6","time":{"start":1736808847747,"stop":1736808847747,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1736808813282,"stop":1736808813282,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1736808847746,"stop":1736808847746,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1736808847748,"stop":1736808847748,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"33dd0fa37eb7"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0    0\n1    1\n2    2\ndtype: category\nCategories (3, uint8): [0, 1, 2], 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'categorical'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"2a15cc7ac3cc48ac","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22863//#testresult/2a15cc7ac3cc48ac","status":"passed","time":{"start":1736805444081,"stop":1736805444081,"duration":0}},{"uid":"fb9a01c4639b726a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22856//#testresult/fb9a01c4639b726a","status":"passed","time":{"start":1736804265729,"stop":1736804265730,"duration":1}},{"uid":"430d08a16925c85e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22821//#testresult/430d08a16925c85e","status":"passed","time":{"start":1736276917075,"stop":1736276917076,"duration":1}},{"uid":"efa736567d376d53","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22812//#testresult/efa736567d376d53","status":"passed","time":{"start":1736275574625,"stop":1736275574625,"duration":0}},{"uid":"d5cd8d412c6a3e86","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22811//#testresult/d5cd8d412c6a3e86","status":"passed","time":{"start":1736275280399,"stop":1736275280400,"duration":1}},{"uid":"7b783397939770df","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22690//#testresult/7b783397939770df","status":"passed","time":{"start":1733520590303,"stop":1733520590303,"duration":0}},{"uid":"61b5288534c1bbd4","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22689//#testresult/61b5288534c1bbd4","status":"passed","time":{"start":1733516736659,"stop":1733516736660,"duration":1}},{"uid":"db29b6ead6a95220","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22688//#testresult/db29b6ead6a95220","status":"passed","time":{"start":1733514090199,"stop":1733514090199,"duration":0}},{"uid":"8ae10a42fc36c7d4","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22687//#testresult/8ae10a42fc36c7d4","status":"passed","time":{"start":1733513219692,"stop":1733513219693,"duration":1}}]},"tags":[]},"source":"1fe9e92e58d3a798.json","parameterValues":["{'data': 0    0\n1    1\n2    2\ndtype: category\nCategories (3, uint8): [0, 1, 2], 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'categorical'}}"]}