{"uid":"7639adf5b3c63aae","name":"test_type_inference[parameters19]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"6dfaec1d71c9e081c79922e8237993cb","time":{"start":1736808847585,"stop":1736808847585,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1736808813282,"stop":1736808813282,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1736808847584,"stop":1736808847584,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1736808847586,"stop":1736808847586,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"33dd0fa37eb7"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0        0\n1        1\n2        2\n3        3\n4        4\n      ... \n995    995\n996    996\n997    997\n998    998\n999    999\nLength: 1000, dtype: int32, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"8df600c29dd5ada","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22863//#testresult/8df600c29dd5ada","status":"passed","time":{"start":1736805443918,"stop":1736805443918,"duration":0}},{"uid":"db66e1098b451251","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22856//#testresult/db66e1098b451251","status":"passed","time":{"start":1736804265563,"stop":1736804265564,"duration":1}},{"uid":"d75eb97aa3fdc99c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22821//#testresult/d75eb97aa3fdc99c","status":"passed","time":{"start":1736276916908,"stop":1736276916909,"duration":1}},{"uid":"f3318390ea895c05","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22812//#testresult/f3318390ea895c05","status":"passed","time":{"start":1736275574465,"stop":1736275574465,"duration":0}},{"uid":"e5471f52621480a6","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22811//#testresult/e5471f52621480a6","status":"passed","time":{"start":1736275280234,"stop":1736275280234,"duration":0}},{"uid":"dbdf7674c34372ce","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22690//#testresult/dbdf7674c34372ce","status":"passed","time":{"start":1733520590126,"stop":1733520590127,"duration":1}},{"uid":"5ef6cb649bdb5cda","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22689//#testresult/5ef6cb649bdb5cda","status":"passed","time":{"start":1733516736495,"stop":1733516736496,"duration":1}},{"uid":"2c7c84868bf9bd9c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22688//#testresult/2c7c84868bf9bd9c","status":"passed","time":{"start":1733514090035,"stop":1733514090035,"duration":0}},{"uid":"1777b03aaef7c248","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/22687//#testresult/1777b03aaef7c248","status":"passed","time":{"start":1733513219530,"stop":1733513219530,"duration":0}}]},"tags":[]},"source":"7639adf5b3c63aae.json","parameterValues":["{'data': 0        0\n1        1\n2        2\n3        3\n4        4\n      ... \n995    995\n996    996\n997    997\n998    998\n999    999\nLength: 1000, dtype: int32, 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}