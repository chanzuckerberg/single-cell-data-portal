{"uid":"181884403b733c1e","name":"test_type_inference[parameters51]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"65edca604e347f6574e4bad3641f486a","time":{"start":1719346138254,"stop":1719346138255,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1719346123370,"stop":1719346123370,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1719346138253,"stop":1719346138253,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"116c73de2b22c8fb","name":"log","source":"116c73de2b22c8fb.txt","type":"text/plain","size":341},{"uid":"d69c45a3067286f7","name":"stderr","source":"d69c45a3067286f7.txt","type":"text/plain","size":852}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1719346138255,"stop":1719346138255,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"b6edfde18587"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': <Compressed Sparse Row sparse matrix of dtype 'float64'\n\twith 0 stored elements and shape (10, 100)>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"4e399b11d09aa9d4","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20926//#testresult/4e399b11d09aa9d4","status":"passed","time":{"start":1719345895680,"stop":1719345895681,"duration":1}},{"uid":"1b557e75073530cc","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20927//#testresult/1b557e75073530cc","status":"passed","time":{"start":1719345908528,"stop":1719345908529,"duration":1}},{"uid":"48c3600b38fd3602","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20918//#testresult/48c3600b38fd3602","status":"passed","time":{"start":1719334940115,"stop":1719334940115,"duration":0}},{"uid":"bdbca8ec7735f172","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20919//#testresult/bdbca8ec7735f172","status":"passed","time":{"start":1719335052476,"stop":1719335052477,"duration":1}},{"uid":"8a3d2b8e9fc58edb","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20911//#testresult/8a3d2b8e9fc58edb","status":"passed","time":{"start":1719270612721,"stop":1719270612722,"duration":1}},{"uid":"23743948a2ff5482","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20910//#testresult/23743948a2ff5482","status":"passed","time":{"start":1719270571144,"stop":1719270571144,"duration":0}},{"uid":"2f3bc1ff59c9f849","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/20907//#testresult/2f3bc1ff59c9f849","status":"passed","time":{"start":1719266525270,"stop":1719266525271,"duration":1}}]},"tags":[]},"source":"181884403b733c1e.json","parameterValues":["{'data': <Compressed Sparse Row sparse matrix of dtype 'float64'\n\twith 0 stored elements and shape (10, 100)>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}