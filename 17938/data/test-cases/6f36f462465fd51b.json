{"uid":"6f36f462465fd51b","name":"test_type_inference[parameters47]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"df8a459018d7ca6e8481573698565125","time":{"start":1702927926132,"stop":1702927926133,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1702927911043,"stop":1702927911043,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1702927926131,"stop":1702927926131,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"d4f45074b955d1c3","name":"log","source":"d4f45074b955d1c3.txt","type":"text/plain","size":341},{"uid":"aac0b21aac9ab684","name":"stderr","source":"aac0b21aac9ab684.txt","type":"text/plain","size":852}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1702927926133,"stop":1702927926133,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"a7575d93afee"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0      -128.0\n1      -127.0\n2      -126.0\n3      -125.0\n4      -124.0\n        ...  \n1123    995.0\n1124    996.0\n1125    997.0\n1126    998.0\n1127    999.0\nLength: 1128, dtype: float64, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":7},"items":[{"uid":"36d9339a51807d1a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17937//#testresult/36d9339a51807d1a","status":"passed","time":{"start":1702927372084,"stop":1702927372085,"duration":1}},{"uid":"c0ef6145f9bcdf9c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17936//#testresult/c0ef6145f9bcdf9c","status":"passed","time":{"start":1702926366417,"stop":1702926366418,"duration":1}},{"uid":"816d548dcc2d16c6","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17935//#testresult/816d548dcc2d16c6","status":"passed","time":{"start":1702925519122,"stop":1702925519123,"duration":1}},{"uid":"fec82ff2926a5e87","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17934//#testresult/fec82ff2926a5e87","status":"passed","time":{"start":1702925452909,"stop":1702925452910,"duration":1}},{"uid":"10bcbf169ce8caa5","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17933//#testresult/10bcbf169ce8caa5","status":"passed","time":{"start":1702924128082,"stop":1702924128082,"duration":0}},{"uid":"21da58aa8ae12db9","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17882//#testresult/21da58aa8ae12db9","status":"passed","time":{"start":1702513219307,"stop":1702513219307,"duration":0}}]},"tags":[]},"source":"6f36f462465fd51b.json","parameterValues":["{'data': 0      -128.0\n1      -127.0\n2      -126.0\n3      -125.0\n4      -124.0\n        ...  \n1123    995.0\n1124    996.0\n1125    997.0\n1126    998.0\n1127    999.0\nLength: 1128, dtype: float64, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}