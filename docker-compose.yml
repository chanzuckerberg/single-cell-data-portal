version: "3.8"

services:
  database:
    image: postgres:13.0
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=corpora
      - POSTGRES_PASSWORD=test_pw
    volumes:
      - database:/var/lib/postgresql/data
      - ./backend/database:/import
    networks:
       corporanet:
          aliases:
            - database.corporanet.local
  localstack:
    image: localstack/localstack@sha256:7c6635493185d25165979995fb073fd789c72b6d8b17ef3a70b798d55576732f
    ports:
      - "4566:4566"
    environment:
      - HOSTNAME_EXTERNAL=localstack
      - SERVICES=s3,secretsmanager,stepfunctions,iam,lambda
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - PORT_WEB_UI=${PORT_WEB_UI- }
      - HOST_TMP_FOLDER=${TMPDIR}
      - DEFAULT_REGION=us-west-2
    volumes:
      - localstack:/tmp/localstack
    networks:
       corporanet:
          aliases:
            - localstack.corporanet.local
  frontend:
    image: "${DOCKER_REPO}corpora-frontend"
    build:
      context: frontend
      cache_from:
        - "${DOCKER_REPO}corpora-frontend:branch-main"
      args:
        - BUILDKIT_INLINE_CACHE=1
        - HAPPY_COMMIT
        - HAPPY_BRANCH
        - HAPPY_TAG
    restart: always
    depends_on:
      - backend
    ports:
      - "3000:3000"
    command: ["./container_init.sh"]
    environment:
      - DEPLOYMENT_STAGE=test
      - AWS_REGION=us-west-2
      - AWS_DEFAULT_REGION=us-west-2
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - BOTO_ENDPOINT_URL=http://localstack:4566
    volumes:
      - ./frontend:/corpora-frontend
      - /corpora-frontend/node_modules/
    networks:
       corporanet:
          aliases:
            - frontend.corporanet.local
  upload_failures:
    image: "${DOCKER_REPO}corpora-upload-failures"
    build:
      context: .
      cache_from:
        - "${DOCKER_REPO}corpora-upload-failures:branch-main"
      dockerfile: Dockerfile.upload_failures
      args:
        - BUILDKIT_INLINE_CACHE=1
        - HAPPY_COMMIT
        - HAPPY_BRANCH
        - HAPPY_TAG
    restart: "no"
    ports:
      - "9000:8080"
    volumes:
      - ./backend/corpora/upload_failures:/var/task
      - ./backend/corpora/lambdas/upload_failures:/var/task/backend/corpora/upload_failures
      - ./backend/corpora/common:/var/task/backend/corpora/common
      - ./backend/corpora/dataset_processing:/var/task/backend/corpora/dataset_processing
    environment:
      - PYTHONUNBUFFERED=1
      - CORPORA_LOCAL_DEV=true
      - AWS_REGION=us-west-2
      - AWS_DEFAULT_REGION=us-west-2
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - BOTO_ENDPOINT_URL=http://localstack:4566
      - DEPLOYMENT_STAGE=test
      - ARTIFACT_BUCKET=artifact-bucket
      - CELLXGENE_BUCKET=cellxgene-bucket
    networks:
       corporanet:
          aliases:
            - uploadfailures.corporanet.local
  processing:
    image: "${DOCKER_REPO}corpora-upload"
    build:
      context: .
      cache_from:
        - "${DOCKER_REPO}corpora-upload:branch-main"
      dockerfile: Dockerfile.processing_image
      args:
        - BUILDKIT_INLINE_CACHE=1
        - HAPPY_COMMIT
        - HAPPY_BRANCH
        - HAPPY_TAG
    restart: "no"
    volumes:
      - ./backend/corpora/dataset_processing:/backend/corpora/dataset_processing
      - ./backend/corpora/common:/backend/corpora/common
      # Mount dirs in a layout suitable for running tests.
      - .:/corpora-data-portal
    command: ["sleep", "infinity"]
    environment:
      - PYTHONUNBUFFERED=1
      - CORPORA_LOCAL_DEV=true
      - AWS_REGION=us-west-2
      - AWS_DEFAULT_REGION=us-west-2
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - BOTO_ENDPOINT_URL=http://localstack:4566
      - DEPLOYMENT_STAGE=test
      - ARTIFACT_BUCKET=artifact-bucket
      - CELLXGENE_BUCKET=cellxgene-bucket
    networks:
       corporanet:
          aliases:
            - processing.corporanet.local
  backend:
    image: "${DOCKER_REPO}corpora-backend"
    build:
      context: .
      cache_from:
        - "${DOCKER_REPO}corpora-backend:branch-main"
      args:
        - BUILDKIT_INLINE_CACHE=1
        - HAPPY_COMMIT
        - HAPPY_BRANCH
        - HAPPY_TAG
    restart: always
    depends_on:
      - localstack
      - database
    ports:
      - "5000:5000"
    environment:
      - PYTHONUNBUFFERED=1
      - CORPORA_LOCAL_DEV=true
      - AWS_REGION=us-west-2
      - AWS_DEFAULT_REGION=us-west-2
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - BOTO_ENDPOINT_URL=http://localstack:4566
      - DEPLOYMENT_STAGE=test
      - RESTART_ON_FAILURE=yes
      - DEV_MODE_COOKIES=1
      - IS_DOCKER_DEV=yes # This skips some unit tests.
    volumes:
      # Mount dirs in a layout suitable for running tests.
      - .:/corpora-data-portal
      # SecretsManager population relies on oauth json
      - ./oauth/users.json:/oauth/users.json
    networks:
       corporanet:
          aliases:
            - backend.corporanet.local
  oidc:
    image: soluto/oidc-server-mock:0.3.0
    ports:
      - "4011:80"
      - "8443:8443"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      SERVER_OPTIONS_INLINE: |
        {
          "AccessTokenJwtType": "JWT",
          "Discovery": {
            "ShowKeySet": true
          }
        }
      API_SCOPES_PATH: /tmp/config/api_scopes.json
      API_RESOURCES_PATH: /tmp/config/api_resources.json
      USERS_CONFIGURATION_PATH: /tmp/config/users.json
      CLIENTS_CONFIGURATION_PATH: /tmp/config/clients-config.json
      ASPNETCORE_URLS: https://+:8443;http://+:80
      # ASPNETCORE_Kestrel__Certificates__Default__Password: <password for pfx file>
      ASPNETCORE_Kestrel__Certificates__Default__Path: /tmp/pkcs12/certificate.pfx
    volumes:
      - ./oauth/pkcs12:/tmp/pkcs12:ro
      - ./oauth:/tmp/config:ro
    networks:
       corporanet:
          aliases:
            - oidc.corporanet.local
networks:
  corporanet:
volumes:
  database:
  localstack:
