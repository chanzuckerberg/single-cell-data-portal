{"uid":"b2adc41da990db52","name":"test_type_inference[parameters1]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"071815171b365d285c97175182ccf0e7","time":{"start":1702928944269,"stop":1702928944270,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1702928929041,"stop":1702928929041,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1702928944269,"stop":1702928944269,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1702928944270,"stop":1702928944270,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"c8c1b9ed13a6"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0    False\n1     True\n2    False\n3     True\ndtype: bool, 'expected_encoding_dtype': <class 'numpy.uint8'>, 'expected_schema_hint': {'type': 'boolean'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"f23abccd602ad57b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17940//#testresult/f23abccd602ad57b","status":"passed","time":{"start":1702928465598,"stop":1702928465598,"duration":0}},{"uid":"939a233b851c4bf5","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17939//#testresult/939a233b851c4bf5","status":"passed","time":{"start":1702928455021,"stop":1702928455021,"duration":0}},{"uid":"87416533d3d078df","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17938//#testresult/87416533d3d078df","status":"passed","time":{"start":1702927925924,"stop":1702927925925,"duration":1}},{"uid":"54ebdcbbfd98a232","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17937//#testresult/54ebdcbbfd98a232","status":"passed","time":{"start":1702927371867,"stop":1702927371867,"duration":0}},{"uid":"53ead9b47a28a1a6","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17936//#testresult/53ead9b47a28a1a6","status":"passed","time":{"start":1702926366208,"stop":1702926366208,"duration":0}},{"uid":"c96a2b947673f9ef","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17935//#testresult/c96a2b947673f9ef","status":"passed","time":{"start":1702925518914,"stop":1702925518915,"duration":1}},{"uid":"5be05682119e9a5","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17934//#testresult/5be05682119e9a5","status":"passed","time":{"start":1702925452701,"stop":1702925452701,"duration":0}},{"uid":"ec1e2a04be58d8f5","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17933//#testresult/ec1e2a04be58d8f5","status":"passed","time":{"start":1702924127866,"stop":1702924127867,"duration":1}},{"uid":"d0eb60dc5723f15c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17882//#testresult/d0eb60dc5723f15c","status":"passed","time":{"start":1702513219103,"stop":1702513219103,"duration":0}}]},"tags":[]},"source":"b2adc41da990db52.json","parameterValues":["{'data': 0    False\n1     True\n2    False\n3     True\ndtype: bool, 'expected_encoding_dtype': <class 'numpy.uint8'>, 'expected_schema_hint': {'type': 'boolean'}}"]}