{"uid":"271b835bb0fb93de","name":"test_type_inference[parameters94]","fullName":"tests.unit.backend.layers.utils.test_type_conversion_utils#test_type_inference","historyId":"096a48773a62d8baaf02787fa77b78b1","time":{"start":1702933817147,"stop":1702933817148,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1702933802570,"stop":1702933802570,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1702933817147,"stop":1702933817147,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"bd3b32b9a870f389","name":"log","source":"bd3b32b9a870f389.txt","type":"text/plain","size":341},{"uid":"3800f85623042be6","name":"stderr","source":"3800f85623042be6.txt","type":"text/plain","size":852}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1702933817149,"stop":1702933817149,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.backend.layers.utils"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"300058bd7c94"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.backend.layers.utils.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': [0, 1, NaN]\nCategories (2, int64): [0, 1], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"fa89952863170020","status":"passed","time":{"start":1702933817128,"stop":1702933817129,"duration":1}},{"uid":"8208cf45f35d4274","status":"passed","time":{"start":1702933817108,"stop":1702933817109,"duration":1}},{"uid":"9cb8fb4cd24c0203","status":"passed","time":{"start":1702933817088,"stop":1702933817089,"duration":1}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":16,"unknown":0,"total":16},"items":[{"uid":"cd959ccaa02dd547","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17947//#testresult/cd959ccaa02dd547","status":"passed","time":{"start":1702933176666,"stop":1702933176667,"duration":1}},{"uid":"ae0398c4680d52d0","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17946//#testresult/ae0398c4680d52d0","status":"passed","time":{"start":1702931717372,"stop":1702931717373,"duration":1}},{"uid":"5a50b72abaa796f4","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17944//#testresult/5a50b72abaa796f4","status":"passed","time":{"start":1702931120451,"stop":1702931120452,"duration":1}},{"uid":"425360783b3a40f3","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17943//#testresult/425360783b3a40f3","status":"passed","time":{"start":1702931103944,"stop":1702931103945,"duration":1}},{"uid":"d7581ddb3d089649","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17942//#testresult/d7581ddb3d089649","status":"passed","time":{"start":1702930348690,"stop":1702930348691,"duration":1}},{"uid":"5f3e0d649edb4c2","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17941//#testresult/5f3e0d649edb4c2","status":"passed","time":{"start":1702928944704,"stop":1702928944705,"duration":1}},{"uid":"fc6862e65537a153","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17940//#testresult/fc6862e65537a153","status":"passed","time":{"start":1702928466023,"stop":1702928466024,"duration":1}},{"uid":"c50729fe50e03122","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17939//#testresult/c50729fe50e03122","status":"passed","time":{"start":1702928455438,"stop":1702928455439,"duration":1}},{"uid":"238bf686ac470476","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17938//#testresult/238bf686ac470476","status":"passed","time":{"start":1702927926342,"stop":1702927926343,"duration":1}},{"uid":"ef4aa7333422cba2","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17937//#testresult/ef4aa7333422cba2","status":"passed","time":{"start":1702927372307,"stop":1702927372308,"duration":1}},{"uid":"edd60a174d9500fd","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17936//#testresult/edd60a174d9500fd","status":"passed","time":{"start":1702926366626,"stop":1702926366627,"duration":1}},{"uid":"680b15f450c156bb","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17935//#testresult/680b15f450c156bb","status":"passed","time":{"start":1702925519333,"stop":1702925519334,"duration":1}},{"uid":"25e97355365f559a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17934//#testresult/25e97355365f559a","status":"passed","time":{"start":1702925453131,"stop":1702925453132,"duration":1}},{"uid":"bb47bb089fa05d4b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17933//#testresult/bb47bb089fa05d4b","status":"passed","time":{"start":1702924128294,"stop":1702924128295,"duration":1}},{"uid":"27a3b1d276a20d4d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/17882//#testresult/27a3b1d276a20d4d","status":"passed","time":{"start":1702513219516,"stop":1702513219517,"duration":1}}]},"tags":[]},"source":"271b835bb0fb93de.json","parameterValues":["{'data': [0, 1, NaN]\nCategories (2, int64): [0, 1], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}