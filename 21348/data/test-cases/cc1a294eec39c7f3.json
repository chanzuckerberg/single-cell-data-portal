{"uid":"cc1a294eec39c7f3","name":"test_type_inference[parameters48]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"dfd40ade9090659943c4d8e3c73f6130","time":{"start":1720646550265,"stop":1720646550266,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720646498772,"stop":1720646498772,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1720646550265,"stop":1720646550265,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"354f7e375c63eb47","name":"log","source":"354f7e375c63eb47.txt","type":"text/plain","size":341},{"uid":"e33e5c6763c00206","name":"stdout","source":"e33e5c6763c00206.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1720646550267,"stop":1720646550267,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"2ccb1cc30369"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': Float64Index([-129.0, -128.0, -127.0, -126.0, -125.0, -124.0, -123.0, -122.0,\n              -121.0, -120.0,\n              ...\n               990.0,  991.0,  992.0,  993.0,  994.0,  995.0,  996.0,  997.0,\n               998.0,  999.0],\n             dtype='float64', length=1129), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"16af80cca332f60a","status":"passed","time":{"start":1720646550242,"stop":1720646550242,"duration":0}},{"uid":"67257da435853963","status":"passed","time":{"start":1720646550218,"stop":1720646550219,"duration":1}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":5},"items":[{"uid":"8321b7a9df0b9ec8","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21341//#testresult/8321b7a9df0b9ec8","status":"passed","time":{"start":1720640018381,"stop":1720640018382,"duration":1}},{"uid":"6e292493d04697ec","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21340//#testresult/6e292493d04697ec","status":"passed","time":{"start":1720638027743,"stop":1720638027744,"duration":1}},{"uid":"ffd26501d217a546","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21339//#testresult/ffd26501d217a546","status":"passed","time":{"start":1720637367797,"stop":1720637367798,"duration":1}},{"uid":"82b07570ce5c57cb","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21338//#testresult/82b07570ce5c57cb","status":"passed","time":{"start":1720637236521,"stop":1720637236522,"duration":1}}]},"tags":[]},"source":"cc1a294eec39c7f3.json","parameterValues":["{'data': Float64Index([-129.0, -128.0, -127.0, -126.0, -125.0, -124.0, -123.0, -122.0,\n              -121.0, -120.0,\n              ...\n               990.0,  991.0,  992.0,  993.0,  994.0,  995.0,  996.0,  997.0,\n               998.0,  999.0],\n             dtype='float64', length=1129), 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}