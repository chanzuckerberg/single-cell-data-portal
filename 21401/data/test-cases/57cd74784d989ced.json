{"uid":"57cd74784d989ced","name":"test_type_inference[parameters32]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"fa2e35b1dec83e98590429a6a22f6d77","time":{"start":1720799665809,"stop":1720799665810,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720799611445,"stop":1720799611445,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1720799665808,"stop":1720799665809,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1720799665810,"stop":1720799665810,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"d7a22c93d594"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': UInt64Index([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,\n             ...\n             990, 991, 992, 993, 994, 995, 996, 997, 998, 999],\n            dtype='uint64', length=1000), 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"a1487c482e3e04f6","status":"passed","time":{"start":1720799665766,"stop":1720799665767,"duration":1}},{"uid":"67250c675a2a04a","status":"passed","time":{"start":1720799665724,"stop":1720799665724,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":18,"unknown":0,"total":18},"items":[{"uid":"68e7ce1283b3e2ad","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21400//#testresult/68e7ce1283b3e2ad","status":"passed","time":{"start":1720799575850,"stop":1720799575850,"duration":0}},{"uid":"3a0928e600583399","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21397//#testresult/3a0928e600583399","status":"passed","time":{"start":1720738873416,"stop":1720738873417,"duration":1}},{"uid":"af5e8ace4840893e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21399//#testresult/af5e8ace4840893e","status":"passed","time":{"start":1720736718617,"stop":1720736718618,"duration":1}},{"uid":"9b2afc90137ecbcb","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21389//#testresult/9b2afc90137ecbcb","status":"passed","time":{"start":1720734522504,"stop":1720734522505,"duration":1}},{"uid":"8045eba2f3631d8c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21388//#testresult/8045eba2f3631d8c","status":"passed","time":{"start":1720731703068,"stop":1720731703069,"duration":1}},{"uid":"4a9cb73d4435aaf9","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21387//#testresult/4a9cb73d4435aaf9","status":"passed","time":{"start":1720731414300,"stop":1720731414300,"duration":0}},{"uid":"3002694704ff277a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21386//#testresult/3002694704ff277a","status":"passed","time":{"start":1720720819060,"stop":1720720819060,"duration":0}},{"uid":"abcd9aa07f5c071c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21384//#testresult/abcd9aa07f5c071c","status":"passed","time":{"start":1720713742509,"stop":1720713742509,"duration":0}},{"uid":"97ffd178bbd62a7d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21383//#testresult/97ffd178bbd62a7d","status":"passed","time":{"start":1720668473700,"stop":1720668473700,"duration":0}},{"uid":"ee3da22960f30b83","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21381//#testresult/ee3da22960f30b83","status":"passed","time":{"start":1720667369025,"stop":1720667369025,"duration":0}},{"uid":"24bbac2ad303933b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21380//#testresult/24bbac2ad303933b","status":"passed","time":{"start":1720663187671,"stop":1720663187672,"duration":1}},{"uid":"d17fd7235d3dc447","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21379//#testresult/d17fd7235d3dc447","status":"passed","time":{"start":1720663113569,"stop":1720663113569,"duration":0}},{"uid":"fe9ca3a347f8b82f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21377//#testresult/fe9ca3a347f8b82f","status":"passed","time":{"start":1720662780848,"stop":1720662780849,"duration":1}},{"uid":"8f114c3bdcbb2027","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21376//#testresult/8f114c3bdcbb2027","status":"passed","time":{"start":1720657324169,"stop":1720657324169,"duration":0}},{"uid":"a358c36326b2bfb1","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21375//#testresult/a358c36326b2bfb1","status":"passed","time":{"start":1720656981962,"stop":1720656981963,"duration":1}},{"uid":"240f1ce3961b503a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21373//#testresult/240f1ce3961b503a","status":"passed","time":{"start":1720656033829,"stop":1720656033829,"duration":0}},{"uid":"3238d071935c0492","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21372//#testresult/3238d071935c0492","status":"passed","time":{"start":1720655800874,"stop":1720655800875,"duration":1}}]},"tags":[]},"source":"57cd74784d989ced.json","parameterValues":["{'data': UInt64Index([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,\n             ...\n             990, 991, 992, 993, 994, 995, 996, 997, 998, 999],\n            dtype='uint64', length=1000), 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}