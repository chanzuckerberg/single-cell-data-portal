{"uid":"9e08e1bdbfa57cd7","name":"test_type_inference[parameters80]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"6e1a8ce775aac3cbfaa7265e05c4e162","time":{"start":1720647304782,"stop":1720647304783,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720647247963,"stop":1720647247963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1720647304781,"stop":1720647304781,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"e3e1b8ff19642752","name":"log","source":"e3e1b8ff19642752.txt","type":"text/plain","size":341},{"uid":"5e4ea61b968a26a0","name":"stdout","source":"5e4ea61b968a26a0.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1720647304783,"stop":1720647304784,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"9b04f2ba0370"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': [0.0, 1.0, 2.0]\nCategories (3, float64): [0.0, 1.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"919b750b4286111f","status":"passed","time":{"start":1720647304765,"stop":1720647304766,"duration":1}},{"uid":"4647e0a0d3961add","status":"passed","time":{"start":1720647304748,"stop":1720647304749,"duration":1}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":7},"items":[{"uid":"903e2d17679569dd","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21350//#testresult/903e2d17679569dd","status":"passed","time":{"start":1720646952024,"stop":1720646952025,"duration":1}},{"uid":"1655fa606d2066a3","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21348//#testresult/1655fa606d2066a3","status":"passed","time":{"start":1720646550404,"stop":1720646550405,"duration":1}},{"uid":"8aaede6c99d33d31","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21341//#testresult/8aaede6c99d33d31","status":"passed","time":{"start":1720640018521,"stop":1720640018522,"duration":1}},{"uid":"fbe709999416620b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21340//#testresult/fbe709999416620b","status":"passed","time":{"start":1720638027887,"stop":1720638027888,"duration":1}},{"uid":"ba969c534f1322f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21339//#testresult/ba969c534f1322f","status":"passed","time":{"start":1720637367939,"stop":1720637367940,"duration":1}},{"uid":"62fb3e355124d3eb","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21338//#testresult/62fb3e355124d3eb","status":"passed","time":{"start":1720637236660,"stop":1720637236661,"duration":1}}]},"tags":[]},"source":"9e08e1bdbfa57cd7.json","parameterValues":["{'data': [0.0, 1.0, 2.0]\nCategories (3, float64): [0.0, 1.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}