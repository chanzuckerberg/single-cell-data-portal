{"uid":"17491e879b467c3e","name":"test_type_inference[parameters102]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"9642131ed1f31e82263969326f7838b0","time":{"start":1720647304895,"stop":1720647304896,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720647247963,"stop":1720647247963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1720647304894,"stop":1720647304894,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"1a294880926740b6","name":"log","source":"1a294880926740b6.txt","type":"text/plain","size":341},{"uid":"6d70ebfc06ac050","name":"stdout","source":"6d70ebfc06ac050.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1720647304896,"stop":1720647304896,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"9b04f2ba0370"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': [0.0, 1.0, NaN]\nCategories (2, float64): [0.0, 1.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1ee3a8e259c09e20","status":"passed","time":{"start":1720647304883,"stop":1720647304885,"duration":2}},{"uid":"84ba5b821d9b2e7d","status":"passed","time":{"start":1720647304872,"stop":1720647304873,"duration":1}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":7},"items":[{"uid":"146273efd028d2ab","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21350//#testresult/146273efd028d2ab","status":"passed","time":{"start":1720646952137,"stop":1720646952138,"duration":1}},{"uid":"79f375df081932d6","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21348//#testresult/79f375df081932d6","status":"passed","time":{"start":1720646550517,"stop":1720646550518,"duration":1}},{"uid":"9adfd12f6cfa98cd","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21341//#testresult/9adfd12f6cfa98cd","status":"passed","time":{"start":1720640018636,"stop":1720640018637,"duration":1}},{"uid":"a8f04d4941407da9","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21340//#testresult/a8f04d4941407da9","status":"passed","time":{"start":1720638028005,"stop":1720638028005,"duration":0}},{"uid":"5a6ddda8b31d1aee","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21339//#testresult/5a6ddda8b31d1aee","status":"passed","time":{"start":1720637368053,"stop":1720637368054,"duration":1}},{"uid":"23a71386d38cc613","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21338//#testresult/23a71386d38cc613","status":"passed","time":{"start":1720637236774,"stop":1720637236775,"duration":1}}]},"tags":[]},"source":"17491e879b467c3e.json","parameterValues":["{'data': [0.0, 1.0, NaN]\nCategories (2, float64): [0.0, 1.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}