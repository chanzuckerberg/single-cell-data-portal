{"uid":"314912a66c014c1","name":"test_type_inference[parameters78]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"371ab4604c8a9d123ca891b354dcfb4a","time":{"start":1720647304771,"stop":1720647304772,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720647247963,"stop":1720647247963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1720647304769,"stop":1720647304769,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"2fa387eff504a7d","name":"log","source":"2fa387eff504a7d.txt","type":"text/plain","size":341},{"uid":"4dbc95d29b49b30e","name":"stdout","source":"4dbc95d29b49b30e.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1720647304772,"stop":1720647304772,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"9b04f2ba0370"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0    0.0\n1    1.0\n2    2.0\ndtype: category\nCategories (3, float64): [0.0, 1.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"edb488c5c1e7fb7d","status":"passed","time":{"start":1720647304754,"stop":1720647304754,"duration":0}},{"uid":"9a8338f70d0cdd86","status":"passed","time":{"start":1720647304736,"stop":1720647304737,"duration":1}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":7},"items":[{"uid":"ab10480fc9e7d558","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21350//#testresult/ab10480fc9e7d558","status":"passed","time":{"start":1720646952013,"stop":1720646952014,"duration":1}},{"uid":"86e3e26ceb86ea","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21348//#testresult/86e3e26ceb86ea","status":"passed","time":{"start":1720646550392,"stop":1720646550393,"duration":1}},{"uid":"59f697a220a0453d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21341//#testresult/59f697a220a0453d","status":"passed","time":{"start":1720640018509,"stop":1720640018510,"duration":1}},{"uid":"4c07a0c729570b33","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21340//#testresult/4c07a0c729570b33","status":"passed","time":{"start":1720638027875,"stop":1720638027876,"duration":1}},{"uid":"32f7c7361d89da30","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21339//#testresult/32f7c7361d89da30","status":"passed","time":{"start":1720637367927,"stop":1720637367928,"duration":1}},{"uid":"22ccabc4a2e1970c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21338//#testresult/22ccabc4a2e1970c","status":"passed","time":{"start":1720637236648,"stop":1720637236649,"duration":1}}]},"tags":[]},"source":"314912a66c014c1.json","parameterValues":["{'data': 0    0.0\n1    1.0\n2    2.0\ndtype: category\nCategories (3, float64): [0.0, 1.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}