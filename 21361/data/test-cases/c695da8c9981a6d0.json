{"uid":"c695da8c9981a6d0","name":"test_type_inference[parameters32]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"fa2e35b1dec83e98590429a6a22f6d77","time":{"start":1720648366843,"stop":1720648366844,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720648311168,"stop":1720648311168,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1720648366842,"stop":1720648366843,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1720648366844,"stop":1720648366844,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"40de3588317a"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': UInt64Index([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,\n             ...\n             990, 991, 992, 993, 994, 995, 996, 997, 998, 999],\n            dtype='uint64', length=1000), 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4021661087cd1ac9","status":"passed","time":{"start":1720648366805,"stop":1720648366806,"duration":1}},{"uid":"1f4fafe39a4d3e2d","status":"passed","time":{"start":1720648366766,"stop":1720648366767,"duration":1}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":9,"unknown":0,"total":9},"items":[{"uid":"9f16552fb0ca45dc","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21352//#testresult/9f16552fb0ca45dc","status":"passed","time":{"start":1720647469542,"stop":1720647469543,"duration":1}},{"uid":"cfd6897de2d7fd01","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21351//#testresult/cfd6897de2d7fd01","status":"passed","time":{"start":1720647304584,"stop":1720647304585,"duration":1}},{"uid":"5e35fc20e0a7757","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21350//#testresult/5e35fc20e0a7757","status":"passed","time":{"start":1720646951825,"stop":1720646951825,"duration":0}},{"uid":"2fa057196dcda873","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21348//#testresult/2fa057196dcda873","status":"passed","time":{"start":1720646550203,"stop":1720646550203,"duration":0}},{"uid":"150d3f3a5c315005","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21341//#testresult/150d3f3a5c315005","status":"passed","time":{"start":1720640018319,"stop":1720640018320,"duration":1}},{"uid":"d4f96d0deee1f318","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21340//#testresult/d4f96d0deee1f318","status":"passed","time":{"start":1720638027679,"stop":1720638027680,"duration":1}},{"uid":"e9b5ae89e7eb5a1c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21339//#testresult/e9b5ae89e7eb5a1c","status":"passed","time":{"start":1720637367735,"stop":1720637367735,"duration":0}},{"uid":"fd5dbff5c5809bf0","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21338//#testresult/fd5dbff5c5809bf0","status":"passed","time":{"start":1720637236459,"stop":1720637236460,"duration":1}}]},"tags":[]},"source":"c695da8c9981a6d0.json","parameterValues":["{'data': UInt64Index([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,\n             ...\n             990, 991, 992, 993, 994, 995, 996, 997, 998, 999],\n            dtype='uint64', length=1000), 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}