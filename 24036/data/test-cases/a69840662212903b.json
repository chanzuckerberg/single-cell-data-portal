{"uid":"a69840662212903b","name":"test_type_inference[parameters32]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"8ec1ee4de73667624d73dbdaee36af12","time":{"start":1744646979549,"stop":1744646979550,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1744646968994,"stop":1744646968994,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1744646979548,"stop":1744646979549,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1744646979550,"stop":1744646979550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"c8f444d5c08e"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': Index([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,\n       ...\n       990, 991, 992, 993, 994, 995, 996, 997, 998, 999],\n      dtype='uint64', length=1000), 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":9,"unknown":0,"total":9},"items":[{"uid":"cdfbe6efd38de1a3","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24034//#testresult/cdfbe6efd38de1a3","status":"passed","time":{"start":1744645891013,"stop":1744645891014,"duration":1}},{"uid":"944414107bb29aaa","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24033//#testresult/944414107bb29aaa","status":"passed","time":{"start":1744643892448,"stop":1744643892448,"duration":0}},{"uid":"54aa37a6281abe4f","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24023//#testresult/54aa37a6281abe4f","status":"passed","time":{"start":1744637601666,"stop":1744637601666,"duration":0}},{"uid":"1a4444a6225b4b4c","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24017//#testresult/1a4444a6225b4b4c","status":"passed","time":{"start":1744407043591,"stop":1744407043592,"duration":1}},{"uid":"68000886e6a41adb","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24016//#testresult/68000886e6a41adb","status":"passed","time":{"start":1744406937152,"stop":1744406937153,"duration":1}},{"uid":"813051dcddb3456","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24015//#testresult/813051dcddb3456","status":"passed","time":{"start":1744404330084,"stop":1744404330084,"duration":0}},{"uid":"98ff1ad510c86c84","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24012//#testresult/98ff1ad510c86c84","status":"passed","time":{"start":1744402200161,"stop":1744402200162,"duration":1}},{"uid":"a5c98f9461043528","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/24009//#testresult/a5c98f9461043528","status":"passed","time":{"start":1744400192560,"stop":1744400192560,"duration":0}}]},"tags":[]},"source":"a69840662212903b.json","parameterValues":["{'data': Index([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,\n       ...\n       990, 991, 992, 993, 994, 995, 996, 997, 998, 999],\n      dtype='uint64', length=1000), 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'int32'}}"]}