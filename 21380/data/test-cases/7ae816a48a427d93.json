{"uid":"7ae816a48a427d93","name":"test_type_inference[parameters78]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"371ab4604c8a9d123ca891b354dcfb4a","time":{"start":1720663187862,"stop":1720663187862,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720663139624,"stop":1720663139624,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1720663187860,"stop":1720663187860,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"cd4c02e5bb5639f2","name":"log","source":"cd4c02e5bb5639f2.txt","type":"text/plain","size":341},{"uid":"978742c455cba88d","name":"stdout","source":"978742c455cba88d.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1720663187863,"stop":1720663187863,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"9725f9b88181"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0    0.0\n1    1.0\n2    2.0\ndtype: category\nCategories (3, float64): [0.0, 1.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"adb36e9a8d638a7a","status":"passed","time":{"start":1720663187844,"stop":1720663187845,"duration":1}},{"uid":"db559b9c4e0904a1","status":"passed","time":{"start":1720663187827,"stop":1720663187828,"duration":1}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":7},"items":[{"uid":"682e54ba2a9d7152","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21379//#testresult/682e54ba2a9d7152","status":"passed","time":{"start":1720663113758,"stop":1720663113759,"duration":1}},{"uid":"b6d2fd0477bd8e05","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21377//#testresult/b6d2fd0477bd8e05","status":"passed","time":{"start":1720662781036,"stop":1720662781037,"duration":1}},{"uid":"3703b06f89599cb","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21376//#testresult/3703b06f89599cb","status":"passed","time":{"start":1720657324356,"stop":1720657324357,"duration":1}},{"uid":"8ad1eff9c5b9c488","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21375//#testresult/8ad1eff9c5b9c488","status":"passed","time":{"start":1720656982153,"stop":1720656982154,"duration":1}},{"uid":"c4f12e7a78a2e417","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21373//#testresult/c4f12e7a78a2e417","status":"passed","time":{"start":1720656034017,"stop":1720656034018,"duration":1}},{"uid":"564b0eeab599eea5","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21372//#testresult/564b0eeab599eea5","status":"passed","time":{"start":1720655801061,"stop":1720655801062,"duration":1}}]},"tags":[]},"source":"7ae816a48a427d93.json","parameterValues":["{'data': 0    0.0\n1    1.0\n2    2.0\ndtype: category\nCategories (3, float64): [0.0, 1.0, 2.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}