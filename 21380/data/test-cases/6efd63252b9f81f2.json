{"uid":"6efd63252b9f81f2","name":"test_type_inference[parameters94]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"2da1c62eadaaed1a0d9f1679e43040a0","time":{"start":1720663187943,"stop":1720663187944,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720663139624,"stop":1720663139624,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1720663187942,"stop":1720663187943,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"8e17325e9d14f360","name":"log","source":"8e17325e9d14f360.txt","type":"text/plain","size":341},{"uid":"e743bde5fbb555e5","name":"stdout","source":"e743bde5fbb555e5.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1720663187945,"stop":1720663187945,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"9725f9b88181"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': [0, 1, NaN]\nCategories (2, int64): [0, 1], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"25300868d378884b","status":"passed","time":{"start":1720663187923,"stop":1720663187924,"duration":1}},{"uid":"e99827110adaec8b","status":"passed","time":{"start":1720663187904,"stop":1720663187904,"duration":0}},{"uid":"48d626285e40755f","status":"passed","time":{"start":1720663187884,"stop":1720663187885,"duration":1}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":7},"items":[{"uid":"49bccbd893c7e230","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21379//#testresult/49bccbd893c7e230","status":"passed","time":{"start":1720663113840,"stop":1720663113841,"duration":1}},{"uid":"78e7486b1ad9614e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21377//#testresult/78e7486b1ad9614e","status":"passed","time":{"start":1720662781117,"stop":1720662781118,"duration":1}},{"uid":"954676dae4e9fa16","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21376//#testresult/954676dae4e9fa16","status":"passed","time":{"start":1720657324437,"stop":1720657324438,"duration":1}},{"uid":"41de40e2e509dc21","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21375//#testresult/41de40e2e509dc21","status":"passed","time":{"start":1720656982235,"stop":1720656982236,"duration":1}},{"uid":"8144ffd454e3144e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21373//#testresult/8144ffd454e3144e","status":"passed","time":{"start":1720656034099,"stop":1720656034100,"duration":1}},{"uid":"25c38e616eaad861","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21372//#testresult/25c38e616eaad861","status":"passed","time":{"start":1720655801142,"stop":1720655801143,"duration":1}}]},"tags":[]},"source":"6efd63252b9f81f2.json","parameterValues":["{'data': [0, 1, NaN]\nCategories (2, int64): [0, 1], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}