{"uid":"be9c62c90a78463d","name":"test_type_inference[parameters102]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"9642131ed1f31e82263969326f7838b0","time":{"start":1720663187987,"stop":1720663187988,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720663139624,"stop":1720663139624,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1720663187986,"stop":1720663187986,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"78e18a5ba88b1aa5","name":"log","source":"78e18a5ba88b1aa5.txt","type":"text/plain","size":341},{"uid":"4af8e7c86372dc8","name":"stdout","source":"4af8e7c86372dc8.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1720663187988,"stop":1720663187988,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"9725f9b88181"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': [0.0, 1.0, NaN]\nCategories (2, float64): [0.0, 1.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"28165be91b20e7d9","status":"passed","time":{"start":1720663187976,"stop":1720663187977,"duration":1}},{"uid":"8207015da7db2825","status":"passed","time":{"start":1720663187964,"stop":1720663187965,"duration":1}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":7},"items":[{"uid":"607ebb0b86b7944b","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21379//#testresult/607ebb0b86b7944b","status":"passed","time":{"start":1720663113884,"stop":1720663113885,"duration":1}},{"uid":"4afc11d3d077f121","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21377//#testresult/4afc11d3d077f121","status":"passed","time":{"start":1720662781161,"stop":1720662781162,"duration":1}},{"uid":"ed91eb51901443fe","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21376//#testresult/ed91eb51901443fe","status":"passed","time":{"start":1720657324480,"stop":1720657324480,"duration":0}},{"uid":"81dd93c72b9384fe","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21375//#testresult/81dd93c72b9384fe","status":"passed","time":{"start":1720656982279,"stop":1720656982280,"duration":1}},{"uid":"14bfb09d2d2ef14d","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21373//#testresult/14bfb09d2d2ef14d","status":"passed","time":{"start":1720656034142,"stop":1720656034143,"duration":1}},{"uid":"cbf7701f273b0267","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21372//#testresult/cbf7701f273b0267","status":"passed","time":{"start":1720655801185,"stop":1720655801186,"duration":1}}]},"tags":[]},"source":"be9c62c90a78463d.json","parameterValues":["{'data': [0.0, 1.0, NaN]\nCategories (2, float64): [0.0, 1.0], 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'categorical'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}