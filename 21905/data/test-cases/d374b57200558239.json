{"uid":"d374b57200558239","name":"test_type_inference[parameters58]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"9b05f4193be4c45ba86d341f0a992e90","time":{"start":1724897025774,"stop":1724897025774,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1724896969542,"stop":1724896969542,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1724897025773,"stop":1724897025773,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"caplog::0","time":{"start":1724897025775,"stop":1724897025775,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"2335ef7dbc37"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': 0    0\n1    1\n2    2\ndtype: category\nCategories (3, int8): [0, 1, 2], 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'categorical'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"4a4ddd8c45355ca7","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21904//#testresult/4a4ddd8c45355ca7","status":"passed","time":{"start":1724893182347,"stop":1724893182348,"duration":1}},{"uid":"e964dd5bbfc72322","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21903//#testresult/e964dd5bbfc72322","status":"passed","time":{"start":1724891533695,"stop":1724891533696,"duration":1}},{"uid":"3f821277c7db39db","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21898//#testresult/3f821277c7db39db","status":"passed","time":{"start":1724878457796,"stop":1724878457796,"duration":0}},{"uid":"2839f32900a7854a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21890//#testresult/2839f32900a7854a","status":"passed","time":{"start":1724781301959,"stop":1724781301959,"duration":0}},{"uid":"2c9c6acc06bcbc49","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21879//#testresult/2c9c6acc06bcbc49","status":"passed","time":{"start":1724687441501,"stop":1724687441502,"duration":1}},{"uid":"b50ed17cca114b43","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21867//#testresult/b50ed17cca114b43","status":"passed","time":{"start":1724352832110,"stop":1724352832110,"duration":0}},{"uid":"f4a090015311e579","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21860//#testresult/f4a090015311e579","status":"passed","time":{"start":1724286703455,"stop":1724286703456,"duration":1}},{"uid":"8689fcfadec2e344","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21859//#testresult/8689fcfadec2e344","status":"passed","time":{"start":1724285181908,"stop":1724285181909,"duration":1}},{"uid":"ac8f560820f5730a","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21857//#testresult/ac8f560820f5730a","status":"passed","time":{"start":1724281806700,"stop":1724281806700,"duration":0}}]},"tags":[]},"source":"d374b57200558239.json","parameterValues":["{'data': 0    0\n1    1\n2    2\ndtype: category\nCategories (3, int8): [0, 1, 2], 'expected_encoding_dtype': <class 'numpy.int32'>, 'expected_schema_hint': {'type': 'categorical'}}"]}