{"uid":"a1278ebdb563a31e","name":"test_type_inference[parameters51]","fullName":"tests.unit.processing.test_type_conversion_utils#test_type_inference","historyId":"f21283bcdffe46de01ee370b51c5feba","time":{"start":1720638027756,"stop":1720638027757,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"patch_all","time":{"start":1720637973709,"stop":1720637973709,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"caplog","time":{"start":1720638027755,"stop":1720638027755,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"d8c261c74d0d7178","name":"log","source":"d8c261c74d0d7178.txt","type":"text/plain","size":341},{"uid":"17d268a8af37d6d6","name":"stdout","source":"17d268a8af37d6d6.txt","type":"text/plain","size":831}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"caplog::0","time":{"start":1720638027757,"stop":1720638027757,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.processing"},{"name":"suite","value":"test_type_conversion_utils"},{"name":"host","value":"7dc2444b716c"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.processing.test_type_conversion_utils"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"parameters","value":"{'data': <10x100 sparse matrix of type '<class 'numpy.float64'>'\n\twith 0 stored elements in Compressed Sparse Row format>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":3},"items":[{"uid":"8c476651dc28e30e","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21339//#testresult/8c476651dc28e30e","status":"passed","time":{"start":1720637367810,"stop":1720637367810,"duration":0}},{"uid":"b8f3abdb5bf3fdf4","reportUrl":"https://chanzuckerberg.github.io/single-cell-data-portal/21338//#testresult/b8f3abdb5bf3fdf4","status":"passed","time":{"start":1720637236533,"stop":1720637236534,"duration":1}}]},"tags":[]},"source":"a1278ebdb563a31e.json","parameterValues":["{'data': <10x100 sparse matrix of type '<class 'numpy.float64'>'\n\twith 0 stored elements in Compressed Sparse Row format>, 'expected_encoding_dtype': <class 'numpy.float32'>, 'expected_schema_hint': {'type': 'float32'}, 'logs': {'level': 30, 'output': 'may lose precision'}}"]}